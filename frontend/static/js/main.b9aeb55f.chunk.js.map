{"version":3,"sources":["redux/redux-sauce/auth.js","redux/api/endpoints.js","redux/api/utils.js","redux/api/authApi.js","redux/api/jobsApi.js","redux/sagas/authSagas.js","redux/sagas/jobsSagas.js","redux/sagas/index.js","redux/store/index.js","containers/Main.js","components/JobForms.js","containers/CreateFirstJob.js","containers/ViberLogin.js","containers/HeaderContainer.js","containers/ZakazchikAcc.js","index.js","redux/redux-sauce/jobs.js"],"names":["createActions","loginRequest","loginSuccess","loginFailure","logoutRequest","logoutSuccess","logoutFailure","checkTokenRequest","checkTokenSuccess","checkTokenFail","Types","Creators","AuthTypes","INITIAL_STATE","Immutable","fetching","user","error","isLoggedIn","isLoggingIn","AuthSelectors","getUser","state","data","merge","action","payload","profile","reducer","createReducer","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","CHECK_TOKEN_REQUEST","CHECK_TOKEN_FAIL","CHECK_TOKEN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","apiUrl","JWT_AUTH","JWT_CHECK_TOKEN","SIGNUP","GET_JOBS","getJobDetail","id","activateDeactivateJobDetail","CREATE_FIRST_JOB","GET_CATEGORIES","parseErrorData","response","errorObj","status","statusText","message","JSON","stringify","property","createUrlParamsFromFilters","filters","params","URLSearchParams","Object","keys","forEach","key","Array","append","map","value","logIn","username","password","axios","post","endpoints","then","Error","token","catch","err","localStorage","setItem","checkToken","logOut","removeItem","getJobs","get","getCategories","getItem","url","method","createFirstJob","name","phone","title","description","budget","address","start_date","end_date","category","formData","FormData","headers","partialUpdateJob","activateDeactivateJob","active","createJob","api","put","AuthActions","resetAuthErrors","call","toggleModal","JobsActions","getJobsSuccess","getJobsFail","getJobDetailSuccess","getJobDetailFail","getCategoriesSuccess","results","getCategoriesFail","createFirstJobSuccess","createFirstJobFail","partialUpdateJobSuccess","partialUpdateJobFail","activateDeactivateJobSuccess","activateDeactivateJobFail","createJobSuccess","createJobFail","root","authApi","AuthApi","jobsApi","JobsApi","all","takeEvery","JobsTypes","GET_JOBS_REQUEST","jobsSaga","GET_JOB_DETAIL_REQUEST","GET_CATEGORIES_REQUEST","CREATE_FIRST_JOB_REQUEST","PARTIAL_UPDATE_JOB_REQUEST","ACTIVATE_DEACTIVATE_JOB_REQUEST","CREATE_JOB_REQUEST","reducers","combineReducers","auth","require","jobs","form","formReducer","JobBlock","props","job","className","href","zakazchik","created_ago","Categories","categories","length","ru_name","Main","this","listFetching","errorList","Component","connect","notifications","dispatch","query","getCategoriesRequest","getJobsRequest","renderField","input","label","placeholder","type","meta","touched","warning","JobForm2","handleSubmit","pristine","reset","submitting","setData","jobDate","Field","component","defaultValue","onChange","JobFirstCreateForm","bind","e","setState","target","onSubmit","nickname","onClick","disabled","reduxForm","JobCreateForm","initialValues","JobUpdateForm","clickJobEdit","data-id","JobFirstCreateShop","submitCreateShop","preventDefault","jobFirstCreate","values","history","push","to","pathname","shopName","shopPhone","shopInfo","routing","createFirstJobRequest","ViberAuthenticationComponent","match","access","ModalAuth","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","Header","viber_name","logout","data-toggle","data-target","JobEditable","jobEditId","edit","clickEditDone","clickDeactivate","JobsEditable","jobsEditList","needToRefresh","clickCreateNew","dataset","jobUpdate","jobCreate","eventFetching","setTimeout","refreshSowsList","ZakazchikAcc","user_id","partialUpdateJobRequest","activateDeactivateJobRequest","createJobRequest","store","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","configureStore","ReactDOM","render","exact","path","document","getElementById","getJobDetailRequest","detailFetching","jobDetail","errorDetail","JobsSelectors","job_list","GET_JOBS_SUCCESS","GET_JOBS_FAIL","GET_JOB_DETAIL_SUCCESS","GET_JOB_DETAIL_FAIL","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAIL","CREATE_FIRST_JOB_SUCCESS","CREATE_FIRST_JOB_FAIL","PARTIAL_UPDATE_JOB_SUCCESS","PARTIAL_UPDATE_JOB_FAIL","ACTIVATE_DEACTIVATE_JOB_SUCCESS","ACTIVATE_DEACTIVATE_JOB_FAIL","CREATE_JOB_SUCCESS","CREATE_JOB_FAIL"],"mappings":"wwBAK4BA,wBAAc,CACxCC,aAAc,CAAC,QACfC,aAAc,CAAC,QACfC,aAAc,CAAC,SAEfC,cAAe,KACfC,cAAe,KACfC,cAAe,CAAC,SAEhBC,kBAAmB,CAAC,WACpBC,kBAAmB,CAAC,WACpBC,eAAgB,CAAC,WAXXC,E,EAAAA,MAAOC,E,EAAAA,SAcFC,EAAYF,EACVC,YAIR,IAAME,EAAgBC,IAAU,CACrCC,UAAU,EACVC,KAAM,KACNC,MAAO,GACPC,YAAY,EACZC,aAAa,IAKFC,EAAgB,CAC3BC,QAAS,SAAAC,GAAK,OAAIA,EAAMN,OAMbf,EAAe,SAACqB,EAAD,GAAqB,EAAXC,KACpC,OAAOD,EAAME,MAAM,CAAET,UAAU,EAAMC,KAAM,KAAMG,aAAa,EAAMD,YAAY,KAKrEhB,EAAe,SAACoB,EAAD,GAAsB,IAAZN,EAAW,EAAXA,KACpC,OAAOM,EAAME,MAAM,CAAET,UAAU,EAAOE,MAAO,KAAMD,KAAMA,EAAME,YAAY,EAAMC,aAAa,KAInFhB,EAAe,SAACmB,EAAOG,GAAY,IACtCR,EAAUQ,EAAVR,MACR,OAAOK,EAAME,MAAM,CAAET,UAAU,EAAOE,MAAOA,EAAOD,KAAM,KAAME,YAAY,EAAOC,aAAa,KAKrFf,EAAgB,SAACkB,GAC5B,OAAOA,EAAME,MAAM,CAAET,UAAU,EAAMI,aAAa,KAGvCd,EAAgB,SAACiB,GAC5B,OAAOA,EAAME,MAAM,CAAET,UAAU,EAAOE,MAAO,KAAMD,KAAM,KAAMG,aAAa,EAAOD,YAAY,KAGpFZ,EAAgB,SAACgB,EAAD,GAAuB,IAAbL,EAAY,EAAZA,MACrC,OAAOK,EAAME,MAAM,CAAET,UAAU,EAAOE,MAAOA,EAAOE,aAAa,KAGtDZ,EAAoB,SAACe,EAAD,GAAwB,EAAdI,QACzC,OAAOJ,EAAME,MAAM,CAAET,UAAU,KAGpBP,EAAoB,SAACc,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QACzC,OAAOJ,EAAME,MAAM,CAAET,UAAU,EAAOE,MAAO,KAAMD,KAAMU,EAAQC,QAAST,YAAY,EAAMC,aAAa,KAG9FV,EAAiB,SAACa,EAAD,GAAuB,IAAbL,EAAY,EAAZA,MACtC,OAAOK,EAAME,MAAM,CAAET,UAAU,EAAOE,MAAOA,EAAOD,KAAM,KAAME,YAAY,EAAOC,aAAa,KAKrFS,EAAUC,wBAAchB,GAAD,mBACjCH,EAAMoB,cAAgB7B,GADW,cAEjCS,EAAMqB,cAAgB7B,GAFW,cAGjCQ,EAAMsB,cAAgB7B,GAHW,cAKjCO,EAAMuB,oBAAsB1B,GALK,cAMjCG,EAAMwB,iBAAmBzB,GANQ,cAOjCC,EAAMyB,oBAAsB3B,GAPK,cASjCE,EAAM0B,eAAiBhC,GATU,cAUjCM,EAAM2B,eAAiBhC,GAVU,cAWjCK,EAAM4B,eAAiBhC,GAXU,K,wKClFvBiC,EAAM,UAFA,sBAEA,QAEJ,GACXC,SAAS,GAAD,OAAKD,EAAL,wBACRE,gBAAgB,GAAD,OAAKF,EAAL,0BACfG,OAAO,GAAD,OAAKH,EAAL,WAGNI,SAAS,GAAD,OAAKJ,EAAL,UACRK,aAAc,SAACC,GAAD,gBAAWN,EAAX,iBAA0BM,EAA1B,MACdC,4BAA6B,SAACD,GAAD,gBAAWN,EAAX,iBAA0BM,EAA1B,0BAC7BE,iBAAiB,GAAD,OAAKR,EAAL,uBAGhBS,eAAe,GAAD,OAAKT,EAAL,iBCVLU,EAAiB,SAAChC,GAE3B,GAAIA,GAAmC,qBAAnBA,EAAMiC,SAA0B,CAChD,IAAIC,EAAW,CACXC,OAAQnC,EAAMiC,SAASE,OACvBC,WAAYpC,EAAMiC,SAASG,WAC3BC,QAAS,KACTJ,SAAUjC,EAAMiC,UAEpB,GAAI,YAAajC,EAAMiC,SAAS3B,KAC5B4B,EAASG,QAAUC,KAAKC,UAAUvC,EAAMiC,SAAS3B,KAAK+B,aAErD,CACD,IAAIA,EAAU,GACd,IAAK,IAAMG,KAAYxC,EAAMiC,SAAS3B,KAClC+B,GAAiB,UAAMG,EAAN,aAAmBxC,EAAMiC,SAAS3B,KAAKkC,GAAvC,MAErBN,EAASG,QAAUA,EAGvB,OAAOH,EAGP,MAAO,CACNC,OAAQ,mBACRC,WAAY,6CACZC,QAAS,+CAILI,EAA6B,SAACC,GACvC,IAAMC,EAAS,IAAIC,gBAcnB,OAZe,MAAXF,GAAiBG,OAAOC,KAAKJ,GAASK,SAAQ,SAAAC,GACrB,OAAjBN,EAAQM,IAAmBN,EAAQM,aAAgBC,OACnDN,EAAOO,OAAOF,EAAKN,EAAQM,IACV,OAAjBN,EAAQM,IAAiBN,EAAQM,aAAgBC,eAC1CN,EAAOK,GACdN,EAAQM,GAAKG,KAAI,SAAAC,GAGb,MAFc,KAAVA,GACAT,EAAOO,OAAOF,EAAKI,GAChB,YAIhBT,GCDI,EA9CA,WAuCb,MAAO,CACLU,MAvCY,SAAC/C,GAAuD,IAC5DgD,EAAuBhD,EAAvBgD,SAAUC,EAAajD,EAAbiD,SAEjB,OAAOC,IAAMC,KAAKC,EAAUnC,SAAU,CAAE+B,WAAUC,aAChDI,MAAK,SAAA1B,GACJ,GAAIA,EAASE,OAAS,KAAOF,EAASE,QAAU,IAC5C,MAAM,IAAIyB,MAAM3B,GAEpB,MAAO,CAAE4B,MAAO5B,EAAS3B,KAAKuD,MAAO9D,KAAMkC,EAAS3B,KAAKP,SAE1D+D,OAAM,SAAAC,GACL,MAAM,IAAIH,MAAMG,EAAI9B,SAAS3B,KAAKuC,OAAOC,KAAKiB,EAAI9B,SAAS3B,MAAM,IAAI,OAEtEqD,MAAK,SAAC1B,GAGH,OADA+B,aAAaC,QAAQ,QAAShC,EAAS3B,KAAKuD,OACrC5B,EAASlC,SAwBtBmE,WAhBiB,SAACzD,GAClB,OAAO+C,IAAMC,KAAKC,EAAUlC,gBAAiB,CAAEqC,MAAOpD,IACnDkD,MAAK,SAAA1B,GAGJ,OAFA+B,aAAaC,QAAQ,QAAShC,EAAS3B,KAAKuD,OAC5CG,aAAaC,QAAQ,UAAWhC,EAAS3B,KAAKI,QAAQkB,IAC/CK,EAAS3B,QAEjBwD,OAAM,SAAAC,GACL,IAAM/D,EAAQ,IAAI4D,MAAMG,GAEpB,MADA/D,EAAMM,KAAO0B,EAAe+B,GACtB/D,MAOdmE,OArBa,WACbH,aAAaI,WAAW,YCmJb,EA1KA,WA+JX,MAAO,CACHC,QAnJY,SAAC3B,GACb,IAAMC,EAASF,EAA2BC,GAC1C,OAAOc,IAAMc,IAAIZ,EAAUhC,SAAU,CAAEiB,WACtCgB,MAAK,SAAA1B,GAAQ,OAAIA,EAAS3B,QAC1BwD,OAAM,SAAAC,GACH,IAAM/D,EAAQ,IAAI4D,MAAMG,GAExB,MADA/D,EAAMM,KAAO0B,EAAe+B,GACtB/D,MA6IVuE,cA/JkB,SAAC7B,GACnB,IAAMC,EAASF,EAA2BC,GAC1C,OAAOc,IAAMc,IAAIZ,EAAU3B,eAAgB,CAAEY,WAC5CgB,MAAK,SAAA1B,GAAQ,OAAIA,EAAS3B,QAC1BwD,OAAM,SAAAC,GACH,IAAM/D,EAAQ,IAAI4D,MAAMG,GAExB,MADA/D,EAAMM,KAAO0B,EAAe+B,GACtB/D,MAyJV2B,aA1IiB,SAAAC,GACHoC,aAAaQ,QAAQ,SAAnC,IACMC,EAAMf,EAAU/B,aAAaC,GAEnC,OAAO4B,IAAM,CACDkB,OAAQ,MACRD,IAAKA,IAGhBd,MAAK,SAAA1B,GACF,OAAOA,EAAS3B,QAEnBwD,OAAM,SAAAC,GACH,IAAM/D,EAAQ,IAAI4D,MAAMG,GAExB,MADA/D,EAAMM,KAAO0B,EAAe+B,GACtB/D,MA4HV2E,eAxHmB,SAAAlE,GAAY,IACvBmE,EAAqFnE,EAArFmE,KAAMC,EAA+EpE,EAA/EoE,MAAOC,EAAwErE,EAAxEqE,MAAOC,EAAiEtE,EAAjEsE,YAAaC,EAAoDvE,EAApDuE,OAAQC,EAA4CxE,EAA5CwE,QAASC,EAAmCzE,EAAnCyE,WAAYC,EAAuB1E,EAAvB0E,SAAUC,EAAa3E,EAAb2E,SAC1EvB,EAAQG,aAAaQ,QAAQ,UAAY,GACzCC,EAAMf,EAAU5B,iBAEhBuD,EAAW,IAAIC,SAWrB,OAVAD,EAASnC,OAAO,OAAQ0B,GACxBS,EAASnC,OAAO,QAAS2B,GACzBQ,EAASnC,OAAO,QAAS4B,GACzBO,EAASnC,OAAO,cAAe6B,GAC/BM,EAASnC,OAAO,SAAU8B,GAC1BK,EAASnC,OAAO,UAAW+B,GAC3BI,EAASnC,OAAO,WAAYkC,GAC5BF,GAAcG,EAASnC,OAAO,aAAcgC,GAC5CC,GAAYE,EAASnC,OAAO,WAAYiC,GAEjC3B,IAAM,CACDkB,OAAQ,OACRD,IAAKA,EACLnE,KAAM+E,EACNE,QAAS,CAAE,eAAgB,sBAAuB,cAAgB,OAAhB,OAAwB1B,MAErFF,MAAK,SAAA1B,GACF,OAAOA,EAAS3B,QAEnBwD,OAAM,SAAAC,GACH,IAAM/D,EAAQ,IAAI4D,MAAMG,GAExB,MADA/D,EAAMM,KAAO0B,EAAe+B,GACtB/D,MA6FVwF,iBAzFqB,SAAA/E,GAAY,IACzBmB,EAA4EnB,EAA5EmB,GAAIkD,EAAwErE,EAAxEqE,MAAOC,EAAiEtE,EAAjEsE,YAAaC,EAAoDvE,EAApDuE,OAAQC,EAA4CxE,EAA5CwE,QAASC,EAAmCzE,EAAnCyE,WAAYC,EAAuB1E,EAAvB0E,SAAUC,EAAa3E,EAAb2E,SACjEvB,EAAQG,aAAaQ,QAAQ,UAAY,GACzCC,EAAMf,EAAU/B,aAAaC,GAE7ByD,EAAW,IAAIC,SASrB,OARAR,GAASO,EAASnC,OAAO,QAAS4B,GAClCC,GAAeM,EAASnC,OAAO,cAAe6B,GAC9CC,GAAUK,EAASnC,OAAO,SAAU8B,GACpCC,GAAWI,EAASnC,OAAO,UAAW+B,GACtCG,GAAYC,EAASnC,OAAO,WAAYkC,GACxCF,GAAcG,EAASnC,OAAO,aAAcgC,GAC5CC,GAAYE,EAASnC,OAAO,WAAYiC,GAEjC3B,IAAM,CACDkB,OAAQ,QACRD,IAAKA,EACLnE,KAAM+E,EACNE,QAAS,CAAE,eAAgB,sBAAuB,cAAgB,OAAhB,OAAwB1B,MAErFF,MAAK,SAAA1B,GACF,OAAOA,EAAS3B,QAEnBwD,OAAM,SAAAC,GACH,IAAM/D,EAAQ,IAAI4D,MAAMG,GAExB,MADA/D,EAAMM,KAAO0B,EAAe+B,GACtB/D,MAgEVyF,sBA5D0B,SAAAhF,GAAY,IAC9BmB,EAAenB,EAAfmB,GAAI8D,EAAWjF,EAAXiF,OACN7B,EAAQG,aAAaQ,QAAQ,UAAY,GACzCC,EAAMf,EAAU7B,4BAA4BD,GAE5CyD,EAAW,IAAIC,SAGrB,OAFAD,EAASnC,OAAO,SAAUwC,GAEnBlC,IAAM,CACDkB,OAAQ,OACRD,IAAKA,EACLnE,KAAM+E,EACNE,QAAS,CAAE,eAAgB,sBAAuB,cAAgB,OAAhB,OAAwB1B,MAErFF,MAAK,SAAA1B,GACF,OAAOA,EAAS3B,QAEnBwD,OAAM,SAAAC,GACH,IAAM/D,EAAQ,IAAI4D,MAAMG,GAExB,MADA/D,EAAMM,KAAO0B,EAAe+B,GACtB/D,MAyCV2F,UArCc,SAAAlF,GAAY,IAClBqE,EAAwErE,EAAxEqE,MAAOC,EAAiEtE,EAAjEsE,YAAaC,EAAoDvE,EAApDuE,OAAQC,EAA4CxE,EAA5CwE,QAASC,EAAmCzE,EAAnCyE,WAAYC,EAAuB1E,EAAvB0E,SAAUC,EAAa3E,EAAb2E,SAC7DvB,EAAQG,aAAaQ,QAAQ,UAAY,GACzCC,EAAMf,EAAUhC,SAEhB2D,EAAW,IAAIC,SASrB,OARAD,EAASnC,OAAO,QAAS4B,GACzBO,EAASnC,OAAO,cAAe6B,GAC/BM,EAASnC,OAAO,SAAU8B,GAC1BK,EAASnC,OAAO,UAAW+B,GAC3BI,EAASnC,OAAO,WAAYkC,GAC5BF,GAAcG,EAASnC,OAAO,aAAcgC,GAC5CC,GAAYE,EAASnC,OAAO,WAAYiC,GAEjC3B,IAAM,CACDkB,OAAQ,OACRD,IAAKA,EACLnE,KAAM+E,EACNE,QAAS,CAAE,eAAgB,sBAAuB,cAAgB,OAAhB,OAAwB1B,MAErFF,MAAK,SAAA1B,GACF,OAAOA,EAAS3B,QAEnBwD,OAAM,SAAAC,GACH,IAAM/D,EAAQ,IAAI4D,MAAMG,GAExB,MADA/D,EAAMM,KAAO0B,EAAe+B,GACtB/D,Q,0BCzJAqD,G,WAaAc,G,WAUDD,GAvBV,SAAWb,EAAOuC,EAAKpF,GAAvB,yEAEL,OADQF,EAASE,EAATF,KADH,SAECuF,YAAIC,UAAYC,mBAFjB,OAIY,OAJZ,kBAIkBC,YAAKJ,EAAIvC,MAAO/C,GAJlC,OAKH,OADI2B,EAJD,gBAKG4D,YAAIC,UAAY7G,aAAagD,IALhC,OAMH,OANG,UAMG4D,YAAIC,UAAYG,aAAY,IAN/B,gCAQH,OARG,oCAQGJ,YAAIC,UAAY5G,aAAa,KAAEmD,UARlC,sDAaA,SAAW8B,EAAQyB,EAAKpF,GAAxB,iEAEH,OAFG,kBAEGwF,YAAKJ,EAAIzB,QAFZ,OAGH,OAHG,SAGG0B,YAAIC,UAAY1G,iBAHnB,8BAKH,OALG,mCAKGyG,YAAIC,UAAYzG,cAAc,KAAEgD,UALnC,qDAUA,SAAU6B,EAAW0B,EAAKpF,GAA1B,yEAGY,OAFTC,EAAYD,EAAZC,QADH,kBAGkBuF,YAAKJ,EAAI1B,WAAYzD,GAHvC,OAIH,OADIwB,EAHD,gBAIG4D,YAAIC,UAAYvG,kBAAkB0C,IAJrC,8BAMH,OANG,mCAMG4D,YAAIC,UAAYtG,eAAe,KAAE6C,UANpC,qD,eCzBUgC,G,WASA1C,G,WASA4C,G,WASAI,G,WASAa,G,WASAC,G,WASAE,GAtDV,SAAUtB,EAAQuB,EAAKpF,GAAvB,uEAEgB,OAFhB,kBAEsBwF,YAAKJ,EAAIvB,QAAS7D,EAAOC,SAF/C,OAGC,OADIwB,EAFL,gBAGO4D,YAAIK,UAAYC,eAAelE,IAHtC,8BAKC,OALD,mCAKO4D,YAAIK,UAAYE,YAAZ,OALX,qDASA,SAAUzE,EAAaiE,EAAKpF,GAA5B,uEAEgB,OAFhB,kBAEsBwF,YAAKJ,EAAIjE,aAAcnB,EAAOC,SAFpD,OAGC,OADIwB,EAFL,gBAGO4D,YAAIK,UAAYG,oBAAoBpE,IAH3C,8BAKC,OALD,mCAKO4D,YAAIK,UAAYI,iBAAZ,OALX,qDASA,SAAU/B,EAAcqB,EAAKpF,GAA7B,uEAEgB,OAFhB,kBAEsBwF,YAAKJ,EAAIrB,cAAe/D,EAAOC,SAFrD,OAGC,OADIwB,EAFL,gBAGO4D,YAAIK,UAAYK,qBAAqBtE,EAASuE,UAHrD,8BAKC,OALD,mCAKOX,YAAIK,UAAYO,kBAAZ,OALX,qDASA,SAAU9B,EAAeiB,EAAKpF,GAA9B,uEAEgB,OAFhB,kBAEsBwF,YAAKJ,EAAIjB,eAAgBnE,EAAOC,SAFtD,OAGC,OADIwB,EAFL,gBAGO4D,YAAIK,UAAYQ,sBAAsBzE,IAH7C,8BAKC,OALD,mCAKO4D,YAAIK,UAAYS,mBAAZ,OALX,qDASA,SAAUnB,EAAiBI,EAAKpF,GAAhC,uEAEgB,OAFhB,kBAEsBwF,YAAKJ,EAAIJ,iBAAkBhF,EAAOC,SAFxD,OAGC,OADIwB,EAFL,gBAGO4D,YAAIK,UAAYU,wBAAwB3E,IAH/C,8BAKC,OALD,mCAKO4D,YAAIK,UAAYW,qBAAZ,OALX,qDASA,SAAUpB,EAAsBG,EAAKpF,GAArC,uEAEgB,OAFhB,kBAEsBwF,YAAKJ,EAAIH,sBAAuBjF,EAAOC,SAF7D,OAGC,OADIwB,EAFL,gBAGO4D,YAAIK,UAAYY,6BAA6B7E,IAHpD,8BAKC,OALD,mCAKO4D,YAAIK,UAAYa,0BAAZ,OALX,qDASA,SAAUpB,EAAUC,EAAKpF,GAAzB,uEAEgB,OAFhB,kBAEsBwF,YAAKJ,EAAID,UAAWnF,EAAOC,SAFjD,OAGC,OADIwB,EAFL,gBAGO4D,YAAIK,UAAYc,iBAAiB/E,IAHxC,8BAKC,OALD,mCAKO4D,YAAIK,UAAYe,cAAZ,OALX,qD,eCzCkBC,GAHnBC,EAAUC,IACVC,EAAUC,IAED,SAAUJ,IAAV,iEACb,OADa,SACPK,YAAI,CACRC,YAAU7H,YAAUkB,cAAewC,EAAO8D,GAC1CK,YAAU7H,YAAUwB,eAAgBgD,EAAQgD,GAC5CK,YAAU7H,YAAUqB,oBAAqBkD,EAAYiD,GAErDK,YAAUC,YAAUC,iBAAkBC,EAAkBN,GACxDG,YAAUC,YAAUG,uBAAwBD,EAAuBN,GACnEG,YAAUC,YAAUI,uBAAwBF,EAAwBN,GACpEG,YAAUC,YAAUK,yBAA0BH,EAAyBN,GACvEG,YAAUC,YAAUM,2BAA4BJ,EAA2BN,GAC3EG,YAAUC,YAAUO,gCAAiCL,EAAgCN,GACrFG,YAAUC,YAAUQ,mBAAoBN,EAAoBN,KAZjD,uC,aCVFa,EAAWC,0BAAgB,CAEtCC,KAAMC,EAAQ,IAAuB1H,QACrC2H,KAAMD,EAAQ,GAAuB1H,QAErC4H,KAAMC,M,kCCHR,SAASC,GAAUC,GAAQ,IACjBC,EAAQD,EAARC,IACR,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,uBAAGC,KAAK,GAAGD,UAAU,aAAaD,EAAI7D,QAExC,yBAAK8D,UAAU,SACb,uBAAGA,UAAU,cAAcD,EAAI3D,OAA/B,YAGJ,uBAAG4D,UAAU,mBAAmBD,EAAI5D,aACpC,uBAAG6D,UAAU,eAAeD,EAAI1D,SAC/B0D,EAAIzD,WACH,uBAAG0D,UAAU,eAAb,KAA8BD,EAAIzD,WAAlC,iBAAkDyD,EAAIxD,UAEtDwD,EAAIxD,SACF,uBAAGyD,UAAU,eAAb,gBAA+BD,EAAIxD,UAEnC,uBAAGyD,UAAU,eAAb,wEAEJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,uBAAGA,UAAU,iBAAiBD,EAAIG,YAEpC,yBAAKF,UAAU,SACb,uBAAGA,UAAU,mBAAmBD,EAAII,gBAQ9C,SAASC,GAAYN,GAAO,IAClBO,EAAeP,EAAfO,WAER,OACE,yBAAKL,UAAU,oBACZK,EAAWC,OAAS,GAAKD,EAAW9F,KAAI,SAAAiC,GAAQ,OAC/C,yBAAKwD,UAAU,eAAe5F,IAAKoC,EAASxD,IACzCwD,EAAS+D,YAGd,yBAAKP,UAAU,c,IAKfQ,G,oDACJ,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IACDrI,MAAQ,GAFI,E,gEAOjBgJ,KAAKX,MAAMrE,Y,+BAMH,IAAD,EAC+CgF,KAAKX,MAAMrI,MAAMiI,KAA/DA,EADD,EACCA,KAAMW,EADP,EACOA,WAAYK,EADnB,EACmBA,aADnB,EACiCC,UACxC,OAEI,yBAAKX,UAAU,oBACb,yBAAKA,UAAU,IACb,yBAAKA,UAAU,sBACb,4BAAQA,UAAU,OAAlB,uEAEF,kBAACI,GAAD,CAAYC,WAAYA,IAExB,yBAAKL,UAAU,cACZU,GAAgB,yCAChBhB,EAAKY,OAAS,GAAKZ,EAAKnF,KAAI,SAAAwF,GAAG,OAC9B,kBAACF,GAAD,CAAUE,IAAKA,EAAK3F,IAAK2F,EAAI/G,e,GA5B1B4H,aAgDJC,gBAVS,SAACpJ,GAAD,MAAY,CAClCqJ,cAAerJ,EAAMqJ,cACrBrJ,MAAOA,MAGkB,SAACsJ,GAAD,MAAe,CACxCpF,cAAe,SAAAqF,GAAK,OAAID,EAASzD,UAAY2D,qBAAqBD,KAClEvF,QAAS,SAAAuF,GAAK,OAAID,EAASzD,UAAY4D,eAAeF,QAGzCH,CAGbL,I,8CCzGIW,GAAc,SAAC,GAAD,IAClBC,EADkB,EAClBA,MACAC,EAFkB,EAElBA,MACAC,EAHkB,EAGlBA,YACAC,EAJkB,EAIlBA,KAJkB,IAKlBC,KAAQC,EALU,EAKVA,QAASrK,EALC,EAKDA,MAAOsK,EALN,EAKMA,QALN,OAOlB,6BACE,+BAAQL,GACR,6BACE,2CAAWD,EAAX,CAAkBE,YAAaA,EAAaC,KAAMA,EAAMvB,UAAU,kBACjEyB,IACGrK,GAAS,8BAAOA,IACfsK,GAAW,8BAAOA,OAK7B,SAASC,GAAU7B,GACsEA,EAAjF8B,aAAiF9B,EAAnE+B,SAAmE/B,EAAzDgC,MAAyDhC,EAAlDiC,WADZ,IACwB1B,EAAsCP,EAAtCO,WAAY2B,EAA0BlC,EAA1BkC,QAASjC,EAAiBD,EAAjBC,IAAKkC,EAAYnC,EAAZmC,QAC3E,OACE,6BACE,6BACI,kBAACC,GAAA,EAAD,CACEC,UAAWhB,GACXnF,KAAK,QACLuF,KAAK,OACLF,MAAM,mGAGV,6BACE,yKACA,6BACE,kBAACa,GAAA,EAAD,CAAOlG,KAAK,WAAWmG,UAAU,UAC/B,iCACC9B,GAAcA,EAAWC,OAAS,GAAKD,EAAW9F,KAAI,SAAAiC,GAAQ,OAC7DuD,GAAOA,EAAIvD,WAAaA,EAAS+D,QACjC,4BAAQ6B,aAAc5F,EAASxD,GAAIoB,IAAKoC,EAASxD,IAAMwD,EAAS+D,SAEhE,4BAAQ/F,MAAOgC,EAASxD,GAAIoB,IAAKoC,EAASxD,IAAKwD,EAAS+D,eAKhE,6BACE,2KACA,6BACE,kBAAC2B,GAAA,EAAD,CAAOlG,KAAK,cAAcmG,UAAU,WAAWnC,UAAU,6BACvDsB,YAAY,8/BAQlB,6BACE,6LACA,4BAAQe,SAAUL,EAAShG,KAAK,WAC9B,4BAAQoG,aAAc,OAAtB,wEACA,4BAAQ5H,MAAO,UAAf,+CACA,4BAAQA,MAAO,aAAf,gFAEU,UAAXyH,GACC,6BACE,oCACA,kBAACC,GAAA,EAAD,CACElG,KAAK,aACLmG,UAAU,QACVZ,KAAK,OACLD,YAAY,GACZD,MAAM,MAER,+CACA,kBAACa,GAAA,EAAD,CACElG,KAAK,WACLmG,UAAU,QACVZ,KAAK,OACLD,YAAY,GACZD,MAAM,kBAIA,aAAXY,GACC,kBAACC,GAAA,EAAD,CACElG,KAAK,WACLmG,UAAU,QACVZ,KAAK,OACLD,YAAY,MAIlB,6BACE,kBAACY,GAAA,EAAD,CACElG,KAAK,SACLmG,UAAWhB,GACXI,KAAK,SACLD,YAAY,GACZD,MAAM,uDAGV,6BACE,kBAACa,GAAA,EAAD,CACEC,UAAWhB,GACXnF,KAAK,UACLuF,KAAK,OACLD,YAAa,8CACb9G,MAAO,8CACP6G,MAAM,qCAOX,IAAMiB,GAAb,oDACE,WAAYxC,GAAQ,IAAD,8BAClB,cAAMA,IACDrI,MAAQ,CACXwK,QAAS,OAGX,EAAKD,QAAU,EAAKA,QAAQO,KAAb,iBANG,EADrB,oDAUWC,GACP/B,KAAKgC,SAAL,gBACGD,EAAEE,OAAO1G,KAAOwG,EAAEE,OAAOlI,UAZhC,+BAgBa,IAAD,EAC8DiG,KAAKX,MAArE8B,EADE,EACFA,aAAcC,EADZ,EACYA,SAAUC,EADtB,EACsBA,MAAOC,EAD7B,EAC6BA,WAAY5K,EADzC,EACyCA,KAAMkJ,EAD/C,EAC+CA,WACvD,OACE,0BAAMsC,SAAUf,GACd,6BACE,kBAACM,GAAA,EAAD,CACEC,UAAWhB,GACXnF,KAAK,OACLuF,KAAK,OACLD,YAAa,GACb9G,MAAOrD,EAAOA,EAAKyL,SAAW,GAC9BR,aAAcjL,EAAOA,EAAKyL,SAAW,GACrCvB,MAAM,gHAGV,6BACE,kBAACa,GAAA,EAAD,CACElG,KAAK,QACLmG,UAAWhB,GACXI,KAAK,SACLD,YAAY,cACZD,MAAM,gDAGV,kBAACM,GAAD,CACEC,aAAcA,EACdC,SAAUA,EACVC,MAAOA,EACPC,WAAYA,EACZ1B,WAAYA,EACZ2B,QAASvB,KAAKuB,QACdjC,IAAK,KACLkC,QAASxB,KAAKhJ,MAAMwK,UAEtB,6BACE,4BAAQjC,UAAU,kBAEhB6C,QAASjB,EAETkB,SAAUjB,GAAYE,GAJxB,oDAnDV,GAAwCnB,aAgExC0B,GAAqBS,aAAU,CAC7BpD,KAAM,kBADaoD,CAElBT,IAGI,IAAMU,GAAb,oDACE,WAAYlD,GAAQ,IAAD,8BAClB,cAAMA,IACDrI,MAAQ,CACXwK,QAAS,OAGX,EAAKD,QAAU,EAAKA,QAAQO,KAAb,iBANG,EADrB,gEAUsB,IAAD,EACc9B,KAAKX,MAAMmD,cAApC3G,EADW,EACXA,WAAYC,EADD,EACCA,SAChBD,GACFmE,KAAKgC,SAAL,6BAAkBhC,KAAKhJ,OAAvB,IAA8BwK,QAAU,YAEtC1F,IAAaD,GACfmE,KAAKgC,SAAL,6BAAkBhC,KAAKhJ,OAAvB,IAA8BwK,QAAU,iBAhB5C,8BAoBWO,GACP/B,KAAKgC,SAAL,gBACGD,EAAEE,OAAO1G,KAAOwG,EAAEE,OAAOlI,UAtBhC,+BA0Ba,IAAD,EAC6DiG,KAAKX,MAApE8B,EADE,EACFA,aAAcC,EADZ,EACYA,SAAUC,EADtB,EACsBA,MAAOC,EAD7B,EAC6BA,WAAY1B,EADzC,EACyCA,WAAYN,EADrD,EACqDA,IAC7D,OACE,6BACE,kBAAC4B,GAAD,CACEC,aAAcA,EACdC,SAAUA,EACVC,MAAOA,EACPC,WAAYA,EACZ1B,WAAYA,EACZ2B,QAASvB,KAAKuB,QACdjC,IAAKA,EACLkC,QAASxB,KAAKhJ,MAAMwK,UACtB,6BACE,4BAAQjC,UAAU,kBAChB6C,QAASjB,EAETkB,SAAUjB,GAAYE,GAHxB,oDAxCV,GAAmCnB,aAoDnCoC,GAAgBD,aAAU,CACxBpD,KAAM,aADQoD,CAEbC,IAGI,IAAME,GAAb,oDACE,WAAYpD,GAAQ,IAAD,8BAClB,cAAMA,IACDrI,MAAQ,CACXwK,QAAS,OAGX,EAAKD,QAAU,EAAKA,QAAQO,KAAb,iBANG,EADrB,gEAUsB,IAAD,EACc9B,KAAKX,MAAMmD,cAApC3G,EADW,EACXA,WAAYC,EADD,EACCA,SAChBD,GACFmE,KAAKgC,SAAL,6BAAkBhC,KAAKhJ,OAAvB,IAA8BwK,QAAU,YAEtC1F,IAAaD,GACfmE,KAAKgC,SAAL,6BAAkBhC,KAAKhJ,OAAvB,IAA8BwK,QAAU,iBAhB5C,8BAoBWO,GACP/B,KAAKgC,SAAL,gBACGD,EAAEE,OAAO1G,KAAOwG,EAAEE,OAAOlI,UAtBhC,+BA0Ba,IAAD,EAC6DiG,KAAKX,MAApE8B,EADE,EACFA,aAAcC,EADZ,EACYA,SAAUC,EADtB,EACsBA,MAAOC,EAD7B,EAC6BA,WAAY1B,EADzC,EACyCA,WAAYN,EADrD,EACqDA,IAC7D,OACE,6BACE,kBAAC4B,GAAD,CACEC,aAAcA,EACdC,SAAUA,EACVC,MAAOA,EACPC,WAAYA,EACZ1B,WAAYA,EACZ2B,QAASvB,KAAKuB,QACdjC,IAAKA,EACLkC,QAASxB,KAAKhJ,MAAMwK,UACtB,6BACE,4BAAQjC,UAAU,kBAChB6C,QAASjB,EACTkB,SAAUjB,GAAYE,GAFxB,0DAKA,4BAAQ/B,UAAU,kBAChB6C,QAASpC,KAAKX,MAAMqD,aACpBC,UAAS,MAFX,wCA7CV,GAAmCxC,aAyDnCsC,GAAgBH,aAAU,CACxBpD,KAAM,aADQoD,CAEbG,I,ICvSGG,G,oDACJ,WAAYvD,GAAQ,IAAD,8BACjB,cAAMA,IACDrI,MAAQ,GAGf,EAAK6L,iBAAmB,EAAKA,iBAAiBf,KAAtB,iBALL,E,gEASjB9B,KAAKX,MAAMnE,kB,uCAGI6G,GACfA,EAAEe,iBACF9C,KAAKX,MAAM/D,eAAe0E,KAAKX,MAAMrI,MAAMkI,KAAK6D,eAAeC,QAC/DhD,KAAKX,MAAM4D,QAAQC,KAAK,yB,+BAGhB,IACFxM,EAASsJ,KAAKX,MAAd3I,KACEkJ,EAAeI,KAAKX,MAAMrI,MAAMiI,KAAhCW,WACR,OACElJ,GAAQA,EAAK+I,UACb,kBAAC,IAAD,CACM0D,GAAI,CAACC,SAAU,yBAGrB,yBAAK7D,UAAU,+BACb,sOAGA,kBAAC,GAAD,CAAoB8D,SAAU,GAAIC,UAAW,GAAIC,SAAU,GAAIpC,aAAcnB,KAAK6C,iBAChFnM,KAAMA,EAAMkJ,WAAYA,S,GAjCDO,aAkDlBC,gBAXS,SAACpJ,GAAD,MAAY,CAClCA,MAAOA,EACPwM,QAASxM,EAAMwM,QACf9M,KAAMM,EAAM+H,KAAKrI,SAGQ,SAAC4J,GAAD,MAAe,CACxChF,eAAgB,SAAA/C,GAAE,OAAI+H,EAASzD,UAAY4G,sBAAsBlL,KACjE2C,cAAe,SAAA3C,GAAE,OAAI+H,EAASzD,UAAY2D,qBAAqBjI,QAGlD6H,CAGbwC,ICvDIc,G,oLACkB,IAEVlJ,EAAUwF,KAAKX,MAAMsE,MAAMrK,OAA3BkB,MACSwF,KAAKX,MAAd3I,MAENsJ,KAAKX,MAAMxE,WAAWL,K,+BAKxB,IAAIoJ,GAAS,EAEb,OAD8B,IAA1B5D,KAAKX,MAAMzI,aAAqBgN,GAAS,GAEzC,6BACKA,EACK,kBAAC,GAAD,MACA,uF,GAjBuBzD,aAmC5BC,gBAXS,SAACpJ,GAAD,MAAY,CAChCJ,WAAYI,EAAM+H,KAAKnI,WACvBF,KAAMM,EAAM+H,KAAKrI,KACjBM,MAAOA,MAIgB,SAAAsJ,GAAQ,MAAK,CACpCzF,WAAY,SAACL,GAAD,OAAW8F,EAAS7D,UAAYxG,kBAAkBuE,QAGnD4F,CAA6CsD,ICnC5D,SAASG,GAAWxE,GAClB,OACE,yBAAKE,UAAU,aAAahH,GAAG,YAAYuL,SAAS,KAAKC,KAAK,SAC5DC,kBAAgB,iBAAiBC,cAAY,QAC7C,yBAAK1E,UAAU,gBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAchH,GAAG,kBAA/B,oFACA,4BAAQuI,KAAK,SAASvB,UAAU,QAAQ2E,eAAa,QAAQC,aAAW,SACtE,0BAAMF,cAAY,QAAlB,UAGJ,yBAAK1E,UAAU,cACb,uBAAGC,KAAK,0FAAR,0G,IASN4E,G,oDACJ,WAAY/E,GAAQ,IAAD,8BACjB,cAAMA,IACDrI,MAAQ,GAFI,E,gEAOjB,IAAMwD,EAAQG,aAAaQ,QAAQ,SAClB6E,KAAKX,MAAMN,KAApBrI,MAENsJ,KAAKX,MAAMxE,WAAWL,K,+BAIhB,IAAD,EACsBwF,KAAKX,MAAMN,KAAhCnI,EADD,EACCA,WAAYF,EADb,EACaA,KACpB,OACE,yBAAK6I,UAAU,UACb,wBAAIA,UAAU,cAAa,kBAAC,IAAD,CAAM4D,GAAG,KAAT,gGAC1BvM,EACCF,EAAK+I,UACH,6BACE,kBAAC,IAAD,CAAM0D,GAAG,uBAAT,mFACA,2BAAIzM,EAAK2N,WAAT,IAAqB,4BAAQjC,QAASpC,KAAKX,MAAMiF,QAA5B,oCAGvB,6BACE,kBAAC,IAAD,CAAMnB,GAAG,4BAAT,2GACA,2BAAIzM,EAAK2N,WAAT,IAAqB,4BAAQjC,QAASpC,KAAKX,MAAMiF,QAA5B,oCAGzB,6BACE,4BAAQ/E,UAAU,MAAMgF,cAAY,QAAQC,cAAY,cAAxD,2GACA,4BAAQjF,UAAU,MAAMgF,cAAY,QAAQC,cAAY,cAAxD,mCAGJ,kBAACX,GAAD,MACA,kC,GAtCa1D,aAuDNC,gBAXS,SAACpJ,GAAD,MAAY,CAClC+H,KAAM/H,EAAM+H,KACZ/H,MAAOA,MAIkB,SAACsJ,GAAD,MAAe,CACxCzF,WAAY,SAACL,GAAD,OAAW8F,EAAS7D,UAAYxG,kBAAkBuE,KAC9D8J,OAAQ,kBAAMhE,EAAS7D,UAAY3G,qBAGtBsK,CAGbgE,IC/EF,SAASK,GAAapF,GAAQ,IACpBC,EAA+BD,EAA/BC,IAAKoF,EAA0BrF,EAA1BqF,UAAW9E,EAAeP,EAAfO,WACpB7D,EAAW,KACfvC,OAAOC,KAAKmG,GAAYlG,SAAQ,SAAAC,GAC1BiG,EAAWjG,IAAQ2F,EAAIvD,WACzBA,EAAWpC,MAEf,IAAIgL,GAAO,EAGX,OAFIrF,EAAI/G,IAAMmM,IAAWC,GAAO,GAG9B,6BACGA,EACC,6BACE,kBAAC,GAAD,CACE/E,WAAYA,EACZuB,aAAc9B,EAAMuF,cACpBtF,IAAKA,EACLkD,cAAe,CACbjK,GAAI+G,EAAI/G,GACRkD,MAAO6D,EAAI7D,MAAOM,SAAUA,EAAUL,YAAa4D,EAAI5D,YACvDG,WAAYyD,EAAIzD,WAAYC,SAAUwD,EAAIxD,SAAUH,OAAQ2D,EAAI3D,OAChEC,QAAS0D,EAAI1D,SAEf8G,aAAcrD,EAAMqD,gBAIxB,yBAAKnD,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,uBAAGC,KAAK,GAAGD,UAAU,aAAaD,EAAI7D,QAExC,yBAAK8D,UAAU,SACb,uBAAGA,UAAU,cAAcD,EAAI3D,OAA/B,YAGJ,uBAAG4D,UAAU,mBAAmBD,EAAI5D,aACpC,uBAAG6D,UAAU,mBAAmBD,EAAIvD,UACpC,uBAAGwD,UAAU,eAAeD,EAAI1D,SAC/B0D,EAAIzD,WACH,uBAAG0D,UAAU,eAAb,KAA8BD,EAAIzD,WAAlC,iBAAkDyD,EAAIxD,UAEtDwD,EAAIxD,SACF,uBAAGyD,UAAU,eAAb,gBAA+BD,EAAIxD,UAEnC,uBAAGyD,UAAU,eAAb,wEAEJ,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,4BAAQA,UAAU,kBAAkBoD,UAASrD,EAAI/G,GAAI6J,QAAS/C,EAAMqD,cAApE,qDAIF,yBAAKnD,UAAU,SACb,4BAAQA,UAAU,kBAAkBoD,UAASrD,EAAI/G,GAAI6J,QAAS/C,EAAMwF,iBAApE,+G,IAYRC,G,oDACJ,WAAYzF,GAAQ,IAAD,8BACjB,cAAMA,IACDrI,MAAQ,CACX+N,aAAc,GACdL,UAAW,KACXM,eAAe,GAGnB,EAAKtC,aAAe,EAAKA,aAAaZ,KAAlB,iBACpB,EAAK8C,cAAgB,EAAKA,cAAc9C,KAAnB,iBACrB,EAAK+C,gBAAkB,EAAKA,gBAAgB/C,KAArB,iBACvB,EAAKmD,eAAiB,EAAKA,eAAenD,KAApB,iBAXH,E,sGAiBLC,GAAI,IACRxJ,EAAOwJ,EAAEE,OAAOiD,QAAhB3M,GACRyH,KAAKgC,SAAL,6BAAkBhC,KAAKhJ,OAAvB,IACE0N,UAAWnM,O,sCAIG,IACRyK,EAAWhD,KAAKX,MAAMH,KAAKiG,UAA3BnC,OACRhD,KAAKX,MAAMlD,iBAAiB6G,GAC5BhD,KAAKgC,SAAL,6BAAkBhC,KAAKhJ,OAAvB,IACE0N,UAAW,KACXM,eAAe,O,sCAIFjD,GAAI,IACXxJ,EAAOwJ,EAAEE,OAAOiD,QAAhB3M,GACRyH,KAAKX,MAAMjD,sBAAsB,CAAC7D,GAAIA,EAAI8D,QAAQ,IAClD2D,KAAKgC,SAAL,6BAAkBhC,KAAKhJ,OAAvB,IACE0N,UAAW,KACXM,eAAe,O,uCAID,IACRhC,EAAWhD,KAAKX,MAAMH,KAAKkG,UAA3BpC,OACRhD,KAAKX,MAAM/C,UAAU0G,GACrBhD,KAAKgC,SAAL,6BAAkBhC,KAAKhJ,OAAvB,IACE0N,UAAW,KACXM,eAAe,O,wCAIC,IAAD,QACZhF,KAAKX,MAAMgG,eAAiBrF,KAAKhJ,MAAMgO,eAC1CM,YAAW,WACT,EAAKtD,SAAL,6BAAkB,EAAKhL,OAAvB,IAA8BgO,eAAe,KAC7C,EAAK3F,MAAMrE,QAAQ,CAACyE,UAAW,EAAKJ,MAAM3I,KAAK6B,OAC9C,M,+BAIG,IAAD,OACPyH,KAAKuF,kBADE,MAE4BvF,KAAKX,MAAhCJ,EAFD,EAECA,KAAMvI,EAFP,EAEOA,KAAMkJ,EAFb,EAEaA,WACZ8E,EAAc1E,KAAKhJ,MAAnB0N,UACR,OACE,yBAAKnF,UAAU,IACZN,EAAKY,OAAS,GAAKZ,EAAKnF,KAAI,SAAAwF,GAAG,OAC9B,kBAACmF,GAAD,CACEnF,IAAKA,EACLoF,UAAWA,EACXhC,aAAc,EAAKA,aACnBkC,cAAe,EAAKA,cACpBC,gBAAiB,EAAKA,gBACtBjF,WAAYA,EACZjG,IAAK2F,EAAI/G,QAGZ0G,EAAKY,OAAS,GAAKnJ,EAClB,6BACE,6BACA,8GACA,kBAAC,GAAD,CACIkJ,WAAYA,EACZuB,aAAcnB,KAAKiF,eACnBzC,cAAe,CACb/C,UAAW/I,EAAOA,EAAK6B,GAAK,KAAMsD,WAAY,KAAMC,SAAU,KAAMF,QAAS,kDAKrF,6L,GA3FiBuE,aAqGrBqF,G,oDACJ,WAAYnG,GAAQ,IAAD,8BACjB,cAAMA,IACDrI,MAAQ,GAGf,EAAK6L,iBAAmB,EAAKA,iBAAiBf,KAAtB,iBALL,E,gEASjB,IAAM2D,EAAU9K,aAAaQ,QAAQ,WACrC6E,KAAKX,MAAMrE,QAAQ,CAACyE,UAAWgG,M,uCAGhB1D,GACfA,EAAEe,iBACF9C,KAAKX,MAAM/D,eAAe0E,KAAKX,MAAMrI,MAAMkI,KAAKkG,UAAUpC,U,+BAGlD,IACFtM,EAASsJ,KAAKX,MAAd3I,KADC,EAEsBsJ,KAAKX,MAAMrI,MAAMiI,KAAtCW,EAFD,EAECA,WAAYX,EAFb,EAEaA,KACZgB,EAAiBD,KAAKX,MAAMrI,MAAMiI,KAAlCgB,aACR,OACE,yBAAKV,UAAU,+BACb,iIAGCU,EACC,sCAEA,kBAAC,GAAD,CACEvJ,KAAMA,EACNwI,KAAMc,KAAKX,MAAMH,KACjBU,WAAYA,EACZyF,cAAerF,KAAKX,MAAMrI,MAAMiI,KAAKoG,cACrCpG,KAAMA,EACNjE,QAASgF,KAAKX,MAAMrE,QACpBmB,iBAAkB6D,KAAKX,MAAMlD,iBAC7BC,sBAAuB4D,KAAKX,MAAMjD,sBAClCE,UAAW0D,KAAKX,MAAM/C,iB,GAxCP6D,aAiEZC,gBAlBS,SAACpJ,GAAD,MAAY,CAClCA,MAAOA,EACPwM,QAASxM,EAAMwM,QACf9M,KAAMM,EAAM+H,KAAKrI,KACjBuI,KAAMjI,EAAMiI,KAAKA,KACjBC,KAAMlI,EAAMkI,SAGa,SAACoB,GAAD,MAAe,CACxChF,eAAgB,SAAA/C,GAAE,OAAI+H,EAASzD,UAAY4G,sBAAsBlL,KACjE4D,iBAAkB,SAAA5D,GAAE,OAAI+H,EAASzD,UAAY6I,wBAAwBnN,KACrE6D,sBAAuB,SAAA7D,GAAE,OAAI+H,EAASzD,UAAY8I,6BAA6BpN,KAC/EyC,QAAS,SAAAuF,GAAK,OAAID,EAASzD,UAAY4D,eAAeF,KACtDjE,UAAW,SAAA/D,GAAE,OAAI+H,EAASzD,UAAY+I,iBAAiBrN,KAEvDsC,WAAY,SAACL,GAAD,OAAW8F,EAAS7D,UAAYxG,kBAAkBuE,QAGjD4F,CAGboF,IC/NIK,GPNS,SAAC5C,GAEd,IAAM6C,EAAiBC,cACjBF,EAAQG,sBAAYnH,EAAUoH,8BAClCC,0BAAgBJ,KAGCA,EAAeK,IAAIC,GAetC,OAAOP,EOhBKQ,GAEdC,IAASC,OACP,kBAAC,IAAD,CAAUV,MAAOA,IACf,kBAAC,IAAD,KACE,yBAAKtG,UAAU,OACb,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiH,OAAK,EAACC,KAAK,KAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,2BAA2B/E,UAAWkB,KAClD,kBAAC,IAAD,CAAO6D,KAAK,sBAAsB/E,UAAW8D,KAC7C,kBAAC,IAAD,CAAOiB,KAAK,qBAAqB/E,UAAWgC,MAE9C,yBAAKnE,UAAU,UACb,uBAAGA,UAAU,cAAb,mGAIKmH,SAASC,eAAe,U,m0CCrCXjR,wBAAc,CACtC+K,eAAgB,CAAC,WACjB1D,YAAa,CAAC,WACdD,eAAgB,CAAC,WAEjB8J,oBAAqB,CAAC,WACtB3J,iBAAkB,CAAC,SACnBD,oBAAqB,CAAC,WAEtBwD,qBAAsB,CAAC,WACvBpD,kBAAmB,CAAC,WACpBF,qBAAsB,CAAC,WAEvBuG,sBAAuB,CAAC,WACxBnG,mBAAoB,CAAC,WACrBD,sBAAuB,CAAC,WAExBqI,wBAAyB,CAAC,WAC1BlI,qBAAsB,CAAC,WACvBD,wBAAyB,CAAC,WAE1BoI,6BAA8B,CAAC,WAC/BjI,0BAA2B,CAAC,WAC5BD,6BAA8B,CAAC,WAE/BmI,iBAAkB,CAAC,WACnBhI,cAAe,CAAC,WAChBD,iBAAkB,CAAC,aA3BfvH,E,EAAAA,MAAOC,E,EAAAA,SA8BF+H,EAAYhI,EACVC,YAIR,IAAME,EAAgBC,IAAU,CACnCyJ,cAAc,EACdhB,KAAM,GACNW,WAAY,GACZM,UAAW,KAEX2G,eAAgB,KAChBC,UAAW,KACXC,YAAa,KAEb1B,cAAe,KAEfrM,QAAS,KAKAgO,EAAgB,CACzBhM,QAAS,SAAAhE,GAAK,OAAIA,EAAMiI,KAAKgI,UAC7B/L,cAAe,SAAAlE,GAAK,OAAIA,EAAMiI,KAAKW,YACnCtD,UAAW,SAAAtF,GAAK,OAAIA,EAAMiI,KAAK6H,YAMtBrG,EAAiB,SAACzJ,EAAD,GAAwB,EAAdI,QACpC,OAAOJ,EAAME,MAAM,CAAE+I,cAAc,EAAMhB,KAAM,MAGtCnC,EAAiB,SAAC9F,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QACpC,OAAOJ,EAAME,MAAM,CAAE+I,cAAc,EAAOC,UAAW,KAAMjB,KAAM7H,EAAQ+F,QACpEyC,WAAYxI,EAAQwI,cAGhB7C,EAAc,SAAC/F,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QACjC,OAAOJ,EAAME,MAAM,CAAE+I,cAAc,EAAOC,UAAW9I,EAAS6H,KAAM,MAI3D2H,EAAsB,SAAC5P,EAAD,GAAwB,EAAdI,QACzC,OAAOJ,EAAME,MAAM,CAAE2P,gBAAgB,KAG5B7J,EAAsB,SAAChG,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QACzC,OAAOJ,EAAME,MAAM,CAAE2P,gBAAgB,EAAOE,YAAa,KAAMD,UAAW1P,KAGjE6F,EAAmB,SAACjG,EAAD,GAAuB,IAAbL,EAAY,EAAZA,MACtC,OAAOK,EAAME,MAAM,CAAE2P,gBAAgB,EAAOE,YAAapQ,EAAOmQ,UAAW,QAIlEtG,EAAuB,SAACxJ,EAAD,GAAwB,EAAdI,QAC1C,OAAOJ,EAAME,MAAM,CAAE+I,cAAc,EAAML,WAAY,MAG5C1C,EAAuB,SAAClG,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QAC1C,OAAOJ,EAAME,MAAM,CAAE+I,cAAc,EAAOC,UAAW,KAAMN,WAAYxI,KAG9DgG,EAAoB,SAACpG,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QACvC,OAAOJ,EAAME,MAAM,CAAE+I,cAAc,EAAOC,UAAU9I,EAASwI,WAAY,MAIhE6D,EAAwB,SAACzM,EAAD,GAAwB,EAAdI,QAC3C,OAAOJ,EAAME,MAAM,CAAEmO,eAAe,EAAMrM,QAAS,MAG1CqE,EAAwB,SAACrG,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QAC3C,OAAOJ,EAAME,MAAM,CAAEmO,eAAe,EAAOnF,UAAW,KAAMlH,QAAS5B,EAAQ4B,WAGpEsE,EAAqB,SAACtG,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QACxC,OAAOJ,EAAME,MAAM,CAAEmO,eAAe,EAAOnF,UAAU9I,EAAS4B,QAAS,MAI9D0M,EAA0B,SAAC1O,EAAD,GAAwB,EAAdI,QAC7C,OAAOJ,EAAME,MAAM,CAAEmO,eAAe,EAAMrM,QAAS,MAG1CuE,EAA0B,SAACvG,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QAC7C,OAAOJ,EAAME,MAAM,CAAEmO,eAAe,EAAOnF,UAAW,KAAMlH,QAAS5B,EAAQ4B,WAGpEwE,EAAuB,SAACxG,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QAC1C,OAAOJ,EAAME,MAAM,CAAEmO,eAAe,EAAOnF,UAAU9I,EAAS4B,QAAS,MAI9D2M,EAA+B,SAAC3O,EAAD,GAAwB,EAAdI,QAClD,OAAOJ,EAAME,MAAM,CAAEmO,eAAe,EAAMrM,QAAS,MAG1CyE,EAA+B,SAACzG,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QAClD,OAAOJ,EAAME,MAAM,CAAEmO,eAAe,EAAOnF,UAAW,KAAMlH,QAAS5B,EAAQ4B,WAGpE0E,EAA4B,SAAC1G,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QAC/C,OAAOJ,EAAME,MAAM,CAAEmO,eAAe,EAAOnF,UAAU9I,EAAS4B,QAAS,MAI9D4M,EAAmB,SAAC5O,EAAD,GAAwB,EAAdI,QACtC,OAAOJ,EAAME,MAAM,CAAEmO,eAAe,EAAMrM,QAAS,MAG1C2E,EAAmB,SAAC3G,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QACtC,OAAOJ,EAAME,MAAM,CAAEmO,eAAe,EAAOnF,UAAW,KAAMlH,QAAS5B,EAAQ4B,QACzE8N,UAAW1P,EAAQkI,OAGd1B,EAAgB,SAAC5G,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QACnC,OAAOJ,EAAME,MAAM,CAAEmO,eAAe,EAAOnF,UAAU9I,EAAS4B,QAAS,MAK9D1B,EAAUC,wBAAchB,GAAD,mBAC/BH,EAAMiI,iBAAmBoC,GADM,cAE/BrK,EAAM8Q,iBAAmBpK,GAFM,cAG/B1G,EAAM+Q,cAAgBpK,GAHS,cAK/B3G,EAAMmI,uBAAyBqI,GALA,cAM/BxQ,EAAMgR,uBAAyBpK,GANA,cAO/B5G,EAAMiR,oBAAsBpK,GAPG,cAS/B7G,EAAMoI,uBAAyBgC,GATA,cAU/BpK,EAAMkR,uBAAyBpK,GAVA,cAW/B9G,EAAMmR,oBAAsBnK,GAXG,cAa/BhH,EAAMqI,yBAA2BgF,GAbF,cAc/BrN,EAAMoR,yBAA2BnK,GAdF,cAe/BjH,EAAMqR,sBAAwBnK,GAfC,cAiB/BlH,EAAMsI,2BAA6BgH,GAjBJ,cAkB/BtP,EAAMsR,2BAA6BnK,GAlBJ,cAmB/BnH,EAAMuR,wBAA0BnK,GAnBD,cAqB/BpH,EAAMuI,gCAAkCgH,GArBT,cAsB/BvP,EAAMwR,gCAAkCnK,GAtBT,cAuB/BrH,EAAMyR,6BAA+BnK,GAvBN,cAyB/BtH,EAAMwI,mBAAqBgH,GAzBI,cA0B/BxP,EAAM0R,mBAAqBnK,GA1BI,cA2B/BvH,EAAM2R,gBAAkBnK,GA3BO,M","file":"static/js/main.b9aeb55f.chunk.js","sourcesContent":["import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  loginRequest: ['data'],\n  loginSuccess: ['user'],\n  loginFailure: ['error'],\n\n  logoutRequest: null,\n  logoutSuccess: null,\n  logoutFailure: ['error'],\n\n  checkTokenRequest: ['payload'],\n  checkTokenSuccess: ['payload'],\n  checkTokenFail: ['error'],\n})\n\nexport const AuthTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n  fetching: false,\n  user: null,\n  error: '',\n  isLoggedIn: false,\n  isLoggingIn: false\n})\n\n/* ------------- Selectors ------------- */\n\nexport const AuthSelectors = {\n  getUser: state => state.user\n}\n\n/* ------------- Reducers ------------- */\n\n// login request\nexport const loginRequest = (state, { data }) => {\n  return state.merge({ fetching: true, user: null, isLoggingIn: true, isLoggedIn: false })\n}\n  \n\n// login success\nexport const loginSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggedIn: true, isLoggingIn: false })\n}\n\n// login fail\nexport const loginFailure = (state, action) => {\n  const { error } = action\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n\n// logout request\nexport const logoutRequest = (state) => {\n  return state.merge({ fetching: true, isLoggingIn: true })\n}\n\nexport const logoutSuccess = (state) => {\n  return state.merge({ fetching: false, error: null, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\nexport const logoutFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, isLoggingIn: false })\n}\n \nexport const checkTokenRequest = (state, { payload }) => {\n  return state.merge({ fetching: true })\n}\n\nexport const checkTokenSuccess = (state, { payload }) => {\n  return state.merge({ fetching: false, error: null, user: payload.profile, isLoggedIn: true, isLoggingIn: false })\n}\n\nexport const checkTokenFail = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.LOGIN_REQUEST]: loginRequest,\n  [Types.LOGIN_SUCCESS]: loginSuccess,\n  [Types.LOGIN_FAILURE]: loginFailure,\n  \n  [Types.CHECK_TOKEN_REQUEST]: checkTokenRequest,\n  [Types.CHECK_TOKEN_FAIL]: checkTokenFail,\n  [Types.CHECK_TOKEN_SUCCESS]: checkTokenSuccess,\n  \n  [Types.LOGOUT_REQUEST]: logoutRequest,\n  [Types.LOGOUT_SUCCESS]: logoutSuccess,\n  [Types.LOGOUT_FAILURE]: logoutFailure,\n  \n})\n","// export const url = 'http://35.222.169.29';\r\nexport const url = 'https://svoyaeda.su';\r\n\r\nexport const apiUrl = `${url}/api`;\r\n\r\nexport default {\r\n    JWT_AUTH: `${apiUrl}/jwt/api-token-auth/`,\r\n    JWT_CHECK_TOKEN: `${apiUrl}/jwt/api-token-verify/`,\r\n    SIGNUP: `${apiUrl}/users/`,\r\n\r\n    // jobs\r\n    GET_JOBS: `${apiUrl}/jobs/`,\r\n    getJobDetail: (id) => `${apiUrl}/jobs/${id}/`,\r\n    activateDeactivateJobDetail: (id) => `${apiUrl}/jobs/${id}/activate_deactivate/`,\r\n    CREATE_FIRST_JOB: `${apiUrl}/jobs/first_create/`,\r\n\r\n    // categories\r\n    GET_CATEGORIES: `${apiUrl}/categories/`,\r\n}","\n// standart serializer field error. There are could be several fields\n// {\n//     \"birth_id\": [\"This field is required.\"]\n// }\n\n\nexport const parseErrorData = (error) => {\n\n    if (error && typeof error.response !== 'undefined') {\n        let errorObj = {\n            status: error.response.status, \n            statusText: error.response.statusText,\n            message: null,\n            response: error.response,\n        }\n        if ('message' in error.response.data) {\n            errorObj.message = JSON.stringify(error.response.data.message)\n        }\n        else {\n            let message = ''\n            for (const property in error.response.data) {\n                message = message + `${property}: ${error.response.data[property]}. `\n              }\n            errorObj.message = message\n\n        }\n        return errorObj\n\n    } else {\n        return { \n         status: 'Connection Error',\n         statusText: 'An error occurred while sending your data!',\n         message: 'An error occurred while sending your data!' }\n    }\n}\n\nexport const createUrlParamsFromFilters = (filters) => {\n    const params = new URLSearchParams()\n\n    if (filters != null) Object.keys(filters).forEach(key => {\n            if (filters[key] !== null && !(filters[key] instanceof Array)) \n                params.append(key, filters[key])\n            if (filters[key] !== null && filters[key] instanceof Array){\n                delete params[key]\n                filters[key].map(value => {\n                    if (value !== '')\n                        params.append(key, value)\n                    return null\n                })\n            }\n        })\n    return params\n}","import axios from 'axios';\nimport endpoints from './endpoints';\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\n\n\nconst create = () => {\n  const logIn = (data: { username: string, password: string}): void => {\n    const { username, password } = data;\n    \n     return axios.post(endpoints.JWT_AUTH, { username, password })\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n            throw new Error(response);\n        }\n        return { token: response.data.token, user: response.data.user };\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n      .then((response) => {\n          // console.log('response.data', response.data)\n          localStorage.setItem('token', response.data.token);\n          return response.user;\n      })\n  }\n\n  const logOut = () => {\n    localStorage.removeItem('token');\n  }\n\n  const checkToken = (payload: string) => {\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token: payload })\n      .then(response => {\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('user_id', response.data.profile.id);\n        return response.data\n      })\n      .catch(err => {\n        const error = new Error(err);\n            error.data = parseErrorData(err);\n            throw error;\n      })\n  }\n\n  return {\n    logIn,\n    checkToken,\n    logOut,\n  }\n}\n\nexport default {\n  create\n}","import axios from 'axios';\r\nimport endpoints from './endpoints';\r\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\r\n\r\nconst create = () => {\r\n\r\n    const getCategories = (filters) => {\r\n        const params = createUrlParamsFromFilters(filters);\r\n        return axios.get(endpoints.GET_CATEGORIES, { params })\r\n        .then(response => response.data)\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const getJobs = (filters) => {\r\n        const params = createUrlParamsFromFilters(filters);\r\n        return axios.get(endpoints.GET_JOBS, { params })\r\n        .then(response => response.data)\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const getJobDetail = id => {\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.getJobDetail(id);\r\n\r\n        return axios({\r\n                    method: 'get',\r\n                    url: url,\r\n                    // headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const createFirstJob = payload => {\r\n        const { name, phone, title, description, budget, address, start_date, end_date, category } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.CREATE_FIRST_JOB;\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"name\", name);\r\n        formData.append(\"phone\", phone);\r\n        formData.append(\"title\", title);\r\n        formData.append(\"description\", description);\r\n        formData.append(\"budget\", budget);\r\n        formData.append(\"address\", address);\r\n        formData.append(\"category\", category);\r\n        start_date && formData.append(\"start_date\", start_date);\r\n        end_date && formData.append(\"end_date\", end_date);\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const partialUpdateJob = payload => {\r\n        const { id, title, description, budget, address, start_date, end_date, category } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.getJobDetail(id);\r\n\r\n        const formData = new FormData();\r\n        title && formData.append(\"title\", title);\r\n        description && formData.append(\"description\", description);\r\n        budget && formData.append(\"budget\", budget);\r\n        address && formData.append(\"address\", address);\r\n        category && formData.append(\"category\", category);\r\n        start_date && formData.append(\"start_date\", start_date);\r\n        end_date && formData.append(\"end_date\", end_date);\r\n        \r\n        return axios({\r\n                    method: 'patch',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const activateDeactivateJob = payload => {\r\n        const { id, active } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.activateDeactivateJobDetail(id);\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"active\", active);\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const createJob = payload => {\r\n        const { title, description, budget, address, start_date, end_date, category } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.GET_JOBS;\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"title\", title);\r\n        formData.append(\"description\", description);\r\n        formData.append(\"budget\", budget);\r\n        formData.append(\"address\", address);\r\n        formData.append(\"category\", category);\r\n        start_date && formData.append(\"start_date\", start_date);\r\n        end_date && formData.append(\"end_date\", end_date);\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    return {\r\n        getJobs,\r\n        getCategories,\r\n        getJobDetail,\r\n        createFirstJob,\r\n        partialUpdateJob,\r\n        activateDeactivateJob,\r\n        createJob\r\n    }\r\n}\r\n\r\nexport default {\r\n    create\r\n}","import { put, call } from 'redux-saga/effects';\r\n// import { push } from 'react-router-redux';\r\n// import Notifications from 'react-notification-system-redux';\r\n\r\nimport AuthActions from '../redux-sauce/auth'\r\n\r\nexport function * logIn (api, action) {\r\n  const { data } = action;\r\n  yield put(AuthActions.resetAuthErrors())\r\n  try {\r\n    let response = yield call(api.logIn, data)\r\n    yield put(AuthActions.loginSuccess(response))\r\n    yield put(AuthActions.toggleModal(false))\r\n  } catch (e) {\r\n    yield put(AuthActions.loginFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * logOut (api, action) {\r\n  try {\r\n    yield call(api.logOut)\r\n    yield put(AuthActions.logoutSuccess())\r\n  } catch (e) {\r\n    yield put(AuthActions.logoutFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function* checkToken(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    let response = yield call(api.checkToken, payload);\r\n    yield put(AuthActions.checkTokenSuccess(response));\r\n  } catch (e) {\r\n    yield put(AuthActions.checkTokenFail(e.message))\r\n  }\r\n}","import { put, call } from 'redux-saga/effects';\r\n\r\nimport JobsActions from '../redux-sauce/jobs'\r\n\r\nexport function* getJobs(api, action) {\r\n    try {\r\n        let response = yield call(api.getJobs, action.payload);\r\n        yield put(JobsActions.getJobsSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.getJobsFail(err))\r\n    }\r\n}\r\n\r\nexport function* getJobDetail(api, action) {\r\n    try {\r\n        let response = yield call(api.getJobDetail, action.payload);\r\n        yield put(JobsActions.getJobDetailSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.getJobDetailFail(err))\r\n    }\r\n}\r\n\r\nexport function* getCategories(api, action) {\r\n    try {\r\n        let response = yield call(api.getCategories, action.payload);\r\n        yield put(JobsActions.getCategoriesSuccess(response.results));\r\n    } catch (err) {\r\n        yield put(JobsActions.getCategoriesFail(err))\r\n    }\r\n}\r\n\r\nexport function* createFirstJob(api, action) {\r\n    try {\r\n        let response = yield call(api.createFirstJob, action.payload);\r\n        yield put(JobsActions.createFirstJobSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.createFirstJobFail(err))\r\n    }\r\n}\r\n\r\nexport function* partialUpdateJob(api, action) {\r\n    try {\r\n        let response = yield call(api.partialUpdateJob, action.payload);\r\n        yield put(JobsActions.partialUpdateJobSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.partialUpdateJobFail(err))\r\n    }\r\n}\r\n\r\nexport function* activateDeactivateJob(api, action) {\r\n    try {\r\n        let response = yield call(api.activateDeactivateJob, action.payload);\r\n        yield put(JobsActions.activateDeactivateJobSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.activateDeactivateJobFail(err))\r\n    }\r\n}\r\n\r\nexport function* createJob(api, action) {\r\n    try {\r\n        let response = yield call(api.createJob, action.payload);\r\n        yield put(JobsActions.createJobSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.createJobFail(err))\r\n    }\r\n}","import { takeEvery, all, takeLatest } from \"redux-saga/effects\";\r\n\r\n/* -------------- API -------------- */\r\nimport AuthApi from \"../api/authApi\";\r\nimport JobsApi from '../api/jobsApi';\r\n\r\n/* ------------- Types ------------- */\r\nimport { AuthTypes } from \"../redux-sauce/auth\";\r\nimport { JobsTypes } from '../redux-sauce/jobs';\r\n\r\n/* ------------- Sagas ------------- */\r\nimport { logIn, logOut, checkToken, signUp, checkAuth } from \"./authSagas\";\r\nimport * as jobsSaga from './jobsSagas';\r\n\r\nconst authApi = AuthApi.create();\r\nconst jobsApi = JobsApi.create();\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeEvery(AuthTypes.LOGIN_REQUEST, logIn, authApi),\r\n    takeEvery(AuthTypes.LOGOUT_REQUEST, logOut, authApi),\r\n    takeEvery(AuthTypes.CHECK_TOKEN_REQUEST, checkToken, authApi),\r\n\r\n    takeEvery(JobsTypes.GET_JOBS_REQUEST, jobsSaga.getJobs, jobsApi),\r\n    takeEvery(JobsTypes.GET_JOB_DETAIL_REQUEST, jobsSaga.getJobDetail, jobsApi),\r\n    takeEvery(JobsTypes.GET_CATEGORIES_REQUEST, jobsSaga.getCategories, jobsApi),\r\n    takeEvery(JobsTypes.CREATE_FIRST_JOB_REQUEST, jobsSaga.createFirstJob, jobsApi),\r\n    takeEvery(JobsTypes.PARTIAL_UPDATE_JOB_REQUEST, jobsSaga.partialUpdateJob, jobsApi),\r\n    takeEvery(JobsTypes.ACTIVATE_DEACTIVATE_JOB_REQUEST, jobsSaga.activateDeactivateJob, jobsApi),\r\n    takeEvery(JobsTypes.CREATE_JOB_REQUEST, jobsSaga.createJob, jobsApi),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\n// import { reducer as notifications } from 'react-notification-system-redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport const reducers = combineReducers({\r\n  // routing: routerReducer,\r\n  auth: require('../redux-sauce/auth').reducer,\r\n  jobs: require('../redux-sauce/jobs').reducer,\r\n  \r\n  form: formReducer,\r\n  // notifications: notifications\r\n})\r\n\r\nexport default (history) => {\r\n  // const rMiddleware = routerMiddleware(history)\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(reducers, composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  ));\r\n\r\n  let sagasManager = sagaMiddleware.run(rootSaga)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(() => {\r\n      const nextRootReducer = require('./').reducers\r\n      store.replaceReducer(nextRootReducer)\r\n\r\n      const newYieldedSagas = require('../sagas').default\r\n      sagasManager.cancel()\r\n      sagasManager.done.then(() => {\r\n        sagasManager = sagaMiddleware.run(newYieldedSagas)\r\n      })\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { url } from '../redux/api/endpoints';\r\n\r\n// actions\r\nimport JobsActions from '../redux/redux-sauce/jobs';\r\n\r\n\r\nfunction JobBlock (props) {\r\n  const { job } = props\r\n  return (\r\n    <div className='job-block'>\r\n      <div className='row'>\r\n        <div className='col-8'>\r\n          <a href='' className='job-title'>{job.title}</a>\r\n        </div>\r\n        <div className='col-4'>\r\n          <p className='job-budget'>{job.budget}р</p>\r\n        </div>\r\n      </div>\r\n      <p className='job-description'>{job.description}</p>\r\n      <p className='job-address'>{job.address}</p>\r\n      {job.start_date ? \r\n        <p className='job-address'>c {job.start_date} до {job.end_date}</p>\r\n        :\r\n        job.end_date ?\r\n          <p className='job-address'>До {job.end_date}</p>\r\n          :\r\n          <p className='job-address'>В любое время</p>\r\n      }\r\n      <div className='row'>\r\n        <div className='col-6'>          \r\n          <p className='job-zakazchik'>{job.zakazchik}</p>\r\n        </div>\r\n        <div className='col-6'>\r\n          <p className='job-created-ago'>{job.created_ago}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nfunction Categories (props){\r\n  const { categories } = props\r\n\r\n  return (\r\n    <div className='block-categories'>\r\n      {categories.length > 0 && categories.map(category => \r\n        <div className='btn-category' key={category.id}>\r\n          {category.ru_name}\r\n        </div>\r\n        )}\r\n      <div className='clearfix'></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getJobs()\r\n    // if (this.props.state.jobs.categories.length == 0)\r\n    //   this.props.getCategories()\r\n\r\n  }\r\n\r\n  render() {\r\n    const { jobs, categories, listFetching, errorList } = this.props.state.jobs\r\n    return (\r\n      // <div className=\"app\">\r\n        <div className='container-fluid '>\r\n          <div className=''>\r\n            <div className='block-subscription'>\r\n              <button className='btn'>Подписаться</button>\r\n            </div>\r\n            <Categories categories={categories}/>\r\n\r\n            <div className='jobs-block'>\r\n              {listFetching && <p>Loading...</p>}\r\n              {jobs.length > 0 && jobs.map(job =>\r\n                <JobBlock job={job} key={job.id}/>\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.notifications,\r\n  state: state\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCategories: query => dispatch(JobsActions.getCategoriesRequest(query)),\r\n  getJobs: query => dispatch(JobsActions.getJobsRequest(query)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import React, { Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\n// actions\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  placeholder,\r\n  type,\r\n  meta: { touched, error, warning }\r\n}) => (\r\n  <div>\r\n    <label>{label}</label>\r\n    <div>\r\n      <input {...input} placeholder={placeholder} type={type} className=\"form-control\"/>\r\n      {touched &&\r\n        ((error && <span>{error}</span>) ||\r\n          (warning && <span>{warning}</span>))}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nfunction JobForm2 (props) {\r\n  let { handleSubmit, pristine, reset, submitting, categories, setData, job, jobDate } = props\r\n  return (\r\n    <div>\r\n      <div>\r\n          <Field\r\n            component={renderField}\r\n            name=\"title\"\r\n            type=\"text\"\r\n            label='Что нужно сделать?'\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Выберите категорию работ</label>\r\n          <div>\r\n            <Field name=\"category\" component=\"select\">\r\n              <option />\r\n              {categories && categories.length > 0 && categories.map(category => \r\n                job && job.category === category.ru_name ?\r\n                <option defaultValue={category.id} key={category.id} >{category.ru_name}</option>\r\n                :\r\n                <option value={category.id} key={category.id}>{category.ru_name}</option>\r\n                )}\r\n            </Field>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label>Укажите объем и виды работ</label>\r\n          <div>\r\n            <Field name=\"description\" component=\"textarea\" className=\"form-control job-form-desc\"\r\n              placeholder='Какую работу нужно сделать? \r\n              - Напишите список работ.\r\n              - Укажите объем работы в квадратных метрах, штуках или в другой подходящей единице измерения.\r\n              - Опишите ваши пожелания и требования, если они есть.\r\n              '\r\n              />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label>Когда нужно выполнить работу?</label>\r\n          <select onChange={setData} name='jobDate'>\r\n            <option defaultValue={'any'}>В любое время</option>\r\n            <option value={'period'}>В период</option>\r\n            <option value={'not later'}>Не позднее, чем</option>\r\n          </select>\r\n          {jobDate == 'period' && \r\n            <div>\r\n              <label>C</label>\r\n              <Field\r\n                name=\"start_date\"\r\n                component='input'\r\n                type=\"date\"\r\n                placeholder=\"\"\r\n                label=\"C\"\r\n              />\r\n              <label>До</label>\r\n              <Field\r\n                name=\"end_date\"\r\n                component='input'\r\n                type=\"date\"\r\n                placeholder=\"\"\r\n                label=\"До\"\r\n              />\r\n            </div>\r\n            }\r\n          {jobDate == 'not later' && \r\n            <Field\r\n              name=\"end_date\"\r\n              component='input'\r\n              type=\"date\"\r\n              placeholder=\"\"\r\n            />\r\n          }\r\n        </div>\r\n        <div>\r\n          <Field\r\n            name=\"budget\"\r\n            component={renderField}\r\n            type=\"number\"\r\n            placeholder=\"\"\r\n            label=\"Бюджет до\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Field\r\n            component={renderField}\r\n            name=\"address\"\r\n            type=\"text\"\r\n            placeholder={'Улан-Удэ'}\r\n            value={'Улан-Удэ'}\r\n            label='Адрес'\r\n          />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport class JobFirstCreateForm extends Component {\r\n  constructor(props) {\r\n   super(props);\r\n   this.state = {\r\n     jobDate: 'any',\r\n   };\r\n\r\n   this.setData = this.setData.bind(this);   \r\n }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n      })\r\n  }\r\n  \r\n  render () {\r\n    let { handleSubmit, pristine, reset, submitting, user, categories } = this.props\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <Field\r\n            component={renderField}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder={''}\r\n            value={user ? user.nickname : ''}\r\n            defaultValue={user ? user.nickname : ''}\r\n            label='Как к вам обращаться?'\r\n          />\r\n        </div>\r\n        <div>\r\n          <Field\r\n            name=\"phone\"\r\n            component={renderField}\r\n            type=\"number\"\r\n            placeholder=\"79148965232\"\r\n            label=\"Телефон\"\r\n          />\r\n        </div>\r\n        <JobForm2 \r\n          handleSubmit={handleSubmit}\r\n          pristine={pristine}\r\n          reset={reset}\r\n          submitting={submitting}\r\n          categories={categories}\r\n          setData={this.setData}\r\n          job={null}\r\n          jobDate={this.state.jobDate} />\r\n        \r\n        <div>\r\n          <button className='btn btn-primary'\r\n            // type=\"submit\"\r\n            onClick={handleSubmit}\r\n\r\n            disabled={pristine || submitting}>\r\n            Создать\r\n          </button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nJobFirstCreateForm = reduxForm({\r\n  form: 'jobFirstCreate' // a unique identifier for this form\r\n})(JobFirstCreateForm)\r\n\r\n\r\nexport class JobCreateForm extends Component {\r\n  constructor(props) {\r\n   super(props);\r\n   this.state = {\r\n     jobDate: 'any',\r\n   };\r\n\r\n   this.setData = this.setData.bind(this);   \r\n }\r\n\r\n componentDidMount() {\r\n  const { start_date, end_date } = this.props.initialValues\r\n  if (start_date) {\r\n    this.setState({...this.state, jobDate : 'period'})\r\n  }\r\n  if (end_date && !start_date){\r\n    this.setState({...this.state, jobDate : 'not later'})\r\n  }\r\n}\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n      })\r\n  }\r\n  \r\n  render () {\r\n    let { handleSubmit, pristine, reset, submitting, categories, job } = this.props\r\n    return (\r\n      <div>\r\n        <JobForm2 \r\n          handleSubmit={handleSubmit}\r\n          pristine={pristine}\r\n          reset={reset}\r\n          submitting={submitting}\r\n          categories={categories}\r\n          setData={this.setData}\r\n          job={job}\r\n          jobDate={this.state.jobDate} />\r\n        <div>\r\n          <button className='btn btn-primary'\r\n            onClick={handleSubmit}\r\n\r\n            disabled={pristine || submitting}>\r\n            Создать\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nJobCreateForm = reduxForm({\r\n  form: 'jobCreate', // a unique identifier for this form\r\n})(JobCreateForm)\r\n\r\n\r\nexport class JobUpdateForm extends Component {\r\n  constructor(props) {\r\n   super(props);\r\n   this.state = {\r\n     jobDate: 'any',\r\n   };\r\n\r\n   this.setData = this.setData.bind(this);   \r\n }\r\n\r\n componentDidMount() {\r\n  const { start_date, end_date } = this.props.initialValues\r\n  if (start_date) {\r\n    this.setState({...this.state, jobDate : 'period'})\r\n  }\r\n  if (end_date && !start_date){\r\n    this.setState({...this.state, jobDate : 'not later'})\r\n  }\r\n}\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n      })\r\n  }\r\n  \r\n  render () {\r\n    let { handleSubmit, pristine, reset, submitting, categories, job } = this.props\r\n    return (\r\n      <div>\r\n        <JobForm2 \r\n          handleSubmit={handleSubmit}\r\n          pristine={pristine}\r\n          reset={reset}\r\n          submitting={submitting}\r\n          categories={categories}\r\n          setData={this.setData}\r\n          job={job}\r\n          jobDate={this.state.jobDate} />\r\n        <div>\r\n          <button className='btn btn-primary'\r\n            onClick={handleSubmit}\r\n            disabled={pristine || submitting}>\r\n            Сохранить\r\n          </button>\r\n          <button className='btn btn-primary'\r\n            onClick={this.props.clickJobEdit}\r\n            data-id={null}\r\n          >\r\n            назад\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nJobUpdateForm = reduxForm({\r\n  form: 'jobUpdate', // a unique identifier for this form\r\n})(JobUpdateForm)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { JobFirstCreateForm } from '../components/JobForms';\r\n\r\n// actions\r\nimport JobsActions from '../redux/redux-sauce/jobs';\r\n\r\n\r\nclass JobFirstCreateShop extends Component {\r\n  constructor(props) {\r\n    super(props);  \r\n    this.state = {\r\n    }\r\n\r\n  this.submitCreateShop = this.submitCreateShop.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getCategories()\r\n  }\r\n\r\n  submitCreateShop(e){\r\n    e.preventDefault()\r\n    this.props.createFirstJob(this.props.state.form.jobFirstCreate.values)\r\n    this.props.history.push(\"/zakazchik/account/\")\r\n  }\r\n\r\n  render() {\r\n    let { user } = this.props\r\n    const { categories } = this.props.state.jobs\r\n    return (\r\n      user && user.zakazchik ?\r\n      <Redirect\r\n            to={{pathname: \"/zakazchik/account/\", }}\r\n          />\r\n      :\r\n      <div className='container-fluid shop-create'>\r\n        <h4>\r\n          Создание работы. Слизано с ремонтника.\r\n        </h4>\r\n        <JobFirstCreateForm shopName={''} shopPhone={''} shopInfo={''} handleSubmit={this.submitCreateShop}\r\n          user={user} categories={categories}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  routing: state.routing,\r\n  user: state.auth.user\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createFirstJob: id => dispatch(JobsActions.createFirstJobRequest(id)),\r\n  getCategories: id => dispatch(JobsActions.getCategoriesRequest(id)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(JobFirstCreateShop);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Main from '../containers/Main';\r\n\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nclass ViberAuthenticationComponent extends Component {\r\n    componentDidMount() {\r\n      // const token = localStorage.getItem('token');\r\n      const { token } = this.props.match.params\r\n      const { user } = this.props\r\n      if (!user) {\r\n        this.props.checkToken(token);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      let access = false\r\n      if (this.props.isLoggedIn === true) access = true\r\n      return (\r\n          <div>\r\n              {access\r\n                  ? <Main />\r\n                  : 'Не авторизован'\r\n              }\r\n          </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n    user: state.auth.user,\r\n    state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViberAuthenticationComponent);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// actions\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction ModalAuth (props){\r\n  return (\r\n    <div className=\"modal fade\" id=\"authModal\" tabIndex=\"-1\" role=\"dialog\" \r\n      aria-labelledby=\"authModalLabel\" aria-hidden=\"true\">\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"authModalLabel\">Войти с помощью</h5>\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <a href='viber://pa?chatURI=dm-eda&context=Chto_za_CONTEXT?&text=войти'>Войти через вайбер</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const { user } = this.props.auth\r\n    if (!user) {\r\n      this.props.checkToken(token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, user } = this.props.auth\r\n    return (\r\n      <div className='header'>\r\n        <h4 className='head-title'><Link to='/'>Название сервиса</Link></h4>\r\n        {isLoggedIn ? \r\n          user.zakazchik ?\r\n            <div>\r\n              <Link to='/zakazchik/account/'>Мои объявления</Link>\r\n              <p>{user.viber_name} <button onClick={this.props.logout}>Выйти</button></p>\r\n            </div>\r\n            :\r\n            <div>\r\n              <Link to='/zakazchik/create_first/'>Создать обьявление</Link>\r\n              <p>{user.viber_name} <button onClick={this.props.logout}>Выйти</button></p>\r\n            </div>\r\n          :\r\n          <div>\r\n            <button className='btn' data-toggle=\"modal\" data-target=\"#authModal\">Создать обьявление</button>\r\n            <button className='btn' data-toggle=\"modal\" data-target=\"#authModal\">Войти</button>\r\n          </div>\r\n        }\r\n        <ModalAuth/>\r\n        <hr/>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  state: state,\r\n\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  logout: () => dispatch(AuthActions.logoutRequest()),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { JobCreateForm, JobUpdateForm } from '../components/JobForms';\r\n\r\n// actions\r\nimport JobsActions from '../redux/redux-sauce/jobs';\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction JobEditable (props) {\r\n  const { job, jobEditId, categories } = props\r\n  let category = null\r\n  Object.keys(categories).forEach(key => {\r\n    if (categories[key] == job.category)\r\n      category = key\r\n  })\r\n  let edit = false\r\n  if (job.id == jobEditId) edit = true\r\n\r\n  return (\r\n    <div>\r\n      {edit ?\r\n        <div>\r\n          <JobUpdateForm \r\n            categories={categories}\r\n            handleSubmit={props.clickEditDone}\r\n            job={job}\r\n            initialValues={{\r\n              id: job.id,\r\n              title: job.title, category: category, description: job.description,\r\n              start_date: job.start_date, end_date: job.end_date, budget: job.budget,\r\n              address: job.address\r\n            }}\r\n            clickJobEdit={props.clickJobEdit}\r\n            />\r\n        </div>\r\n        :\r\n        <div className='job-block'>\r\n          <div className='row'>\r\n            <div className='col-8'>\r\n              <a href='' className='job-title'>{job.title}</a>\r\n            </div>\r\n            <div className='col-4'>\r\n              <p className='job-budget'>{job.budget}р</p>\r\n            </div>\r\n          </div>\r\n          <p className='job-description'>{job.description}</p>\r\n          <p className='job-description'>{job.category}</p>\r\n          <p className='job-address'>{job.address}</p>\r\n          {job.start_date ? \r\n            <p className='job-address'>c {job.start_date} до {job.end_date}</p>\r\n            :\r\n            job.end_date ?\r\n              <p className='job-address'>До {job.end_date}</p>\r\n              :\r\n              <p className='job-address'>В любое время</p>\r\n          }\r\n          <div className='row'>\r\n            <div className='col-6'>\r\n              <button className='btn btn-primary' data-id={job.id} onClick={props.clickJobEdit}>\r\n                  Изменить\r\n              </button>\r\n            </div>\r\n            <div className='col-6'>\r\n              <button className='btn btn-primary' data-id={job.id} onClick={props.clickDeactivate}>\r\n                Сделать неактивной\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nclass JobsEditable extends Component {\r\n  constructor(props) {\r\n    super(props);  \r\n    this.state = {\r\n      jobsEditList: [],\r\n      jobEditId: null,\r\n      needToRefresh: false\r\n    }\r\n\r\n  this.clickJobEdit = this.clickJobEdit.bind(this);\r\n  this.clickEditDone = this.clickEditDone.bind(this);\r\n  this.clickDeactivate = this.clickDeactivate.bind(this);\r\n  this.clickCreateNew = this.clickCreateNew.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  clickJobEdit (e) {\r\n    const { id } = e.target.dataset    \r\n    this.setState({...this.state, \r\n      jobEditId: id\r\n    })\r\n  }\r\n\r\n  clickEditDone () {\r\n    const { values } = this.props.form.jobUpdate\r\n    this.props.partialUpdateJob(values)\r\n    this.setState({...this.state, \r\n      jobEditId: null,\r\n      needToRefresh: true\r\n    })\r\n  }\r\n\r\n  clickDeactivate (e) {\r\n    const { id } = e.target.dataset  \r\n    this.props.activateDeactivateJob({id: id, active: false})\r\n    this.setState({...this.state, \r\n      jobEditId: null,\r\n      needToRefresh: true\r\n    })\r\n  }\r\n\r\n  clickCreateNew() {\r\n    const { values } = this.props.form.jobCreate\r\n    this.props.createJob(values)\r\n    this.setState({...this.state, \r\n      jobEditId: null,\r\n      needToRefresh: true\r\n    })\r\n  }\r\n\r\n  refreshSowsList () {\r\n    if (!this.props.eventFetching && this.state.needToRefresh){\r\n      setTimeout(() => {\r\n        this.setState({...this.state, needToRefresh: false})\r\n        this.props.getJobs({zakazchik: this.props.user.id})\r\n      }, 10)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.refreshSowsList()\r\n    const { jobs, user, categories } = this.props\r\n    const { jobEditId } = this.state\r\n    return (\r\n      <div className=''>\r\n        {jobs.length > 0 && jobs.map(job => \r\n          <JobEditable \r\n            job={job}\r\n            jobEditId={jobEditId}\r\n            clickJobEdit={this.clickJobEdit} \r\n            clickEditDone={this.clickEditDone}\r\n            clickDeactivate={this.clickDeactivate}\r\n            categories={categories}\r\n            key={job.id}\r\n          />\r\n        )}\r\n        {jobs.length < 2 && user ? \r\n          <div>\r\n            <hr />\r\n            <p>Создать работу</p>\r\n            <JobCreateForm \r\n                categories={categories}\r\n                handleSubmit={this.clickCreateNew}\r\n                initialValues={{\r\n                  zakazchik: user ? user.id : null, start_date: null, end_date: null, address: 'Улан-Удэ'\r\n                }}\r\n              />\r\n          </div>\r\n          :\r\n          <div>\r\n            У вас больше 2х активных работ.\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass ZakazchikAcc extends Component {\r\n  constructor(props) {\r\n    super(props);  \r\n    this.state = {\r\n    }\r\n\r\n  this.submitCreateShop = this.submitCreateShop.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user_id = localStorage.getItem('user_id');\r\n    this.props.getJobs({zakazchik: user_id})\r\n  }\r\n\r\n  submitCreateShop(e){\r\n    e.preventDefault()\r\n    this.props.createFirstJob(this.props.state.form.jobCreate.values)\r\n  }\r\n\r\n  render() {\r\n    let { user } = this.props\r\n    const { categories, jobs } = this.props.state.jobs\r\n    const { listFetching } = this.props.state.jobs\r\n    return (\r\n      <div className='container-fluid shop-create'>\r\n        <h4>\r\n          Кабинет заказчика\r\n        </h4>\r\n        {listFetching ?\r\n          <p>Loading</p>\r\n          :\r\n          <JobsEditable \r\n            user={user} \r\n            form={this.props.form}\r\n            categories={categories}\r\n            eventFetching={this.props.state.jobs.eventFetching}\r\n            jobs={jobs}\r\n            getJobs={this.props.getJobs}\r\n            partialUpdateJob={this.props.partialUpdateJob}\r\n            activateDeactivateJob={this.props.activateDeactivateJob}\r\n            createJob={this.props.createJob}/>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  routing: state.routing,\r\n  user: state.auth.user,\r\n  jobs: state.jobs.jobs,\r\n  form: state.form\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createFirstJob: id => dispatch(JobsActions.createFirstJobRequest(id)),\r\n  partialUpdateJob: id => dispatch(JobsActions.partialUpdateJobRequest(id)),\r\n  activateDeactivateJob: id => dispatch(JobsActions.activateDeactivateJobRequest(id)),\r\n  getJobs: query => dispatch(JobsActions.getJobsRequest(query)),\r\n  createJob: id => dispatch(JobsActions.createJobRequest(id)),\r\n\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ZakazchikAcc);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { browserHistory } from 'react-router';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/store/';\r\n\r\n// Containers\r\nimport Main from './containers/Main'\r\nimport JobFirstCreateShop from './containers/CreateFirstJob'\r\nimport ViberAuthenticationComponent from './containers/ViberLogin'\r\nimport Header from './containers/HeaderContainer'\r\nimport ZakazchikAcc from './containers/ZakazchikAcc'\r\n\r\n// components\r\n\r\nconst store = configureStore()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <div className='app'>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Main />\r\n          </Route>\r\n          <Route path=\"/zakazchik/create_first/\" component={JobFirstCreateShop} />\r\n          <Route path=\"/zakazchik/account/\" component={ZakazchikAcc} />\r\n          <Route path=\"/dm/login/v/:token\" component={ViberAuthenticationComponent} />\r\n        </Switch>\r\n        <div className='footer'>\r\n          <p className='foot-title'>Название сервиса</p>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  </Provider>, document.getElementById('root')\r\n);","import { createReducer, createActions } from 'reduxsauce'\r\nimport Immutable from 'seamless-immutable'\r\n\r\n\r\n/* ------------- Types and Action Creators ------------- */\r\nconst { Types, Creators } = createActions({\r\n    getJobsRequest: ['payload'],\r\n    getJobsFail: ['payload'],\r\n    getJobsSuccess: ['payload'],\r\n\r\n    getJobDetailRequest: ['payload'],\r\n    getJobDetailFail: ['error'],\r\n    getJobDetailSuccess: ['payload'],\r\n\r\n    getCategoriesRequest: ['payload'],\r\n    getCategoriesFail: ['payload'],\r\n    getCategoriesSuccess: ['payload'],\r\n\r\n    createFirstJobRequest: ['payload'],\r\n    createFirstJobFail: ['payload'],\r\n    createFirstJobSuccess: ['payload'],\r\n\r\n    partialUpdateJobRequest: ['payload'],\r\n    partialUpdateJobFail: ['payload'],\r\n    partialUpdateJobSuccess: ['payload'],\r\n\r\n    activateDeactivateJobRequest: ['payload'],\r\n    activateDeactivateJobFail: ['payload'],\r\n    activateDeactivateJobSuccess: ['payload'],\r\n\r\n    createJobRequest: ['payload'],\r\n    createJobFail: ['payload'],\r\n    createJobSuccess: ['payload'],\r\n})\r\n\r\nexport const JobsTypes = Types\r\nexport default Creators\r\n\r\n\r\n/* ------------- Initial State ------------- */\r\nexport const INITIAL_STATE = Immutable({\r\n    listFetching: false,\r\n    jobs: [],\r\n    categories: [],\r\n    errorList: null,\r\n\r\n    detailFetching: null,\r\n    jobDetail: null,\r\n    errorDetail: null,\r\n\r\n    eventFetching: null,\r\n\r\n    message: '',\r\n})\r\n\r\n\r\n/* ------------- Selectors ------------- */\r\nexport const JobsSelectors = {\r\n    getJobs: state => state.jobs.job_list,\r\n    getCategories: state => state.jobs.categories,\r\n    createJob: state => state.jobs.jobDetail,\r\n}\r\n\r\n\r\n/* ------------- Reducers ------------- */\r\n// Get Jobs\r\nexport const getJobsRequest = (state, { payload }) => {\r\n    return state.merge({ listFetching: true, jobs: [] })\r\n}\r\n\r\nexport const getJobsSuccess = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList: null, jobs: payload.results,\r\n         categories: payload.categories })\r\n}\r\n\r\nexport const getJobsFail = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList: payload, jobs: [] })\r\n}\r\n\r\n// Get one\r\nexport const getJobDetailRequest = (state, { payload }) => {\r\n    return state.merge({ detailFetching: true, })\r\n}\r\n\r\nexport const getJobDetailSuccess = (state, { payload }) => {\r\n    return state.merge({ detailFetching: false, errorDetail: null, jobDetail: payload})\r\n}\r\n\r\nexport const getJobDetailFail = (state, { error }) => {\r\n    return state.merge({ detailFetching: false, errorDetail: error, jobDetail: null })\r\n}\r\n\r\n// Get categories\r\nexport const getCategoriesRequest = (state, { payload }) => {\r\n    return state.merge({ listFetching: true, categories: [] })\r\n}\r\n\r\nexport const getCategoriesSuccess = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList: null, categories: payload })\r\n}\r\n\r\nexport const getCategoriesFail = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList:payload, categories: [] })\r\n}\r\n\r\n// create first job\r\nexport const createFirstJobRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const createFirstJobSuccess = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message })\r\n}\r\n\r\nexport const createFirstJobFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n// partial update job\r\nexport const partialUpdateJobRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const partialUpdateJobSuccess = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message })\r\n}\r\n\r\nexport const partialUpdateJobFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n// activateDeactivate job\r\nexport const activateDeactivateJobRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const activateDeactivateJobSuccess = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message })\r\n}\r\n\r\nexport const activateDeactivateJobFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n// create job\r\nexport const createJobRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const createJobSuccess = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message, \r\n        jobDetail: payload.job })\r\n}\r\n\r\nexport const createJobFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n/* ------------- Hookup Reducers To Types ------------- */\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [Types.GET_JOBS_REQUEST]: getJobsRequest,\r\n    [Types.GET_JOBS_SUCCESS]: getJobsSuccess,\r\n    [Types.GET_JOBS_FAIL]: getJobsFail,\r\n\r\n    [Types.GET_JOB_DETAIL_REQUEST]: getJobDetailRequest,\r\n    [Types.GET_JOB_DETAIL_SUCCESS]: getJobDetailSuccess,\r\n    [Types.GET_JOB_DETAIL_FAIL]: getJobDetailFail,\r\n\r\n    [Types.GET_CATEGORIES_REQUEST]: getCategoriesRequest,\r\n    [Types.GET_CATEGORIES_SUCCESS]: getCategoriesSuccess,\r\n    [Types.GET_CATEGORIES_FAIL]: getCategoriesFail,\r\n\r\n    [Types.CREATE_FIRST_JOB_REQUEST]: createFirstJobRequest,\r\n    [Types.CREATE_FIRST_JOB_SUCCESS]: createFirstJobSuccess,\r\n    [Types.CREATE_FIRST_JOB_FAIL]: createFirstJobFail,\r\n\r\n    [Types.PARTIAL_UPDATE_JOB_REQUEST]: partialUpdateJobRequest,\r\n    [Types.PARTIAL_UPDATE_JOB_SUCCESS]: partialUpdateJobSuccess,\r\n    [Types.PARTIAL_UPDATE_JOB_FAIL]: partialUpdateJobFail,\r\n\r\n    [Types.ACTIVATE_DEACTIVATE_JOB_REQUEST]: activateDeactivateJobRequest,\r\n    [Types.ACTIVATE_DEACTIVATE_JOB_SUCCESS]: activateDeactivateJobSuccess,\r\n    [Types.ACTIVATE_DEACTIVATE_JOB_FAIL]: activateDeactivateJobFail,\r\n\r\n    [Types.CREATE_JOB_REQUEST]: createJobRequest,\r\n    [Types.CREATE_JOB_SUCCESS]: createJobSuccess,\r\n    [Types.CREATE_JOB_FAIL]: createJobFail,\r\n})\r\n"],"sourceRoot":""}