{"version":3,"sources":["redux/redux-sauce/jobs.js","redux/api/endpoints.js","redux/api/utils.js","redux/api/authApi.js","redux/api/jobsApi.js","redux/sagas/authSagas.js","redux/sagas/jobsSagas.js","redux/sagas/index.js","redux/store/index.js","containers/Main.js","containers/ViberLogin.js","containers/HeaderContainer.js","index.js","redux/redux-sauce/auth.js"],"names":["createActions","getJobsRequest","getJobsFail","getJobsSuccess","getJobDetailRequest","getJobDetailFail","getJobDetailSuccess","getCategoriesRequest","getCategoriesFail","getCategoriesSuccess","Types","Creators","JobsTypes","INITIAL_STATE","Immutable","listFetching","jobs","categories","errorList","detailFetching","jobDetail","errorDetail","message","JobsSelectors","getJobs","state","job_list","getCategories","payload","merge","error","reducer","createReducer","GET_JOBS_REQUEST","GET_JOBS_SUCCESS","GET_JOBS_FAIL","GET_JOB_DETAIL_REQUEST","GET_JOB_DETAIL_SUCCESS","GET_JOB_DETAIL_FAIL","GET_CATEGORIES_REQUEST","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAIL","apiUrl","JWT_AUTH","JWT_CHECK_TOKEN","SIGNUP","GET_JOBS","getJobDetail","id","GET_CATEGORIES","parseErrorData","response","errorObj","status","statusText","data","JSON","stringify","property","createUrlParamsFromFilters","filters","params","URLSearchParams","Object","keys","forEach","key","Array","append","map","value","logIn","username","password","axios","post","endpoints","then","Error","token","user","catch","err","localStorage","setItem","checkToken","logOut","removeItem","get","getItem","url","method","api","action","put","AuthActions","resetAuthErrors","call","loginSuccess","toggleModal","loginFailure","logoutSuccess","logoutFailure","checkTokenSuccess","checkTokenFail","JobsActions","results","root","authApi","AuthApi","jobsApi","JobsApi","all","takeEvery","AuthTypes","LOGIN_REQUEST","LOGOUT_REQUEST","CHECK_TOKEN_REQUEST","jobsSaga","reducers","combineReducers","auth","require","form","formReducer","JobBlock","props","job","className","href","title","budget","description","address","zakazchik","created_ago","Main","this","length","Component","connect","notifications","dispatch","query","ViberAuthenticationComponent","match","console","log","access","isLoggedIn","checkTokenRequest","ModalAuth","tabindex","role","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","Header","to","viber_name","onClick","logout","data-toggle","data-target","logoutRequest","store","history","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","configureStore","ReactDOM","render","classname","exact","path","component","document","getElementById","loginRequest","fetching","isLoggingIn","AuthSelectors","getUser","profile","LOGIN_SUCCESS","LOGIN_FAILURE","CHECK_TOKEN_FAIL","CHECK_TOKEN_SUCCESS","LOGOUT_SUCCESS","LOGOUT_FAILURE"],"mappings":"6vBAK4BA,wBAAc,CACtCC,eAAgB,CAAC,WACjBC,YAAa,CAAC,WACdC,eAAgB,CAAC,WAEjBC,oBAAqB,CAAC,WACtBC,iBAAkB,CAAC,SACnBC,oBAAqB,CAAC,WAEtBC,qBAAsB,CAAC,WACvBC,kBAAmB,CAAC,WACpBC,qBAAsB,CAAC,aAXnBC,E,EAAAA,MAAOC,E,EAAAA,SAcFC,EAAYF,EACVC,YAIR,IAAME,EAAgBC,IAAU,CACnCC,cAAc,EACdC,KAAM,GACNC,WAAY,GACZC,UAAW,KAEXC,eAAgB,KAChBC,UAAW,KACXC,YAAa,KAEbC,QAAS,KAKAC,EAAgB,CACzBC,QAAS,SAAAC,GAAK,OAAIA,EAAMT,KAAKU,UAC7BC,cAAe,SAAAF,GAAK,OAAIA,EAAMT,KAAKC,aAM1BhB,EAAiB,SAACwB,EAAD,GAAwB,EAAdG,QACpC,OAAOH,EAAMI,MAAM,CAAEd,cAAc,EAAMC,KAAM,MAGtCb,EAAiB,SAACsB,EAAD,GAAyB,IAAfG,EAAc,EAAdA,QACpC,OAAOH,EAAMI,MAAM,CAAEd,cAAc,EAAOG,UAAW,KAAMF,KAAMY,KAGxD1B,EAAc,SAACuB,EAAD,GAAyB,IAAfG,EAAc,EAAdA,QACjC,OAAOH,EAAMI,MAAM,CAAEd,cAAc,EAAOG,UAAUU,EAASZ,KAAM,MAI1DZ,EAAsB,SAACqB,EAAD,GAAwB,EAAdG,QACzC,OAAOH,EAAMI,MAAM,CAAEV,gBAAgB,KAG5Bb,EAAsB,SAACmB,EAAD,GAAyB,IAAfG,EAAc,EAAdA,QACzC,OAAOH,EAAMI,MAAM,CAAEV,gBAAgB,EAAOE,YAAa,KAAMD,UAAWQ,KAGjEvB,EAAmB,SAACoB,EAAD,GAAuB,IAAbK,EAAY,EAAZA,MACtC,OAAOL,EAAMI,MAAM,CAAEV,gBAAgB,EAAOE,YAAaS,EAAOV,UAAW,QAIlEb,EAAuB,SAACkB,EAAD,GAAwB,EAAdG,QAC1C,OAAOH,EAAMI,MAAM,CAAEd,cAAc,EAAME,WAAY,MAG5CR,EAAuB,SAACgB,EAAD,GAAyB,IAAfG,EAAc,EAAdA,QAC1C,OAAOH,EAAMI,MAAM,CAAEd,cAAc,EAAOG,UAAW,KAAMD,WAAYW,KAG9DpB,EAAoB,SAACiB,EAAD,GAAyB,IAAfG,EAAc,EAAdA,QACvC,OAAOH,EAAMI,MAAM,CAAEd,cAAc,EAAOG,UAAUU,EAASX,WAAY,MAMhEc,EAAUC,wBAAcnB,GAAD,mBAC/BH,EAAMuB,iBAAmBhC,GADM,cAE/BS,EAAMwB,iBAAmB/B,GAFM,cAG/BO,EAAMyB,cAAgBjC,GAHS,cAK/BQ,EAAM0B,uBAAyBhC,GALA,cAM/BM,EAAM2B,uBAAyB/B,GANA,cAO/BI,EAAM4B,oBAAsBjC,GAPG,cAS/BK,EAAM6B,uBAAyBhC,GATA,cAU/BG,EAAM8B,uBAAyB/B,GAVA,cAW/BC,EAAM+B,oBAAsBjC,GAXG,K,qKCrFvBkC,EAAM,UAFA,sBAEA,QAEJ,GACXC,SAAS,GAAD,OAAKD,EAAL,wBACRE,gBAAgB,GAAD,OAAKF,EAAL,0BACfG,OAAO,GAAD,OAAKH,EAAL,WAGNI,SAAS,GAAD,OAAKJ,EAAL,UACRK,aAAc,SAACC,GAAD,gBAAWN,EAAX,iBAA0BM,EAA1B,MAGdC,eAAe,GAAD,OAAKP,EAAL,iBCRLQ,EAAiB,SAACpB,GAE3B,GAAIA,GAAmC,qBAAnBA,EAAMqB,SAA0B,CAChD,IAAIC,EAAW,CACXC,OAAQvB,EAAMqB,SAASE,OACvBC,WAAYxB,EAAMqB,SAASG,WAC3BhC,QAAS,KACT6B,SAAUrB,EAAMqB,UAEpB,GAAI,YAAarB,EAAMqB,SAASI,KAC5BH,EAAS9B,QAAUkC,KAAKC,UAAU3B,EAAMqB,SAASI,KAAKjC,aAErD,CACD,IAAIA,EAAU,GACd,IAAK,IAAMoC,KAAY5B,EAAMqB,SAASI,KAClCjC,GAAiB,UAAMoC,EAAN,aAAmB5B,EAAMqB,SAASI,KAAKG,GAAvC,MAErBN,EAAS9B,QAAUA,EAGvB,OAAO8B,EAGP,MAAO,CACNC,OAAQ,mBACRC,WAAY,6CACZhC,QAAS,+CAILqC,EAA6B,SAACC,GACvC,IAAMC,EAAS,IAAIC,gBAcnB,OAZe,MAAXF,GAAiBG,OAAOC,KAAKJ,GAASK,SAAQ,SAAAC,GACrB,OAAjBN,EAAQM,IAAmBN,EAAQM,aAAgBC,OACnDN,EAAOO,OAAOF,EAAKN,EAAQM,IACV,OAAjBN,EAAQM,IAAiBN,EAAQM,aAAgBC,eAC1CN,EAAOK,GACdN,EAAQM,GAAKG,KAAI,SAAAC,GAGb,MAFc,KAAVA,GACAT,EAAOO,OAAOF,EAAKI,GAChB,YAIhBT,GCHI,EA5CA,WAqCb,MAAO,CACLU,MArCY,SAAChB,GAAuD,IAC5DiB,EAAuBjB,EAAvBiB,SAAUC,EAAalB,EAAbkB,SAEjB,OAAOC,IAAMC,KAAKC,EAAUjC,SAAU,CAAE6B,WAAUC,aAChDI,MAAK,SAAA1B,GACJ,GAAIA,EAASE,OAAS,KAAOF,EAASE,QAAU,IAC5C,MAAM,IAAIyB,MAAM3B,GAEpB,MAAO,CAAE4B,MAAO5B,EAASI,KAAKwB,MAAOC,KAAM7B,EAASI,KAAKyB,SAE1DC,OAAM,SAAAC,GACL,MAAM,IAAIJ,MAAMI,EAAI/B,SAASI,KAAKQ,OAAOC,KAAKkB,EAAI/B,SAASI,MAAM,IAAI,OAEtEsB,MAAK,SAAC1B,GAEH,OADAgC,aAAaC,QAAQ,QAASjC,EAAS4B,OAChC5B,EAAS6B,SAuBtBK,WAfiB,SAACzD,GAClB,OAAO8C,IAAMC,KAAKC,EAAUhC,gBAAiB,CAAEmC,MAAOnD,IACnDiD,MAAK,SAAA1B,GAEJ,OADAgC,aAAaC,QAAQ,QAASjC,EAASI,KAAKwB,OACrC5B,EAASI,QAEjB0B,OAAM,SAAAC,GACL,IAAMpD,EAAQ,IAAIgD,MAAMI,GAEpB,MADApD,EAAMyB,KAAOL,EAAegC,GACtBpD,MAOdwD,OApBa,WACbH,aAAaI,WAAW,YC4Bb,EAlDA,WA2CX,MAAO,CACH/D,QA/BY,SAACoC,GACb,IAAMC,EAASF,EAA2BC,GAC1C,OAAOc,IAAMc,IAAIZ,EAAU9B,SAAU,CAAEe,WACtCgB,MAAK,SAAA1B,GAAQ,OAAIA,EAASI,QAC1B0B,OAAM,SAAAC,GACH,IAAMpD,EAAQ,IAAIgD,MAAMI,GAExB,MADApD,EAAMyB,KAAOL,EAAegC,GACtBpD,MAyBVH,cA3CkB,SAACiC,GACnB,IAAMC,EAASF,EAA2BC,GAC1C,OAAOc,IAAMc,IAAIZ,EAAU3B,eAAgB,CAAEY,WAC5CgB,MAAK,SAAA1B,GAAQ,OAAIA,EAASI,QAC1B0B,OAAM,SAAAC,GACH,IAAMpD,EAAQ,IAAIgD,MAAMI,GAExB,MADApD,EAAMyB,KAAOL,EAAegC,GACtBpD,MAqCViB,aAtBiB,SAAAC,GACHmC,aAAaM,QAAQ,SAAnC,IACMC,EAAMd,EAAU7B,aAAaC,GAEnC,OAAO0B,IAAM,CACDiB,OAAQ,MACRD,IAAKA,IAGhBb,MAAK,SAAA1B,GACF,OAAOA,EAASI,QAEnB0B,OAAM,SAAAC,GACH,IAAMpD,EAAQ,IAAIgD,MAAMI,GAExB,MADApD,EAAMyB,KAAOL,EAAegC,GACtBpD,Q,0BCrCAyC,G,WAaAe,G,WAUDD,GAvBV,SAAWd,EAAOqB,EAAKC,GAAvB,yEAEL,OADQtC,EAASsC,EAATtC,KADH,SAECuC,YAAIC,UAAYC,mBAFjB,OAIY,OAJZ,kBAIkBC,YAAKL,EAAIrB,MAAOhB,GAJlC,OAKH,OADIJ,EAJD,gBAKG2C,YAAIC,UAAYG,aAAa/C,IALhC,OAMH,OANG,UAMG2C,YAAIC,UAAYI,aAAY,IAN/B,gCAQH,OARG,oCAQGL,YAAIC,UAAYK,aAAa,KAAE9E,UARlC,sDAaA,SAAWgE,EAAQM,EAAKC,GAAxB,iEAEH,OAFG,kBAEGI,YAAKL,EAAIN,QAFZ,OAGH,OAHG,SAGGQ,YAAIC,UAAYM,iBAHnB,8BAKH,OALG,mCAKGP,YAAIC,UAAYO,cAAc,KAAEhF,UALnC,qDAUA,SAAU+D,EAAWO,EAAKC,GAA1B,yEAGY,OAFTjE,EAAYiE,EAAZjE,QADH,kBAGkBqE,YAAKL,EAAIP,WAAYzD,GAHvC,OAIH,OADIuB,EAHD,gBAIG2C,YAAIC,UAAYQ,kBAAkBpD,IAJrC,8BAMH,OANG,mCAMG2C,YAAIC,UAAYS,eAAe,KAAElF,UANpC,qD,eCzBUE,G,WASAuB,G,WASApB,GAlBV,SAAUH,EAAQoE,EAAKC,GAAvB,uEAEgB,OAFhB,kBAEsBI,YAAKL,EAAIpE,QAASqE,EAAOjE,SAF/C,OAGC,OADIuB,EAFL,gBAGO2C,YAAIW,UAAYtG,eAAegD,EAASuD,UAH/C,8BAKC,OALD,mCAKOZ,YAAIW,UAAYvG,YAAZ,OALX,qDASA,SAAU6C,EAAa6C,EAAKC,GAA5B,uEAEgB,OAFhB,kBAEsBI,YAAKL,EAAI7C,aAAc8C,EAAOjE,SAFpD,OAGC,OADIuB,EAFL,gBAGO2C,YAAIW,UAAYnG,oBAAoB6C,IAH3C,8BAKC,OALD,mCAKO2C,YAAIW,UAAYpG,iBAAZ,OALX,qDASA,SAAUsB,EAAciE,EAAKC,GAA7B,uEAEgB,OAFhB,kBAEsBI,YAAKL,EAAIjE,cAAekE,EAAOjE,SAFrD,OAGC,OADIuB,EAFL,gBAGO2C,YAAIW,UAAYhG,qBAAqB0C,EAASuD,UAHrD,8BAKC,OALD,mCAKOZ,YAAIW,UAAYjG,kBAAZ,OALX,qD,eCLkBmG,GAHnBC,EAAUC,IACVC,EAAUC,IAED,SAAUJ,IAAV,iEACb,OADa,SACPK,YAAI,CACRC,YAAUC,YAAUC,cAAe5C,EAAOqC,GAC1CK,YAAUC,YAAUE,eAAgB9B,EAAQsB,GAC5CK,YAAUC,YAAUG,oBAAqBhC,EAAYuB,GAErDK,YAAUrG,YAAUqB,iBAAkBqF,EAAkBR,GACxDG,YAAUrG,YAAUwB,uBAAwBkF,EAAuBR,GACnEG,YAAUrG,YAAU2B,uBAAwB+E,EAAwBR,KARzD,uC,aCVFS,EAAWC,0BAAgB,CAEtCC,KAAMC,EAAQ,GAAuB3F,QACrCf,KAAM0G,EAAQ,IAAuB3F,QAErC4F,KAAMC,M,gCCHR,SAASC,EAAUC,GAAQ,IACjBC,EAAQD,EAARC,IACR,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,uBAAGC,KAAK,GAAGD,UAAU,aAAaD,EAAIG,QAExC,yBAAKF,UAAU,SACb,uBAAGA,UAAU,cAAcD,EAAII,OAA/B,YAGJ,uBAAGH,UAAU,mBAAmBD,EAAIK,aACpC,uBAAGJ,UAAU,eAAeD,EAAIM,SAChC,yBAAKL,UAAU,OACb,yBAAKA,UAAU,SACb,uBAAGA,UAAU,iBAAiBD,EAAIO,YAEpC,yBAAKN,UAAU,SACb,uBAAGA,UAAU,mBAAmBD,EAAIQ,gB,IAOxCC,E,kDACJ,WAAYV,GAAQ,IAAD,8BACjB,cAAMA,IACDrG,MAAQ,GAFI,E,gEAOjBgH,KAAKX,MAAMtG,Y,+BAGH,IAAD,EAC+CiH,KAAKX,MAAMrG,MAAMT,KAA/DA,EADD,EACCA,KAAkBD,GADnB,EACOE,WADP,EACmBF,cADnB,EACiCG,UACxC,OAEI,yBAAK8G,UAAU,oBACb,yBAAKA,UAAU,IACb,yBAAKA,UAAU,sBACb,4BAAQA,UAAU,OAAlB,uEAEF,yBAAKA,UAAU,oBAIb,yBAAKA,UAAU,cAGjB,yBAAKA,UAAU,cACZjH,GAAgB,yCAChBC,EAAK0H,OAAS,GAAK1H,EAAKqD,KAAI,SAAA0D,GAAG,OAC9B,kBAACF,EAAD,CAAUE,IAAKA,c,GA9BZY,aAkDJC,eAVS,SAACnH,GAAD,MAAY,CAClCoH,cAAepH,EAAMoH,cACrBpH,MAAOA,MAGkB,SAACqH,GAAD,MAAe,CACxCnH,cAAe,SAAAoH,GAAK,OAAID,EAASrC,UAAYlG,qBAAqBwI,KAClEvH,QAAS,SAAAuH,GAAK,OAAID,EAASrC,UAAYxG,eAAe8I,QAGzCH,CAGbJ,GChFIQ,E,kLACkB,IAEVjE,EAAU0D,KAAKX,MAAMmB,MAAMpF,OAA3BkB,MACRmE,QAAQC,IAAIV,KAAKX,MAAMrG,OACnBsD,GACF0D,KAAKX,MAAMzC,WAAWN,K,+BAKxB,IAAIqE,GAAS,EAEb,OAD8B,IAA1BX,KAAKX,MAAMuB,aAAqBD,GAAS,GAEzC,6BACKA,EACK,kBAAC,EAAD,MACA,uF,GAjBuBT,aAmC5BC,eAXS,SAACnH,GAAD,MAAY,CAChC4H,WAAY5H,EAAMgG,KAAK4B,WACvBrE,KAAMvD,EAAMgG,KAAKzC,KACjBvD,MAAOA,MAIgB,SAAAqH,GAAQ,MAAK,CACpCzD,WAAY,SAACN,GAAD,OAAW+D,EAAS/C,UAAYuD,kBAAkBvE,QAGnD6D,CAA6CI,GCnC5D,SAASO,EAAWzB,GAClB,OACE,yBAAKE,UAAU,aAAahF,GAAG,YAAYwG,SAAS,KAAKC,KAAK,SAC5DC,kBAAgB,iBAAiBC,cAAY,QAC7C,yBAAK3B,UAAU,gBACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,cAAchF,GAAG,kBAA/B,oFACA,4BAAQ4G,KAAK,SAAS5B,UAAU,QAAQ6B,eAAa,QAAQC,aAAW,SACtE,0BAAMH,cAAY,QAAlB,UAGJ,yBAAK3B,UAAU,cACb,uBAAGC,KAAK,0FAAR,0G,IASN8B,G,kDACJ,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IACDrG,MAAQ,GAFI,E,gEAOjB,IAAMsD,EAAQI,aAAaM,QAAQ,SAC/BV,GACF0D,KAAKX,MAAMzC,WAAWN,K,+BAIhB,IAAD,EACsB0D,KAAKX,MAAML,KAAhC4B,EADD,EACCA,WAAYrE,EADb,EACaA,KACpB,OACE,yBAAKgD,UAAU,UACb,wBAAIA,UAAU,cAAd,+FAECqB,EACCrE,EAAKsD,UACH,6BACE,kBAAC,IAAD,CAAM0B,GAAG,qBAAT,mFACA,2BAAIhF,EAAKiF,WAAT,IAAqB,4BAAQC,QAASzB,KAAKX,MAAMqC,QAA5B,oCAGvB,6BACE,kBAAC,IAAD,CAAMH,GAAG,qBAAT,2GACA,2BAAIhF,EAAKiF,WAAT,IAAqB,4BAAQC,QAASzB,KAAKX,MAAMqC,QAA5B,oCAGzB,6BACE,4BAAQnC,UAAU,MAAMoC,cAAY,QAAQC,cAAY,cAAxD,2GACA,4BAAQrC,UAAU,MAAMoC,cAAY,QAAQC,cAAY,cAAxD,mCAGJ,kBAACd,EAAD,MACA,kC,GAtCaZ,aAsDNC,gBAVS,SAACnH,GAAD,MAAY,CAClCgG,KAAMhG,EAAMgG,KACZhG,MAAOA,MAGkB,SAACqH,GAAD,MAAe,CACxCzD,WAAY,SAACN,GAAD,OAAW+D,EAAS/C,UAAYuD,kBAAkBvE,KAC9DoF,OAAQ,kBAAMrB,EAAS/C,UAAYuE,qBAGtB1B,CAGbmB,IC9DIQ,GJTS,SAACC,GAEd,IAAMC,EAAiBC,cACjBH,EAAQI,sBAAYpD,EAAUqD,8BAClCC,0BAAgBJ,KAGCA,EAAeK,IAAIC,GAetC,OAAOR,EIbKS,GAEdC,IAASC,OACP,kBAAC,IAAD,CAAUX,MAAOA,IACf,kBAAC,IAAD,KACE,yBAAKY,UAAU,OACb,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAUF,kBAAC,IAAD,CAAOA,KAAK,qBAAqBC,UAAWtC,KAE9C,yBAAKhB,UAAU,UACb,uBAAGA,UAAU,cAAb,mGAIKuD,SAASC,eAAe,U,gqBC9CXxL,wBAAc,CACxCyL,aAAc,CAAC,QACfvF,aAAc,CAAC,QACfE,aAAc,CAAC,SAEfkE,cAAe,KACfjE,cAAe,KACfC,cAAe,CAAC,SAEhBgD,kBAAmB,CAAC,WACpB/C,kBAAmB,CAAC,WACpBC,eAAgB,CAAC,WAXX9F,E,EAAAA,MAAOC,E,EAAAA,SAcFuG,EAAYxG,EACVC,YAIR,IAAME,EAAgBC,IAAU,CACrC4K,UAAU,EACV1G,KAAM,KACNlD,MAAO,GACPuH,YAAY,EACZsC,aAAa,IAKFC,EAAgB,CAC3BC,QAAS,SAAApK,GAAK,OAAIA,EAAMuD,OAMbyG,EAAe,SAAChK,EAAD,GAAqB,EAAX8B,KACpC,OAAO9B,EAAMI,MAAM,CAAE6J,UAAU,EAAM1G,KAAM,KAAM2G,aAAa,EAAMtC,YAAY,KAKrEnD,EAAe,SAACzE,EAAD,GAAsB,IAAZuD,EAAW,EAAXA,KACpC,OAAOvD,EAAMI,MAAM,CAAE6J,UAAU,EAAO5J,MAAO,KAAMkD,KAAMA,EAAMqE,YAAY,EAAMsC,aAAa,KAInFvF,EAAe,SAAC3E,EAAOoE,GAAY,IACtC/D,EAAU+D,EAAV/D,MACR,OAAOL,EAAMI,MAAM,CAAE6J,UAAU,EAAO5J,MAAOA,EAAOkD,KAAM,KAAMqE,YAAY,EAAOsC,aAAa,KAKrFrB,EAAgB,SAAC7I,GAC5B,OAAOA,EAAMI,MAAM,CAAE6J,UAAU,EAAMC,aAAa,KAGvCtF,EAAgB,SAAC5E,GAC5B,OAAOA,EAAMI,MAAM,CAAE6J,UAAU,EAAO5J,MAAO,KAAMkD,KAAM,KAAM2G,aAAa,EAAOtC,YAAY,KAGpF/C,EAAgB,SAAC7E,EAAD,GAAuB,IAAbK,EAAY,EAAZA,MACrC,OAAOL,EAAMI,MAAM,CAAE6J,UAAU,EAAO5J,MAAOA,EAAO6J,aAAa,KAGtDrC,EAAoB,SAAC7H,EAAD,GAAwB,EAAdG,QACzC,OAAOH,EAAMI,MAAM,CAAE6J,UAAU,KAGpBnF,EAAoB,SAAC9E,EAAD,GAAyB,IAAfG,EAAc,EAAdA,QACzC,OAAOH,EAAMI,MAAM,CAAE6J,UAAU,EAAO5J,MAAO,KAAMkD,KAAMpD,EAAQkK,QAASzC,YAAY,EAAMsC,aAAa,KAG9FnF,EAAiB,SAAC/E,EAAD,GAAuB,IAAbK,EAAY,EAAZA,MACtC,OAAOL,EAAMI,MAAM,CAAE6J,UAAU,EAAO5J,MAAOA,EAAOkD,KAAM,KAAMqE,YAAY,EAAOsC,aAAa,KAKrF5J,EAAUC,wBAAcnB,GAAD,mBACjCH,EAAMyG,cAAgBsE,GADW,cAEjC/K,EAAMqL,cAAgB7F,GAFW,cAGjCxF,EAAMsL,cAAgB5F,GAHW,cAKjC1F,EAAM2G,oBAAsBiC,GALK,cAMjC5I,EAAMuL,iBAAmBzF,GANQ,cAOjC9F,EAAMwL,oBAAsB3F,GAPK,cASjC7F,EAAM0G,eAAiBkD,GATU,cAUjC5J,EAAMyL,eAAiB9F,GAVU,cAWjC3F,EAAM0L,eAAiB9F,GAXU,K","file":"static/js/main.4dee8c64.chunk.js","sourcesContent":["import { createReducer, createActions } from 'reduxsauce'\r\nimport Immutable from 'seamless-immutable'\r\n\r\n\r\n/* ------------- Types and Action Creators ------------- */\r\nconst { Types, Creators } = createActions({\r\n    getJobsRequest: ['payload'],\r\n    getJobsFail: ['payload'],\r\n    getJobsSuccess: ['payload'],\r\n\r\n    getJobDetailRequest: ['payload'],\r\n    getJobDetailFail: ['error'],\r\n    getJobDetailSuccess: ['payload'],\r\n\r\n    getCategoriesRequest: ['payload'],\r\n    getCategoriesFail: ['payload'],\r\n    getCategoriesSuccess: ['payload'],\r\n})\r\n\r\nexport const JobsTypes = Types\r\nexport default Creators\r\n\r\n\r\n/* ------------- Initial State ------------- */\r\nexport const INITIAL_STATE = Immutable({\r\n    listFetching: false,\r\n    jobs: [],\r\n    categories: [],\r\n    errorList: null,\r\n\r\n    detailFetching: null,\r\n    jobDetail: null,\r\n    errorDetail: null,\r\n\r\n    message: '',\r\n})\r\n\r\n\r\n/* ------------- Selectors ------------- */\r\nexport const JobsSelectors = {\r\n    getJobs: state => state.jobs.job_list,\r\n    getCategories: state => state.jobs.categories,\r\n}\r\n\r\n\r\n/* ------------- Reducers ------------- */\r\n// Get Jobs\r\nexport const getJobsRequest = (state, { payload }) => {\r\n    return state.merge({ listFetching: true, jobs: [] })\r\n}\r\n\r\nexport const getJobsSuccess = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList: null, jobs: payload })\r\n}\r\n\r\nexport const getJobsFail = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList:payload, jobs: [] })\r\n}\r\n\r\n// Get one\r\nexport const getJobDetailRequest = (state, { payload }) => {\r\n    return state.merge({ detailFetching: true, })\r\n}\r\n\r\nexport const getJobDetailSuccess = (state, { payload }) => {\r\n    return state.merge({ detailFetching: false, errorDetail: null, jobDetail: payload})\r\n}\r\n\r\nexport const getJobDetailFail = (state, { error }) => {\r\n    return state.merge({ detailFetching: false, errorDetail: error, jobDetail: null })\r\n}\r\n\r\n// Get categories\r\nexport const getCategoriesRequest = (state, { payload }) => {\r\n    return state.merge({ listFetching: true, categories: [] })\r\n}\r\n\r\nexport const getCategoriesSuccess = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList: null, categories: payload })\r\n}\r\n\r\nexport const getCategoriesFail = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList:payload, categories: [] })\r\n}\r\n\r\n\r\n/* ------------- Hookup Reducers To Types ------------- */\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [Types.GET_JOBS_REQUEST]: getJobsRequest,\r\n    [Types.GET_JOBS_SUCCESS]: getJobsSuccess,\r\n    [Types.GET_JOBS_FAIL]: getJobsFail,\r\n\r\n    [Types.GET_JOB_DETAIL_REQUEST]: getJobDetailRequest,\r\n    [Types.GET_JOB_DETAIL_SUCCESS]: getJobDetailSuccess,\r\n    [Types.GET_JOB_DETAIL_FAIL]: getJobDetailFail,\r\n\r\n    [Types.GET_CATEGORIES_REQUEST]: getCategoriesRequest,\r\n    [Types.GET_CATEGORIES_SUCCESS]: getCategoriesSuccess,\r\n    [Types.GET_CATEGORIES_FAIL]: getCategoriesFail,\r\n})\r\n","// export const url = 'http://35.222.169.29';\r\nexport const url = 'https://svoyaeda.su';\r\n\r\nexport const apiUrl = `${url}/api`;\r\n\r\nexport default {\r\n    JWT_AUTH: `${apiUrl}/jwt/api-token-auth/`,\r\n    JWT_CHECK_TOKEN: `${apiUrl}/jwt/api-token-verify/`,\r\n    SIGNUP: `${apiUrl}/users/`,\r\n\r\n    // jobs\r\n    GET_JOBS: `${apiUrl}/jobs/`,\r\n    getJobDetail: (id) => `${apiUrl}/jobs/${id}/`,\r\n\r\n    // categories\r\n    GET_CATEGORIES: `${apiUrl}/categories/`,\r\n}","\n// standart serializer field error. There are could be several fields\n// {\n//     \"birth_id\": [\"This field is required.\"]\n// }\n\n\nexport const parseErrorData = (error) => {\n\n    if (error && typeof error.response !== 'undefined') {\n        let errorObj = {\n            status: error.response.status, \n            statusText: error.response.statusText,\n            message: null,\n            response: error.response,\n        }\n        if ('message' in error.response.data) {\n            errorObj.message = JSON.stringify(error.response.data.message)\n        }\n        else {\n            let message = ''\n            for (const property in error.response.data) {\n                message = message + `${property}: ${error.response.data[property]}. `\n              }\n            errorObj.message = message\n\n        }\n        return errorObj\n\n    } else {\n        return { \n         status: 'Connection Error',\n         statusText: 'An error occurred while sending your data!',\n         message: 'An error occurred while sending your data!' }\n    }\n}\n\nexport const createUrlParamsFromFilters = (filters) => {\n    const params = new URLSearchParams()\n\n    if (filters != null) Object.keys(filters).forEach(key => {\n            if (filters[key] !== null && !(filters[key] instanceof Array)) \n                params.append(key, filters[key])\n            if (filters[key] !== null && filters[key] instanceof Array){\n                delete params[key]\n                filters[key].map(value => {\n                    if (value !== '')\n                        params.append(key, value)\n                    return null\n                })\n            }\n        })\n    return params\n}","import axios from 'axios';\nimport endpoints from './endpoints';\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\n\n\nconst create = () => {\n  const logIn = (data: { username: string, password: string}): void => {\n    const { username, password } = data;\n    \n     return axios.post(endpoints.JWT_AUTH, { username, password })\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n            throw new Error(response);\n        }\n        return { token: response.data.token, user: response.data.user };\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n      .then((response) => {\n          localStorage.setItem('token', response.token);\n          return response.user;\n      })\n  }\n\n  const logOut = () => {\n    localStorage.removeItem('token');\n  }\n\n  const checkToken = (payload: string) => {\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token: payload })\n      .then(response => {\n        localStorage.setItem('token', response.data.token);\n        return response.data\n      })\n      .catch(err => {\n        const error = new Error(err);\n            error.data = parseErrorData(err);\n            throw error;\n      })\n  }\n\n  return {\n    logIn,\n    checkToken,\n    logOut,\n  }\n}\n\nexport default {\n  create\n}","import axios from 'axios';\r\nimport endpoints from './endpoints';\r\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\r\n\r\nconst create = () => {\r\n\r\n    const getCategories = (filters) => {\r\n        const params = createUrlParamsFromFilters(filters);\r\n        return axios.get(endpoints.GET_CATEGORIES, { params })\r\n        .then(response => response.data)\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const getJobs = (filters) => {\r\n        const params = createUrlParamsFromFilters(filters);\r\n        return axios.get(endpoints.GET_JOBS, { params })\r\n        .then(response => response.data)\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const getJobDetail = id => {\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.getJobDetail(id);\r\n\r\n        return axios({\r\n                    method: 'get',\r\n                    url: url,\r\n                    // headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    return {\r\n        getJobs,\r\n        getCategories,\r\n        getJobDetail\r\n    }\r\n}\r\n\r\nexport default {\r\n    create\r\n}","import { put, call } from 'redux-saga/effects';\r\n// import { push } from 'react-router-redux';\r\n// import Notifications from 'react-notification-system-redux';\r\n\r\nimport AuthActions from '../redux-sauce/auth'\r\n\r\nexport function * logIn (api, action) {\r\n  const { data } = action;\r\n  yield put(AuthActions.resetAuthErrors())\r\n  try {\r\n    let response = yield call(api.logIn, data)\r\n    yield put(AuthActions.loginSuccess(response))\r\n    yield put(AuthActions.toggleModal(false))\r\n  } catch (e) {\r\n    yield put(AuthActions.loginFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * logOut (api, action) {\r\n  try {\r\n    yield call(api.logOut)\r\n    yield put(AuthActions.logoutSuccess())\r\n  } catch (e) {\r\n    yield put(AuthActions.logoutFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function* checkToken(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    let response = yield call(api.checkToken, payload);\r\n    yield put(AuthActions.checkTokenSuccess(response));\r\n  } catch (e) {\r\n    yield put(AuthActions.checkTokenFail(e.message))\r\n  }\r\n}","import { put, call } from 'redux-saga/effects';\r\n\r\nimport JobsActions from '../redux-sauce/jobs'\r\n\r\nexport function* getJobs(api, action) {\r\n    try {\r\n        let response = yield call(api.getJobs, action.payload);\r\n        yield put(JobsActions.getJobsSuccess(response.results));\r\n    } catch (err) {\r\n        yield put(JobsActions.getJobsFail(err))\r\n    }\r\n}\r\n\r\nexport function* getJobDetail(api, action) {\r\n    try {\r\n        let response = yield call(api.getJobDetail, action.payload);\r\n        yield put(JobsActions.getJobDetailSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.getJobDetailFail(err))\r\n    }\r\n}\r\n\r\nexport function* getCategories(api, action) {\r\n    try {\r\n        let response = yield call(api.getCategories, action.payload);\r\n        yield put(JobsActions.getCategoriesSuccess(response.results));\r\n    } catch (err) {\r\n        yield put(JobsActions.getCategoriesFail(err))\r\n    }\r\n}","import { takeEvery, all, takeLatest } from \"redux-saga/effects\";\r\n\r\n/* -------------- API -------------- */\r\nimport AuthApi from \"../api/authApi\";\r\nimport JobsApi from '../api/jobsApi';\r\n\r\n/* ------------- Types ------------- */\r\nimport { AuthTypes } from \"../redux-sauce/auth\";\r\nimport { JobsTypes } from '../redux-sauce/jobs';\r\n\r\n/* ------------- Sagas ------------- */\r\nimport { logIn, logOut, checkToken, signUp, checkAuth } from \"./authSagas\";\r\nimport * as jobsSaga from './jobsSagas';\r\n\r\nconst authApi = AuthApi.create();\r\nconst jobsApi = JobsApi.create();\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeEvery(AuthTypes.LOGIN_REQUEST, logIn, authApi),\r\n    takeEvery(AuthTypes.LOGOUT_REQUEST, logOut, authApi),\r\n    takeEvery(AuthTypes.CHECK_TOKEN_REQUEST, checkToken, authApi),\r\n\r\n    takeEvery(JobsTypes.GET_JOBS_REQUEST, jobsSaga.getJobs, jobsApi),\r\n    takeEvery(JobsTypes.GET_JOB_DETAIL_REQUEST, jobsSaga.getJobDetail, jobsApi),\r\n    takeEvery(JobsTypes.GET_CATEGORIES_REQUEST, jobsSaga.getCategories, jobsApi),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\n// import { reducer as notifications } from 'react-notification-system-redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport const reducers = combineReducers({\r\n  // routing: routerReducer,\r\n  auth: require('../redux-sauce/auth').reducer,\r\n  jobs: require('../redux-sauce/jobs').reducer,\r\n  \r\n  form: formReducer,\r\n  // notifications: notifications\r\n})\r\n\r\nexport default (history) => {\r\n  // const rMiddleware = routerMiddleware(history)\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(reducers, composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  ));\r\n\r\n  let sagasManager = sagaMiddleware.run(rootSaga)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(() => {\r\n      const nextRootReducer = require('./').reducers\r\n      store.replaceReducer(nextRootReducer)\r\n\r\n      const newYieldedSagas = require('../sagas').default\r\n      sagasManager.cancel()\r\n      sagasManager.done.then(() => {\r\n        sagasManager = sagaMiddleware.run(newYieldedSagas)\r\n      })\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { url } from '../redux/api/endpoints';\r\n\r\n// actions\r\nimport JobsActions from '../redux/redux-sauce/jobs';\r\n\r\n\r\nfunction JobBlock (props) {\r\n  const { job } = props\r\n  return (\r\n    <div className='job-block'>\r\n      <div className='row'>\r\n        <div className='col-8'>\r\n          <a href='' className='job-title'>{job.title}</a>\r\n        </div>\r\n        <div className='col-4'>\r\n          <p className='job-budget'>{job.budget}р</p>\r\n        </div>\r\n      </div>\r\n      <p className='job-description'>{job.description}</p>\r\n      <p className='job-address'>{job.address}</p>\r\n      <div className='row'>\r\n        <div className='col-6'>          \r\n          <p className='job-zakazchik'>{job.zakazchik}</p>\r\n        </div>\r\n        <div className='col-6'>\r\n          <p className='job-created-ago'>{job.created_ago}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getJobs()\r\n  }\r\n\r\n  render() {\r\n    const { jobs, categories, listFetching, errorList } = this.props.state.jobs\r\n    return (\r\n      // <div className=\"app\">\r\n        <div className='container-fluid '>\r\n          <div className=''>\r\n            <div className='block-subscription'>\r\n              <button className='btn'>Подписаться</button>\r\n            </div>\r\n            <div className='block-categories'>\r\n              {/* {categories && categories.map(cat =>\r\n                <p>{}</p>\r\n              )} */}\r\n              <div className='clearfix'></div>\r\n            </div>\r\n\r\n            <div className='jobs-block'>\r\n              {listFetching && <p>Loading...</p>}\r\n              {jobs.length > 0 && jobs.map(job =>\r\n                <JobBlock job={job}/>\r\n                )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.notifications,\r\n  state: state\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCategories: query => dispatch(JobsActions.getCategoriesRequest(query)),\r\n  getJobs: query => dispatch(JobsActions.getJobsRequest(query)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Main from '../containers/Main';\r\n\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nclass ViberAuthenticationComponent extends Component {\r\n    componentDidMount() {\r\n      // const token = localStorage.getItem('token');\r\n      const { token } = this.props.match.params\r\n      console.log(this.props.state)\r\n      if (token) {\r\n        this.props.checkToken(token);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      let access = false\r\n      if (this.props.isLoggedIn === true) access = true\r\n      return (\r\n          <div>\r\n              {access\r\n                  ? <Main />\r\n                  : 'Не авторизован'\r\n              }\r\n          </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n    user: state.auth.user,\r\n    state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViberAuthenticationComponent);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// actions\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction ModalAuth (props){\r\n  return (\r\n    <div className=\"modal fade\" id=\"authModal\" tabindex=\"-1\" role=\"dialog\" \r\n      aria-labelledby=\"authModalLabel\" aria-hidden=\"true\">\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"authModalLabel\">Войти с помощью</h5>\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <a href='viber://pa?chatURI=dm-eda&context=Chto_za_CONTEXT?&text=войти'>Войти через вайбер</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.props.checkToken(token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, user } = this.props.auth\r\n    return (\r\n      <div className='header'>\r\n        <h4 className='head-title'>Название сервиса</h4>\r\n        {/* <Link to='/dm/shops/create/'>Создать обьявление</Link> */}\r\n        {isLoggedIn ? \r\n          user.zakazchik ?\r\n            <div>\r\n              <Link to='/dm/shops/create/'>Мои объявления</Link>\r\n              <p>{user.viber_name} <button onClick={this.props.logout}>Выйти</button></p>\r\n            </div>\r\n            :\r\n            <div>\r\n              <Link to='/dm/shops/create/'>Создать обьявление</Link>\r\n              <p>{user.viber_name} <button onClick={this.props.logout}>Выйти</button></p>\r\n            </div>\r\n          :\r\n          <div>\r\n            <button className='btn' data-toggle=\"modal\" data-target=\"#authModal\">Создать обьявление</button>\r\n            <button className='btn' data-toggle=\"modal\" data-target=\"#authModal\">Войти</button>\r\n          </div>\r\n        }\r\n        <ModalAuth/>\r\n        <hr/>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  state: state\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  logout: () => dispatch(AuthActions.logoutRequest()),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { browserHistory } from 'react-router';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/store/';\r\n\r\n// Containers\r\nimport Main from './containers/Main'\r\n// import ShopDetail from './containers/ShopDetail'\r\n// import CreateShop from './containers/CreateShop'\r\nimport ViberAuthenticationComponent from './containers/ViberLogin'\r\nimport Header from './containers/HeaderContainer'\r\n// import AccountAdsContainer from './containers/AccountAdsContainer'\r\n\r\n// components\r\n\r\n\r\n// const store = configureStore(browserHistory)\r\nconst store = configureStore()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <div classname='app'>\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Main />\r\n          </Route>\r\n          {/* <Route exact path=\"/categories/:catName/\">\r\n            <Main />\r\n          </Route> */}\r\n          {/* <Route path=\"/dm/shops/:shopId/products/:catName\" component={ShopDetail} />\r\n          <Route path=\"/dm/shops/create/\" component={CreateShop} /> */}\r\n          {/* <Route path=\"/dm/account/ads/:shopId/\">\r\n            <AccountAdsContainer />\r\n          </Route>  */}\r\n          <Route path=\"/dm/login/v/:token\" component={ViberAuthenticationComponent} />\r\n        </Switch>\r\n        <div className='footer'>\r\n          <p className='foot-title'>Название сервиса</p>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  </Provider>, document.getElementById('root')\r\n);","import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  loginRequest: ['data'],\n  loginSuccess: ['user'],\n  loginFailure: ['error'],\n\n  logoutRequest: null,\n  logoutSuccess: null,\n  logoutFailure: ['error'],\n\n  checkTokenRequest: ['payload'],\n  checkTokenSuccess: ['payload'],\n  checkTokenFail: ['error'],\n})\n\nexport const AuthTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n  fetching: false,\n  user: null,\n  error: '',\n  isLoggedIn: false,\n  isLoggingIn: false\n})\n\n/* ------------- Selectors ------------- */\n\nexport const AuthSelectors = {\n  getUser: state => state.user\n}\n\n/* ------------- Reducers ------------- */\n\n// login request\nexport const loginRequest = (state, { data }) => {\n  return state.merge({ fetching: true, user: null, isLoggingIn: true, isLoggedIn: false })\n}\n  \n\n// login success\nexport const loginSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggedIn: true, isLoggingIn: false })\n}\n\n// login fail\nexport const loginFailure = (state, action) => {\n  const { error } = action\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n\n// logout request\nexport const logoutRequest = (state) => {\n  return state.merge({ fetching: true, isLoggingIn: true })\n}\n\nexport const logoutSuccess = (state) => {\n  return state.merge({ fetching: false, error: null, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\nexport const logoutFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, isLoggingIn: false })\n}\n \nexport const checkTokenRequest = (state, { payload }) => {\n  return state.merge({ fetching: true })\n}\n\nexport const checkTokenSuccess = (state, { payload }) => {\n  return state.merge({ fetching: false, error: null, user: payload.profile, isLoggedIn: true, isLoggingIn: false })\n}\n\nexport const checkTokenFail = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.LOGIN_REQUEST]: loginRequest,\n  [Types.LOGIN_SUCCESS]: loginSuccess,\n  [Types.LOGIN_FAILURE]: loginFailure,\n  \n  [Types.CHECK_TOKEN_REQUEST]: checkTokenRequest,\n  [Types.CHECK_TOKEN_FAIL]: checkTokenFail,\n  [Types.CHECK_TOKEN_SUCCESS]: checkTokenSuccess,\n  \n  [Types.LOGOUT_REQUEST]: logoutRequest,\n  [Types.LOGOUT_SUCCESS]: logoutSuccess,\n  [Types.LOGOUT_FAILURE]: logoutFailure,\n  \n})\n"],"sourceRoot":""}