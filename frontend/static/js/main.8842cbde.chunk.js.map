{"version":3,"sources":["redux/redux-sauce/auth.js","redux/api/endpoints.js","redux/api/utils.js","redux/api/authApi.js","redux/api/jobsApi.js","redux/api/isubsApi.js","redux/sagas/authSagas.js","redux/sagas/jobsSagas.js","redux/sagas/isubsSagas.js","redux/sagas/index.js","redux/store/index.js","containers/JobDetail.js","containers/Main.js","components/JobForms.js","containers/CreateFirstJob.js","containers/ViberLogin.js","containers/HeaderContainer.js","containers/ZakazchikAcc.js","index.js","redux/redux-sauce/isubs.js","components/utils.js","redux/redux-sauce/jobs.js"],"names":["createActions","loginRequest","loginSuccess","loginFailure","logoutRequest","logoutSuccess","logoutFailure","checkTokenRequest","checkTokenSuccess","checkTokenFail","partialUpdateUserRequest","partialUpdateUserFail","partialUpdateUserSuccess","Types","Creators","AuthTypes","INITIAL_STATE","Immutable","fetching","user","error","isLoggedIn","isLoggingIn","AuthSelectors","getUser","state","data","merge","action","payload","profile","message","nickname","phone","reducer","createReducer","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","CHECK_TOKEN_REQUEST","CHECK_TOKEN_FAIL","CHECK_TOKEN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","PARTIAL_UPDATE_USER_REQUEST","PARTIAL_UPDATE_USER_SUCCESS","PARTIAL_UPDATE_USER_FAIL","apiUrl","JWT_AUTH","JWT_CHECK_TOKEN","updateUser","id","GET_JOBS","getJobDetail","activateDeactivateJobDetail","CREATE_FIRST_JOB","addJobImage","deleteJobImage","GET_CATEGORIES","CREATE_OR_CHANGE_ISUB","parseErrorData","response","errorObj","status","statusText","JSON","stringify","property","createUrlParamsFromFilters","filters","params","URLSearchParams","Object","keys","forEach","key","Array","append","map","value","logIn","username","password","axios","post","endpoints","then","Error","token","catch","err","localStorage","setItem","checkToken","logOut","removeItem","partialUpdateUser","getItem","url","formData","FormData","method","headers","getJobs","get","getCategories","createFirstJob","name","title","description","budget","address","start_date","end_date","category","partialUpdateJob","activateDeactivateJob","active","createJob","original","image","createOrChangeIsub","categories","length","cat","console","log","api","put","AuthActions","resetAuthErrors","call","toggleModal","IsubsActions","createOrChangeIsubSuccess","JobsActions","getJobsSuccess","getJobsFail","getJobDetailSuccess","getJobDetailFail","getCategoriesSuccess","results","getCategoriesFail","createFirstJobSuccess","createFirstJobFail","partialUpdateJobSuccess","partialUpdateJobFail","activateDeactivateJobSuccess","activateDeactivateJobFail","createJobSuccess","createJobFail","addJobImageSuccess","addJobImageFail","deleteJobImageSuccess","deleteJobImageFail","createOrChangeIsubFail","root","authApi","AuthApi","jobsApi","JobsApi","isubsApi","IsubsApi","all","takeEvery","JobsTypes","GET_JOBS_REQUEST","jobsSaga","GET_JOB_DETAIL_REQUEST","GET_CATEGORIES_REQUEST","CREATE_FIRST_JOB_REQUEST","PARTIAL_UPDATE_JOB_REQUEST","ACTIVATE_DEACTIVATE_JOB_REQUEST","CREATE_JOB_REQUEST","ADD_JOB_IMAGE_REQUEST","DELETE_JOB_IMAGE_REQUEST","IsubsTypes","CREATE_OR_CHANGE_ISUB_REQUEST","isubsSaga","reducers","combineReducers","auth","require","jobs","isubs","form","formReducer","JobBlock","props","job","thumb","non_zoom","className","zakazchik","created_ago","zakazchik_phone","images","img","src","non_zoom_image","thumb_image","JobDetail","needToRefresh","this","match","jobDetail","detailFetching","Component","connect","notifications","filterCategories","dispatch","query","getCategoriesRequest","getJobDetailRequest","Categories","catClass","includes","onClick","clickCategory","data-id","ru_name","Main","bind","clickSubscribe","clickUnsubscribe","clickSubscribeAll","e","target","dataset","toggleFilterCategories","setState","toggleArray","listFetching","setTimeout","greetingMessage","greetingTime","Date","getHours","refreshList","errorList","isub","getGreetings","style","data-menu","viber_avatar","data-card-height","data-src","idx","to","getJobsRequest","catId","createOrChangeIsubRequest","renderTextField","label","placeholder","input","multiline","meta","touched","invalid","labelClass","custom","TextField","helperText","InputLabelProps","renderSelectField","formClass","children","FormControl","InputLabel","Select","native","FormHelperText","renderFromHelper","renderDateTimeField","type","shrink","renderField","required","warning","JobForm2","handleSubmit","pristine","reset","submitting","jobDate","Field","component","onChange","setData","JobFirstCreateForm","onSubmit","defaultValue","disabled","reduxForm","JobCreateForm","initialValues","JobUpdateForm","clickJobEdit","UsernamePhoneForm","edit","setEdit","hidden","JobFirstCreateShop","submitCreateShop","preventDefault","jobFirstCreate","values","history","push","pathname","shopName","shopPhone","shopInfo","routing","createFirstJobRequest","ViberAuthenticationComponent","access","from","LogoutComp","useHistory","logout","Header","modalOpen","data-toggle","data-target","Modal","open","onClose","aria-labelledby","aria-describedby","href","JobEditable","jobEditId","clickEditDone","clickDeactivate","data-job-id","JobsEditable","jobsEditList","clickCreateNew","jobUpdate","jobCreate","files","jobId","eventFetching","refreshSowsList","UsernamePhone","useState","changeUsernamePhone","ZakazchikAcc","user_id","usernamePhoneForm","partialUpdateJobRequest","activateDeactivateJobRequest","createJobRequest","addJobImageRequest","deleteJobImageRequest","store","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","configureStore","ReactDOM","render","exact","path","document","getElementById","IsubsSelectors","lodashToggle","parseInt","CREATE_OR_CHANGE_ISUB_SUCCESS","CREATE_OR_CHANGE_ISUB_FAIL","TOGGLE_FILTER_CATEGORIES","arr","string","indexOf","filter","item","array","_","xor","getObjectbyId","list","obj","element","errorDetail","JobsSelectors","job_list","jobInList","index","slice","GET_JOBS_SUCCESS","GET_JOBS_FAIL","GET_JOB_DETAIL_SUCCESS","GET_JOB_DETAIL_FAIL","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAIL","CREATE_FIRST_JOB_SUCCESS","CREATE_FIRST_JOB_FAIL","PARTIAL_UPDATE_JOB_SUCCESS","PARTIAL_UPDATE_JOB_FAIL","ACTIVATE_DEACTIVATE_JOB_SUCCESS","ACTIVATE_DEACTIVATE_JOB_FAIL","CREATE_JOB_SUCCESS","CREATE_JOB_FAIL","ADD_JOB_IMAGE_SUCCESS","ADD_JOB_IMAGE_FAIL","DELETE_JOB_IMAGE_SUCCESS","DELETE_JOB_IMAGE_FAIL"],"mappings":"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","file":"static/js/main.8842cbde.chunk.js","sourcesContent":["import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  loginRequest: ['data'],\n  loginSuccess: ['user'],\n  loginFailure: ['error'],\n\n  logoutRequest: null,\n  logoutSuccess: null,\n  logoutFailure: ['error'],\n\n  checkTokenRequest: ['payload'],\n  checkTokenSuccess: ['payload'],\n  checkTokenFail: ['error'],\n\n  partialUpdateUserRequest: ['payload'],\n  partialUpdateUserFail: ['payload'],\n  partialUpdateUserSuccess: ['payload'],\n})\n\nexport const AuthTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n  fetching: false,\n  user: null,\n  error: '',\n  isLoggedIn: false,\n  isLoggingIn: false\n})\n\n/* ------------- Selectors ------------- */\n\nexport const AuthSelectors = {\n  getUser: state => state.user\n}\n\n/* ------------- Reducers ------------- */\n\n// login request\nexport const loginRequest = (state, { data }) => {\n  return state.merge({ fetching: true, user: null, isLoggingIn: true, isLoggedIn: false })\n}\n  \n\n// login success\nexport const loginSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggedIn: true, isLoggingIn: false })\n}\n\n// login fail\nexport const loginFailure = (state, action) => {\n  const { error } = action\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n\n// logout request\nexport const logoutRequest = (state) => {\n  return state.merge({ fetching: true, isLoggingIn: true })\n}\n\nexport const logoutSuccess = (state) => {\n  return state.merge({ fetching: false, error: null, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\nexport const logoutFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, isLoggingIn: false })\n}\n\n// check token\nexport const checkTokenRequest = (state, { payload }) => {\n  return state.merge({ fetching: true })\n}\n\nexport const checkTokenSuccess = (state, { payload }) => {\n  return state.merge({ fetching: false, error: null, user: payload.profile, isLoggedIn: true, isLoggingIn: false })\n}\n\nexport const checkTokenFail = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n// partial update User\nexport const partialUpdateUserRequest = (state, { payload }) => {\n  return state.merge({ fetching: true, message: '' })\n}\n\nexport const partialUpdateUserSuccess = (state, { payload }) => {\n  return state.merge({ fetching: false, error: null, \n    user: {\n      ...state.user,\n      nickname: payload.nickname,\n      phone: payload.phone\n    } })\n}\n\nexport const partialUpdateUserFail = (state, { payload }) => {\n  return state.merge({ fetching: false, error: payload, message: '' })\n}\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.LOGIN_REQUEST]: loginRequest,\n  [Types.LOGIN_SUCCESS]: loginSuccess,\n  [Types.LOGIN_FAILURE]: loginFailure,\n  \n  [Types.CHECK_TOKEN_REQUEST]: checkTokenRequest,\n  [Types.CHECK_TOKEN_FAIL]: checkTokenFail,\n  [Types.CHECK_TOKEN_SUCCESS]: checkTokenSuccess,\n  \n  [Types.LOGOUT_REQUEST]: logoutRequest,\n  [Types.LOGOUT_SUCCESS]: logoutSuccess,\n  [Types.LOGOUT_FAILURE]: logoutFailure,\n\n  [Types.PARTIAL_UPDATE_USER_REQUEST]: partialUpdateUserRequest,\n  [Types.PARTIAL_UPDATE_USER_SUCCESS]: partialUpdateUserSuccess,\n  [Types.PARTIAL_UPDATE_USER_FAIL]: partialUpdateUserFail,\n})\n","// export const url = 'http://35.222.169.29';\r\nexport const url = 'https://svoyaeda.su';\r\n\r\nexport const apiUrl = `${url}/api`;\r\n\r\nexport default {\r\n    // auth\r\n    JWT_AUTH: `${apiUrl}/jwt/api-token-auth/`,\r\n    JWT_CHECK_TOKEN: `${apiUrl}/jwt/api-token-verify/`,\r\n    updateUser: (id) => `${apiUrl}/profiles/${id}/`,\r\n\r\n    // jobs\r\n    GET_JOBS: `${apiUrl}/jobs/`,\r\n    getJobDetail: (id) => `${apiUrl}/jobs/${id}/`,\r\n    activateDeactivateJobDetail: (id) => `${apiUrl}/jobs/${id}/activate_deactivate/`,\r\n    CREATE_FIRST_JOB: `${apiUrl}/jobs/first_create/`,\r\n    addJobImage: (id) => `${apiUrl}/jobs/${id}/add_image/`,\r\n    deleteJobImage: (id) => `${apiUrl}/jobs/${id}/delete_image/`,\r\n\r\n    // categories\r\n    GET_CATEGORIES: `${apiUrl}/categories/`,\r\n\r\n    // subs\r\n    CREATE_OR_CHANGE_ISUB: `${apiUrl}/subs/`,\r\n}","\n// standart serializer field error. There are could be several fields\n// {\n//     \"birth_id\": [\"This field is required.\"]\n// }\n\n\nexport const parseErrorData = (error) => {\n\n    if (error && typeof error.response !== 'undefined') {\n        let errorObj = {\n            status: error.response.status, \n            statusText: error.response.statusText,\n            message: null,\n            response: error.response,\n        }\n        if ('message' in error.response.data) {\n            errorObj.message = JSON.stringify(error.response.data.message)\n        }\n        else {\n            let message = ''\n            for (const property in error.response.data) {\n                message = message + `${property}: ${error.response.data[property]}. `\n              }\n            errorObj.message = message\n\n        }\n        return errorObj\n\n    } else {\n        return { \n         status: 'Connection Error',\n         statusText: 'An error occurred while sending your data!',\n         message: 'An error occurred while sending your data!' }\n    }\n}\n\nexport const createUrlParamsFromFilters = (filters) => {\n    const params = new URLSearchParams()\n\n    if (filters != null) Object.keys(filters).forEach(key => {\n            if (filters[key] !== null && !(filters[key] instanceof Array)) \n                params.append(key, filters[key])\n            if (filters[key] !== null && filters[key] instanceof Array){\n                delete params[key]\n                filters[key].map(value => {\n                    if (value !== '')\n                        params.append(key, value)\n                    return null\n                })\n            }\n        })\n    return params\n}","import axios from 'axios';\nimport endpoints from './endpoints';\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\n\n\nconst create = () => {\n  const logIn = (data: { username: string, password: string}): void => {\n    const { username, password } = data;\n    \n     return axios.post(endpoints.JWT_AUTH, { username, password })\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n            throw new Error(response);\n        }\n        return { token: response.data.token, user: response.data.user };\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n      .then((response) => {\n          // console.log('response.data', response.data)\n          localStorage.setItem('token', response.data.token);\n          return response.user;\n      })\n  }\n\n  const logOut = () => {\n    localStorage.removeItem('token');\n  }\n\n  const checkToken = (payload: string) => {\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token: payload })\n      .then(response => {\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('user_id', response.data.profile.id);\n        return response.data\n      })\n      .catch(err => {\n        const error = new Error(err);\n            error.data = parseErrorData(err);\n            throw error;\n      })\n  }\n\n  const partialUpdateUser = payload => {\n    const { id, nickname, phone } = payload;\n    const token = localStorage.getItem('token') || '';\n    const url = endpoints.updateUser(id);\n\n    const formData = new FormData();\n    nickname && formData.append(\"nickname\", nickname);\n    phone && formData.append(\"phone\", phone);\n\n    return axios({\n                method: 'patch',\n                url: url,\n                data: formData,\n                headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\n    })\n    .then(response => {\n        return response.data\n    })\n    .catch(err => {\n        const error = new Error(err);\n        error.data = parseErrorData(err);\n        throw error;\n    })\n}\n\n  return {\n    logIn,\n    checkToken,\n    logOut,\n    partialUpdateUser\n  }\n}\n\nexport default {\n  create\n}","import axios from 'axios';\r\nimport endpoints from './endpoints';\r\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\r\n\r\nconst create = () => {\r\n\r\n    const getCategories = (filters) => {\r\n        const params = createUrlParamsFromFilters(filters);\r\n        return axios.get(endpoints.GET_CATEGORIES, { params })\r\n        .then(response => response.data)\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const getJobs = (filters) => {\r\n        const params = createUrlParamsFromFilters(filters);\r\n        return axios.get(endpoints.GET_JOBS, { params })\r\n        .then(response => response.data)\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const getJobDetail = id => {\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.getJobDetail(id);\r\n\r\n        return axios({\r\n                    method: 'get',\r\n                    url: url,\r\n                    // headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const createFirstJob = payload => {\r\n        const { name, phone, title, description, budget, address, start_date, end_date, category } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.CREATE_FIRST_JOB;\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"name\", name);\r\n        formData.append(\"phone\", phone);\r\n        formData.append(\"title\", title);\r\n        formData.append(\"description\", description);\r\n        formData.append(\"budget\", budget);\r\n        formData.append(\"address\", address);\r\n        formData.append(\"category\", category);\r\n        start_date && formData.append(\"start_date\", start_date);\r\n        end_date && formData.append(\"end_date\", end_date);\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const partialUpdateJob = payload => {\r\n        const { id, title, description, budget, address, start_date, end_date, category } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.getJobDetail(id);\r\n\r\n        const formData = new FormData();\r\n        title && formData.append(\"title\", title);\r\n        description && formData.append(\"description\", description);\r\n        budget && formData.append(\"budget\", budget);\r\n        address && formData.append(\"address\", address);\r\n        category && formData.append(\"category\", category);\r\n        start_date && formData.append(\"start_date\", start_date);\r\n        end_date && formData.append(\"end_date\", end_date);\r\n        \r\n        return axios({\r\n                    method: 'patch',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const activateDeactivateJob = payload => {\r\n        const { id, active } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.activateDeactivateJobDetail(id);\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"active\", active);\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const createJob = payload => {\r\n        const { title, description, budget, address, start_date, end_date, category } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.GET_JOBS;\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"title\", title);\r\n        formData.append(\"description\", description);\r\n        formData.append(\"budget\", budget);\r\n        formData.append(\"address\", address);\r\n        formData.append(\"category\", category);\r\n        start_date && formData.append(\"start_date\", start_date);\r\n        end_date && formData.append(\"end_date\", end_date);\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const addJobImage = payload => {\r\n        const { id, original } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.addJobImage(id);\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"original\", original);\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const deleteJobImage = payload => {\r\n        const { id, image } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.deleteJobImage(id);\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"image\", image);\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    return {\r\n        getJobs,\r\n        getCategories,\r\n        getJobDetail,\r\n        createFirstJob,\r\n        partialUpdateJob,\r\n        activateDeactivateJob,\r\n        createJob,\r\n        addJobImage,\r\n        deleteJobImage\r\n    }\r\n}\r\n\r\nexport default {\r\n    create\r\n}","import axios from 'axios';\r\nimport endpoints from './endpoints';\r\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\r\n\r\nconst create = () => {\r\n    const createOrChangeIsub = payload => {\r\n        const { categories } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.CREATE_OR_CHANGE_ISUB;\r\n\r\n        const formData = new FormData();\r\n        categories && categories.length > 0 && categories.map(cat =>\r\n            formData.append(\"categories\", cat)\r\n            ) \r\n        console.log(categories)\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    return {\r\n        createOrChangeIsub,\r\n    }\r\n}\r\n\r\nexport default {\r\n    create\r\n}","import { put, call } from 'redux-saga/effects';\r\n// import { push } from 'react-router-redux';\r\n// import Notifications from 'react-notification-system-redux';\r\n\r\nimport AuthActions from '../redux-sauce/auth'\r\nimport IsubsActions from '../redux-sauce/isubs'\r\n\r\nexport function * logIn (api, action) {\r\n  const { data } = action;\r\n  yield put(AuthActions.resetAuthErrors())\r\n  try {\r\n    let response = yield call(api.logIn, data)\r\n    yield put(AuthActions.loginSuccess(response))\r\n    yield put(AuthActions.toggleModal(false))\r\n  } catch (e) {\r\n    yield put(AuthActions.loginFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * logOut (api, action) {\r\n  try {\r\n    yield call(api.logOut)\r\n    yield put(AuthActions.logoutSuccess())\r\n  } catch (e) {\r\n    yield put(AuthActions.logoutFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function* checkToken(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    let response = yield call(api.checkToken, payload);\r\n    yield put(AuthActions.checkTokenSuccess(response));\r\n    yield put(IsubsActions.createOrChangeIsubSuccess(response.profile))\r\n    // add isub action\r\n  } catch (e) {\r\n    yield put(AuthActions.checkTokenFail(e.message))\r\n  }\r\n}\r\n\r\nexport function* partialUpdateUser(api, action) {\r\n  try {\r\n      let response = yield call(api.partialUpdateUser, action.payload);\r\n      yield put(AuthActions.partialUpdateUserSuccess(response));\r\n  } catch (err) {\r\n      yield put(AuthActions.partialUpdateUserFail(err))\r\n  }\r\n}","import { put, call } from 'redux-saga/effects';\r\n\r\nimport JobsActions from '../redux-sauce/jobs'\r\n\r\nexport function* getJobs(api, action) {\r\n    try {\r\n        let response = yield call(api.getJobs, action.payload);\r\n        yield put(JobsActions.getJobsSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.getJobsFail(err))\r\n    }\r\n}\r\n\r\nexport function* getJobDetail(api, action) {\r\n    try {\r\n        let response = yield call(api.getJobDetail, action.payload);\r\n        yield put(JobsActions.getJobDetailSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.getJobDetailFail(err))\r\n    }\r\n}\r\n\r\nexport function* getCategories(api, action) {\r\n    try {\r\n        let response = yield call(api.getCategories, action.payload);\r\n        yield put(JobsActions.getCategoriesSuccess(response.results));\r\n    } catch (err) {\r\n        yield put(JobsActions.getCategoriesFail(err))\r\n    }\r\n}\r\n\r\nexport function* createFirstJob(api, action) {\r\n    try {\r\n        let response = yield call(api.createFirstJob, action.payload);\r\n        yield put(JobsActions.createFirstJobSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.createFirstJobFail(err))\r\n    }\r\n}\r\n\r\nexport function* partialUpdateJob(api, action) {\r\n    try {\r\n        let response = yield call(api.partialUpdateJob, action.payload);\r\n        yield put(JobsActions.partialUpdateJobSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.partialUpdateJobFail(err))\r\n    }\r\n}\r\n\r\nexport function* activateDeactivateJob(api, action) {\r\n    try {\r\n        let response = yield call(api.activateDeactivateJob, action.payload);\r\n        yield put(JobsActions.activateDeactivateJobSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.activateDeactivateJobFail(err))\r\n    }\r\n}\r\n\r\nexport function* createJob(api, action) {\r\n    try {\r\n        let response = yield call(api.createJob, action.payload);\r\n        yield put(JobsActions.createJobSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.createJobFail(err))\r\n    }\r\n}\r\n\r\nexport function* addJobImage(api, action) {\r\n    try {\r\n        let response = yield call(api.addJobImage, action.payload);\r\n        yield put(JobsActions.addJobImageSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.addJobImageFail(err))\r\n    }\r\n}\r\n\r\nexport function* deleteJobImage(api, action) {\r\n    try {\r\n        let response = yield call(api.deleteJobImage, action.payload);\r\n        yield put(JobsActions.deleteJobImageSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.deleteJobImageFail(err))\r\n    }\r\n}","import { put, call } from 'redux-saga/effects';\r\n\r\nimport IsubsActions from '../redux-sauce/isubs'\r\n\r\nexport function* createOrChangeIsub(api, action) {\r\n    try {\r\n        let response = yield call(api.createOrChangeIsub, action.payload);\r\n        yield put(IsubsActions.createOrChangeIsubSuccess(response));\r\n    } catch (err) {\r\n        yield put(IsubsActions.createOrChangeIsubFail(err))\r\n    }\r\n}","import { takeEvery, all, takeLatest } from \"redux-saga/effects\";\r\n\r\n/* -------------- API -------------- */\r\nimport AuthApi from \"../api/authApi\";\r\nimport JobsApi from '../api/jobsApi';\r\nimport IsubsApi from '../api/isubsApi';\r\n\r\n/* ------------- Types ------------- */\r\nimport { AuthTypes } from \"../redux-sauce/auth\";\r\nimport { JobsTypes } from '../redux-sauce/jobs';\r\nimport { IsubsTypes } from '../redux-sauce/isubs';\r\n\r\n/* ------------- Sagas ------------- */\r\nimport { logIn, logOut, checkToken, signUp, checkAuth, partialUpdateUser } from \"./authSagas\";\r\nimport * as jobsSaga from './jobsSagas';\r\nimport * as isubsSaga from './isubsSagas';\r\n\r\nconst authApi = AuthApi.create();\r\nconst jobsApi = JobsApi.create();\r\nconst isubsApi = IsubsApi.create();\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeEvery(AuthTypes.LOGIN_REQUEST, logIn, authApi),\r\n    takeEvery(AuthTypes.LOGOUT_REQUEST, logOut, authApi),\r\n    takeEvery(AuthTypes.CHECK_TOKEN_REQUEST, checkToken, authApi),\r\n    takeEvery(AuthTypes.PARTIAL_UPDATE_USER_REQUEST, partialUpdateUser, authApi),\r\n\r\n    takeEvery(JobsTypes.GET_JOBS_REQUEST, jobsSaga.getJobs, jobsApi),\r\n    takeEvery(JobsTypes.GET_JOB_DETAIL_REQUEST, jobsSaga.getJobDetail, jobsApi),\r\n    takeEvery(JobsTypes.GET_CATEGORIES_REQUEST, jobsSaga.getCategories, jobsApi),\r\n    takeEvery(JobsTypes.CREATE_FIRST_JOB_REQUEST, jobsSaga.createFirstJob, jobsApi),\r\n    takeEvery(JobsTypes.PARTIAL_UPDATE_JOB_REQUEST, jobsSaga.partialUpdateJob, jobsApi),\r\n    takeEvery(JobsTypes.ACTIVATE_DEACTIVATE_JOB_REQUEST, jobsSaga.activateDeactivateJob, jobsApi),\r\n    takeEvery(JobsTypes.CREATE_JOB_REQUEST, jobsSaga.createJob, jobsApi),\r\n    takeEvery(JobsTypes.ADD_JOB_IMAGE_REQUEST, jobsSaga.addJobImage, jobsApi),\r\n    takeEvery(JobsTypes.DELETE_JOB_IMAGE_REQUEST, jobsSaga.deleteJobImage, jobsApi),\r\n\r\n    takeEvery(IsubsTypes.CREATE_OR_CHANGE_ISUB_REQUEST, isubsSaga.createOrChangeIsub, isubsApi),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\n// import { reducer as notifications } from 'react-notification-system-redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport const reducers = combineReducers({\r\n  // routing: routerReducer,\r\n  auth: require('../redux-sauce/auth').reducer,\r\n  jobs: require('../redux-sauce/jobs').reducer,\r\n  isubs: require('../redux-sauce/isubs').reducer,\r\n  \r\n  form: formReducer,\r\n  // notifications: notifications\r\n})\r\n\r\nexport default (history) => {\r\n  // const rMiddleware = routerMiddleware(history)\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(reducers, composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  ));\r\n\r\n  let sagasManager = sagaMiddleware.run(rootSaga)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(() => {\r\n      const nextRootReducer = require('./').reducers\r\n      store.replaceReducer(nextRootReducer)\r\n\r\n      const newYieldedSagas = require('../sagas').default\r\n      sagasManager.cancel()\r\n      sagasManager.done.then(() => {\r\n        sagasManager = sagaMiddleware.run(newYieldedSagas)\r\n      })\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toggleArray } from '../components/utils'\r\n\r\n// actions\r\nimport JobsActions from '../redux/redux-sauce/jobs';\r\n\r\n\r\nexport function JobBlock (props) {\r\n  const { job, thumb, non_zoom } = props\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className=\"content text-left\">\r\n          <h4 className='font-16 font-500 float-left'>{job.title}</h4>\r\n          <h4 className='font-18 float-right'>{job.budget}</h4>\r\n          <div className=\"clearfix\"></div>\r\n          <p className='text-left float-left mb-0 font-12 font-500'>{job.zakazchik}</p>\r\n          <p className='text-left float-right mb-0 font-11 font-400 font-italic'>{job.category}</p>\r\n          <div className=\"clearfix\"></div>\r\n          <p className=\"text-left mb-0\">\r\n            {job.description}\r\n          </p>\r\n          <p className='text-left float-left mb-0'>{job.address}</p>\r\n          {job.start_date ? \r\n              <p className='text-left float-right mb-0'>c {job.start_date} до {job.end_date}</p>\r\n              :\r\n              job.end_date ?\r\n                <p className='text-left float-right mb-0'>До {job.end_date}</p>\r\n                :\r\n                <p className='text-left float-right mb-0'>В любое время</p>\r\n            }\r\n          <div className=\"clearfix\"></div>\r\n          <p className='text-left float-left font-10 mb-1'>{job.created_ago}</p>\r\n          <div className=\"clearfix\"></div>\r\n          {job.zakazchik_phone && <p className='font-16 mb-1'>{job.zakazchik_phone}</p>}\r\n\r\n          {job.images.length > 0 && non_zoom && job.images.map(img => \r\n            <img src={'https://svoyaeda.su' + img.non_zoom_image} className='rounded-m my-1 mx-3'/>\r\n            )}\r\n          {job.images.length > 0 && thumb &&\r\n            <div className='float-right mb-2'>\r\n              {job.images.map(img => \r\n                <img src={'https://svoyaeda.su' + img.thumb_image} className='rounded-s mx-1' /> \r\n              )}\r\n            </div>\r\n          }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nclass JobDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      needToRefresh: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params\r\n    this.props.getJobDetail(id)\r\n  }\r\n\r\n  render() {\r\n    const { jobDetail, detailFetching } = this.props.state.jobs\r\n    return (\r\n        jobDetail \r\n            ? <JobBlock job={jobDetail} non_zoom={true}/>\r\n            : 'Не найдено'\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.notifications,\r\n  state: state,\r\n  filterCategories: state.isubs.filterCategories\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCategories: query => dispatch(JobsActions.getCategoriesRequest(query)),\r\n  getJobDetail: query => dispatch(JobsActions.getJobDetailRequest(query)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(JobDetail);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toggleArray } from '../components/utils'\r\nimport {\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nimport { JobBlock } from './JobDetail';\r\n\r\n// actions\r\nimport JobsActions from '../redux/redux-sauce/jobs';\r\nimport IsubsActions from '../redux/redux-sauce/isubs';\r\n\r\n\r\nfunction Categories (props){\r\n  const { categories } = props\r\n  let catClass = \"btn btn-xs mb-1 ml-1 rounded-xl text-uppercase font-900 shadow-s \\\r\n     text-wrap float-left\"\r\n  let active = \" bg-red2-light\"\r\n  let notActive = \" bg-blue2-light\"\r\n  return (\r\n    <div>\r\n      {categories.length > 0 && categories.map(category => \r\n          <button \r\n            className={props.filterCategories.includes(category.id) ? catClass + active : catClass + notActive }\r\n            key={category.id} onClick={props.clickCategory} \r\n            data-id={category.id}\r\n            >\r\n              {category.ru_name}\r\n          </button>\r\n        )}\r\n      <div className=\"clearfix\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      needToRefresh: false,\r\n    }\r\n    this.clickCategory = this.clickCategory.bind(this);\r\n    this.clickSubscribe = this.clickSubscribe.bind(this);\r\n    this.clickUnsubscribe = this.clickUnsubscribe.bind(this);\r\n    this.clickSubscribeAll = this.clickSubscribeAll.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getJobs()\r\n  }\r\n\r\n  clickCategory(e) {\r\n    const { id } = e.target.dataset\r\n    this.props.toggleFilterCategories(id)\r\n    this.setState({...this.state, needToRefresh: true})\r\n  }\r\n\r\n  clickSubscribe(){\r\n    this.props.createOrChangeIsub({categories: this.props.filterCategories})\r\n  }\r\n\r\n  clickSubscribeAll(){\r\n    let categories = []\r\n    this.props.state.jobs.categories.map(cat => categories = toggleArray(categories, cat.id))\r\n    this.props.createOrChangeIsub({categories: categories})\r\n  }\r\n\r\n  clickUnsubscribe(){\r\n    this.props.createOrChangeIsub({})\r\n  }\r\n\r\n  refreshList () {\r\n    if (!this.props.state.jobs.listFetching && this.state.needToRefresh){\r\n      setTimeout(() => {\r\n        this.setState({...this.state, needToRefresh: false})\r\n        const { filterCategories } = this.props\r\n        this.props.getJobs({category: filterCategories})\r\n      }, 10)\r\n    }\r\n  }\r\n\r\n  getGreetings(){\r\n    var greetingTime = new Date().getHours();\r\n    var greetingMessage;\r\n    var greetingMorning = ('Доброе утро');\r\n    var greetingAfternoon = ('Добрый день');\r\n    var greetingEvening = ('Добрый вечер');\r\n    if (greetingTime >= 0 && greetingTime < 12) {greetingMessage = greetingMorning; \r\n    } else if (greetingTime >= 12 && greetingTime < 17) {greetingMessage = greetingAfternoon;\r\n    } else if (greetingTime >= 17 && greetingTime < 24) {greetingMessage = greetingEvening;}\r\n\r\n    return greetingMessage\r\n  }\r\n\r\n  render() {\r\n    this.refreshList()\r\n    const { jobs, categories, listFetching, errorList } = this.props.state.jobs\r\n    const { filterCategories, isub } = this.props.state.isubs\r\n    let { user } = this.props.state.auth\r\n    const greetingMessage = this.getGreetings()\r\n    return (\r\n        <div>\r\n          <div className=\"page-title page-title-large\">\r\n            <h2 style={{\"color\": '#fff'}}>{greetingMessage}, <br/>{user ? user.nickname : 'Пользователь'}</h2>\r\n            <img data-menu=\"menu-main\" src={user ? user.viber_avatar : 'images/pictures/20s.jpg'}\r\n              className=\"bg-fade-gray1-dark shadow-xl\" \r\n            />\r\n          </div>\r\n          <div className=\"card header-card shape-rounded\" data-card-height=\"210\" style={{\"height\": \"210px\"}}>\r\n            <div className=\"card-overlay bg-highlight opacity-95\"></div>\r\n            <div className=\"card-overlay dark-mode-tint\"></div>\r\n            <div className=\"card-bg preload-img\" data-src=\"images/pictures/20s.jpg\" \r\n              style={{\"backgroundImage\": \"url('images/pictures/20s.jpg')\"}}></div>\r\n          </div>\r\n          <div className=\"card card-style mb-3\">\r\n            <div className=\"content\">\r\n              <Categories \r\n                categories={categories} \r\n                getJobs={this.props.getJobs} \r\n                filterCategories={filterCategories}\r\n                toggleFilterCategories={this.props.toggleFilterCategories}\r\n                clickCategory={this.clickCategory}\r\n              />\r\n              {user && categories && isub && isub.categories.length > 0 &&\r\n                <div>\r\n                  <p className='my-2 mr-1 ml-3 font-11 text-wrap font-italic' style={{\"lineHeight\": \"95%\"}}>\r\n                    Вы подписаны на {isub.categories.map((cat, idx) =>\r\n                      cat.ru_name + ', '\r\n                    )}\r\n                  </p>\r\n                  <button className='btn btn-m mb-1 ml-1 rounded-xl text-uppercase font-900\r\n                      shadow-s bg-red2-light float-right' onClick={this.clickUnsubscribe}>\r\n                        Отписаться\r\n                  </button>\r\n                </div>\r\n              }\r\n              {filterCategories.length > 0 \r\n                ? user \r\n                  ? <button className='btn btn-m mb-1 ml-1 rounded-xl text-uppercase font-900\r\n                      shadow-s bg-blue1-dark float-left' onClick={this.clickSubscribe}>\r\n                      Подписаться ({filterCategories.length})\r\n                    </button>\r\n                  : <p>Вы можете получать сообщения о новых работах</p>\r\n                : isub && isub.categories < 1 && \r\n                  <button className='btn btn-m mb-1 ml-1 rounded-xl text-uppercase font-900\r\n                    shadow-s bg-blue1-dark float-left' onClick={this.clickSubscribeAll}>\r\n                    Подписаться на все категории\r\n                  </button>\r\n              }\r\n            </div>\r\n          </div>\r\n          {listFetching && <p>Loading...</p>}\r\n          {jobs.length > 0 && jobs.map(job =>\r\n            <Link to={`/jobs/${job.id}/`}>\r\n              <JobBlock job={job} key={job.id} thumb={true}/>\r\n            </Link>\r\n            )}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.notifications,\r\n  state: state,\r\n  filterCategories: state.isubs.filterCategories\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCategories: query => dispatch(JobsActions.getCategoriesRequest(query)),\r\n  getJobs: query => dispatch(JobsActions.getJobsRequest(query)),\r\n\r\n  toggleFilterCategories: catId => dispatch(IsubsActions.toggleFilterCategories(catId)),\r\n  createOrChangeIsub: catId => dispatch(IsubsActions.createOrChangeIsubRequest(catId)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import React, { Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\n\r\n\r\n// actions\r\n\r\nconst renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>\r\n  }\r\n}\r\n\r\nconst renderTextField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  multiline,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    label={label}\r\n    placeholder={placeholder}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n    }}\r\n  />\r\n)\r\n\r\nconst renderSelectField = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  ...custom\r\n}) => (\r\n  <FormControl error={touched && error} className={formClass}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      native\r\n      {...input}\r\n      {...custom}\r\n    >\r\n      {children}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n)\r\n\r\nconst renderDateTimeField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n\r\n  <TextField\r\n    label={label}\r\n    type=\"date\"\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n      shrink: true \r\n    }}\r\n  />\r\n)\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  placeholder,\r\n  type,\r\n  required,\r\n  meta: { touched, error, warning }\r\n}) => (\r\n  <div className=\"input-style input-style-2\">\r\n    {label && <span className=\"color-highlight\">{label} </span>}\r\n    {required && <em>*</em>}\r\n    <input {...input} placeholder={placeholder} type={type}/>\r\n    {touched &&\r\n      ((error && <span>{error}</span>) ||\r\n        (warning && <span>{warning}</span>))}\r\n  </div>\r\n)\r\n\r\nfunction JobForm2 (props) {\r\n  let { handleSubmit, pristine, reset, submitting, categories, job, jobDate } = props\r\n  return (\r\n    <div>\r\n        <Field\r\n          component={renderTextField}\r\n          name=\"title\"\r\n          // type=\"text\"\r\n          // placeholder='Что нужно сделать?'\r\n          label='Что нужно сделать?'\r\n          // required={true}\r\n          className='input-group my-2'\r\n          labelClass='font-12'\r\n        />\r\n\r\n        <Field \r\n          name=\"category\" \r\n          component={renderSelectField}\r\n          labelClass='font-12 '\r\n          formClass='input-group my-2'\r\n          label='Выберите категорию работ'\r\n          required={true}>\r\n            {categories && categories.length > 0 && categories.map(category => \r\n              <option className='font-12' value={category.id} key={category.id}>{category.ru_name}</option>\r\n              )}\r\n        </Field>\r\n          \r\n        <Field name=\"description\" component=\"textarea\" className=\"form-control font-12 my-2\"\r\n          style={{\"height\": \"150px\"}} label='Укажите объем и виды работ'\r\n          placeholder='Какую работу нужно сделать? \r\n          - Напишите список работ.\r\n          - Укажите объем работы в квадратных метрах, штуках или в другой подходящей единице измерения.\r\n          - Опишите ваши пожелания и требования, если они есть.\r\n          '\r\n          />\r\n        <FormControl className='input-group my-2'>\r\n          <InputLabel className='font-12'>Когда нужно выполнить работу?</InputLabel>\r\n          <Select onChange={props.setData} name='jobDate' className='input-group font-12'>\r\n            <option value={'any'}>В любое время</option>\r\n            <option value={'period'}>В период</option>\r\n            <option value={'not later'}>Не позднее, чем</option>\r\n          </Select>\r\n        </FormControl>\r\n        {jobDate == 'period' && \r\n          <div>\r\n            <Field\r\n              name=\"start_date\"\r\n              component={renderDateTimeField}\r\n              label=\"C\"\r\n            />\r\n            <Field\r\n              name=\"end_date\"\r\n              component={renderDateTimeField}\r\n              label=\"До\"\r\n            />\r\n          </div>\r\n          }\r\n        {jobDate == 'not later' && \r\n          <Field\r\n            name=\"end_date\"\r\n            component={renderDateTimeField}\r\n          />\r\n        }\r\n        \r\n        <Field\r\n          name=\"budget\"\r\n          component={renderTextField}\r\n          type=\"number\"\r\n          label=\"Бюджет до\"\r\n          className='input-group my-2'\r\n          labelClass='font-12'\r\n        />\r\n\r\n        <Field\r\n          component={renderTextField}\r\n          name=\"address\"\r\n          type=\"text\"\r\n          value={'Улан-Удэ'}\r\n          label='Адрес'\r\n          className='input-group my-2'\r\n          labelClass='font-12'\r\n        />\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport class JobFirstCreateForm extends Component {\r\n  constructor(props) {\r\n   super(props);\r\n   this.state = {\r\n     jobDate: 'any',\r\n   };\r\n\r\n   this.setData = this.setData.bind(this);   \r\n }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n      })\r\n  }\r\n  \r\n  render () {\r\n    let { handleSubmit, pristine, reset, submitting, user, categories } = this.props\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <Field\r\n            component={renderField}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder={''}\r\n            value={user ? user.nickname : ''}\r\n            defaultValue={user ? user.nickname : ''}\r\n            label='Как к вам обращаться?'\r\n          />\r\n        </div>\r\n        <div>\r\n          <Field\r\n            name=\"phone\"\r\n            component={renderField}\r\n            type=\"number\"\r\n            placeholder=\"79148965232\"\r\n            label=\"Телефон\"\r\n          />\r\n        </div>\r\n        <JobForm2 \r\n          handleSubmit={handleSubmit}\r\n          pristine={pristine}\r\n          reset={reset}\r\n          submitting={submitting}\r\n          categories={categories}\r\n          setData={this.setData}\r\n          job={null}\r\n          jobDate={this.state.jobDate} />\r\n        \r\n        <div>\r\n          <button className='btn btn-primary'\r\n            // type=\"submit\"\r\n            onClick={handleSubmit}\r\n\r\n            disabled={pristine || submitting}>\r\n            Создать\r\n          </button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nJobFirstCreateForm = reduxForm({\r\n  form: 'jobFirstCreate' // a unique identifier for this form\r\n})(JobFirstCreateForm)\r\n\r\n\r\nexport class JobCreateForm extends Component {\r\n  constructor(props) {\r\n   super(props);\r\n   this.state = {\r\n     jobDate: 'any',\r\n   };\r\n\r\n   this.setData = this.setData.bind(this);   \r\n }\r\n\r\n componentDidMount() {\r\n  const { start_date, end_date } = this.props.initialValues\r\n  if (start_date) {\r\n    this.setState({...this.state, jobDate : 'period'})\r\n  }\r\n  if (end_date && !start_date){\r\n    this.setState({...this.state, jobDate : 'not later'})\r\n  }\r\n}\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n      })\r\n  }\r\n  \r\n  render () {\r\n    let { handleSubmit, pristine, reset, submitting, categories, job } = this.props\r\n    return (\r\n      <div>\r\n        <JobForm2 \r\n          handleSubmit={handleSubmit}\r\n          pristine={pristine}\r\n          reset={reset}\r\n          submitting={submitting}\r\n          categories={categories}\r\n          setData={this.setData}\r\n          job={job}\r\n          jobDate={this.state.jobDate} />\r\n        <div>\r\n          <button className='btn btn-m mb-1 rounded-s text-uppercase font-900 shadow-s\r\n              bg-blue2-light text-wrap'\r\n            onClick={handleSubmit}\r\n            disabled={pristine || submitting}>\r\n            Создать\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nJobCreateForm = reduxForm({\r\n  form: 'jobCreate', // a unique identifier for this form\r\n})(JobCreateForm)\r\n\r\n\r\nexport class JobUpdateForm extends Component {\r\n  constructor(props) {\r\n   super(props);\r\n   this.state = {\r\n     jobDate: 'any',\r\n   };\r\n\r\n   this.setData = this.setData.bind(this);   \r\n }\r\n\r\n componentDidMount() {\r\n  const { start_date, end_date } = this.props.initialValues\r\n  if (start_date) {\r\n    this.setState({...this.state, jobDate : 'period'})\r\n  }\r\n  if (end_date && !start_date){\r\n    this.setState({...this.state, jobDate : 'not later'})\r\n  }\r\n}\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n      })\r\n  }\r\n  \r\n  render () {\r\n    let { handleSubmit, pristine, reset, submitting, categories, job } = this.props\r\n    return (\r\n      <div>\r\n        <JobForm2 \r\n          handleSubmit={handleSubmit}\r\n          pristine={pristine}\r\n          reset={reset}\r\n          submitting={submitting}\r\n          categories={categories}\r\n          setData={this.setData}\r\n          job={job}\r\n          jobDate={this.state.jobDate} />\r\n        <button className='btn btn-m mb-1 rounded-s text-uppercase font-900 shadow-s\r\n            bg-blue2-light text-wrap'\r\n          onClick={handleSubmit}\r\n          disabled={pristine || submitting}>\r\n          Сохранить\r\n        </button>\r\n        <button className='btn btn-m mb-1 rounded-s text-uppercase font-900 shadow-s\r\n            bg-blue2-light text-wrap float-right'\r\n          onClick={this.props.clickJobEdit}\r\n          data-id={null}\r\n        >\r\n          назад\r\n        </button>\r\n        <div className=\"clearfix\"></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nJobUpdateForm = reduxForm({\r\n  form: 'jobUpdate', // a unique identifier for this form\r\n})(JobUpdateForm)\r\n\r\n\r\nexport function UsernamePhoneForm (props) {\r\n  const { edit, setEdit, handleSubmit } = props\r\n  function clickSave() {\r\n    setEdit(!edit);\r\n    handleSubmit()\r\n  }\r\n  return (\r\n    <div>\r\n      <Field\r\n          component={renderTextField}\r\n          name=\"nickname\"\r\n          label='Как к вам обращаться?'\r\n          className='input-group my-2'\r\n          labelClass='font-12'\r\n        />\r\n      <Field\r\n          component={renderTextField}\r\n          name=\"phone\"\r\n          label='Телефон'\r\n          className='input-group my-2'\r\n          labelClass='font-12'\r\n        />\r\n        <Field\r\n          component={renderTextField}\r\n          name=\"id\"\r\n          hidden={true}\r\n        />\r\n      <button className='btn btn-m mb-1 rounded-s text-uppercase font-900 shadow-s\r\n          bg-blue2-light text-wrap'\r\n        onClick={clickSave}\r\n        disabled={props.pristine || props.submitting}>\r\n        Сохранить\r\n      </button>\r\n      <button className='btn btn-m mb-1 rounded-s text-uppercase font-900 shadow-s\r\n          bg-blue2-light text-wrap float-right'\r\n        onClick={() => setEdit(!edit)}\r\n      >\r\n        назад\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nUsernamePhoneForm = reduxForm({\r\n  form: 'usernamePhoneForm', // a unique identifier for this form\r\n})(UsernamePhoneForm)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { JobFirstCreateForm } from '../components/JobForms';\r\n\r\n// actions\r\nimport JobsActions from '../redux/redux-sauce/jobs';\r\n\r\n\r\nclass JobFirstCreateShop extends Component {\r\n  constructor(props) {\r\n    super(props);  \r\n    this.state = {\r\n    }\r\n\r\n  this.submitCreateShop = this.submitCreateShop.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getCategories()\r\n  }\r\n\r\n  submitCreateShop(e){\r\n    e.preventDefault()\r\n    this.props.createFirstJob(this.props.state.form.jobFirstCreate.values)\r\n    this.props.history.push(\"/zakazchik/account/\")\r\n  }\r\n\r\n  render() {\r\n    let { user } = this.props\r\n    const { categories } = this.props.state.jobs\r\n    return (\r\n      user && user.zakazchik ?\r\n      <Redirect\r\n            to={{pathname: \"/zakazchik/account/\", }}\r\n          />\r\n      :\r\n      <div className='container-fluid shop-create'>\r\n        <h4>\r\n          Создание работы. Слизано с ремонтника.\r\n        </h4>\r\n        <JobFirstCreateForm shopName={''} shopPhone={''} shopInfo={''} handleSubmit={this.submitCreateShop}\r\n          user={user} categories={categories}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  routing: state.routing,\r\n  user: state.auth.user\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createFirstJob: id => dispatch(JobsActions.createFirstJobRequest(id)),\r\n  getCategories: id => dispatch(JobsActions.getCategoriesRequest(id)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(JobFirstCreateShop);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport Main from '../containers/Main';\r\n\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nclass ViberAuthenticationComponent extends Component {\r\n    componentDidMount() {\r\n      const { token } = this.props.match.params\r\n      const { user } = this.props\r\n      \r\n      if (!user) {\r\n        this.props.checkToken(token);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      let access = false\r\n      if (this.props.isLoggedIn === true) access = true\r\n      return (\r\n          <div>\r\n              {access\r\n                  ? <Redirect\r\n                    to={{\r\n                      pathname: \"/\",\r\n                      state: { from: 'viber login' }\r\n                    }}\r\n                  />\r\n                  : 'Не авторизован'\r\n              }\r\n          </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n    user: state.auth.user,\r\n    state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViberAuthenticationComponent);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\n// actions\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction LogoutComp (props) {\r\n  let history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    props.logout()\r\n    history.push('/')\r\n  };\r\n\r\n  return (\r\n    <button className='btn btn-sx mt-3 mr-2 rounded-xl text-uppercase font-10 font-400\r\n      shadow-s bg-blue1-dark float-right' onClick={handleClick}>\r\n      Выйти\r\n    </button>\r\n  )\r\n}\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modalOpen: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { user } = this.props.auth\r\n    const token = localStorage.getItem('token');\r\n    if (!user && token) {\r\n      // const token = localStorage.getItem('token');\r\n      this.props.checkToken(token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, user } = this.props.auth\r\n    console.log(this.props)\r\n    return (\r\n      <div className='header header-fixed header-logo-left'>\r\n        <Link className='header-title font-20' to='/'>СтройСервис</Link>\r\n        {isLoggedIn ? \r\n          user.zakazchik ?\r\n              <div>\r\n                <LogoutComp logout={this.props.logout}/>\r\n                <Link to='/zakazchik/account/'  \r\n                  className=\"btn btn-sx mt-3 mr-2 rounded-xl text-uppercase font-10 font-400\r\n                    shadow-s bg-blue1-dark float-right\">\r\n                    Мои объявления\r\n                </Link>\r\n              </div>\r\n            :\r\n              <Link to='/zakazchik/create_first/' \r\n                className=\"font-14 mr-3 mt-2 pt-1 float-right\">Создать обьявление</Link>\r\n          : <div className='mt-3 mr-2'>\r\n              <button className='btn btn-sx mb-1 ml-1 rounded-xl text-uppercase font-10 font-400\r\n                  shadow-s bg-blue1-dark float-right' data-toggle=\"modal\" data-target=\"#authModal\">\r\n                    Создать обьявление\r\n              </button>\r\n              <button className='btn btn-sx mb-1 ml-1 rounded-xl text-uppercase font-10 font-400\r\n                  shadow-s bg-blue1-dark float-right' \r\n                //  data-toggle=\"modal\" data-target=\"#authModal\"\r\n                onClick={() => this.setState({...this.state, modalOpen: true})}\r\n                  >\r\n                  Войти\r\n              </button>\r\n              <Modal\r\n                open={this.state.modalOpen}\r\n                onClose={null}\r\n                aria-labelledby=\"login-modal-title\"\r\n                aria-describedby=\"login-modal-description\"\r\n              >\r\n                <div className='card card-style mt-3'>\r\n                  <div className='content'>\r\n                    <a href='viber://pa?chatURI=dm-eda&context=Chto_za_CONTEXT?&text=войти'>\r\n                      Войти через вайбер\r\n                    </a>\r\n                    <button  className='btn btn-sx mb-1 ml-1 rounded-xl text-uppercase font-10 font-400\r\n                      shadow-s bg-blue1-dark float-right'\r\n                      onClick={() => this.setState({...this.state, modalOpen: false})}>\r\n                      назад\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </Modal>\r\n            </div>\r\n        }\r\n        {/* <ModalAuth/> */}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  state: state,\r\n\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  logout: () => dispatch(AuthActions.logoutRequest()),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","import React, { Component, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { JobCreateForm, JobUpdateForm, UsernamePhoneForm } from '../components/JobForms';\r\n\r\n// actions\r\nimport JobsActions from '../redux/redux-sauce/jobs';\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction JobEditable (props) {\r\n  const { job, jobEditId, categories } = props\r\n  let category = null\r\n  Object.keys(categories).forEach(key => {\r\n    if (categories[key] == job.category)\r\n      category = key\r\n  })\r\n  let edit = false\r\n  if (job.id == jobEditId) edit = true\r\n\r\n  return (\r\n    <div>\r\n      {edit ?\r\n        <div className=\"card card-style mb-3 mx-0\">\r\n          <div className=\"content\">\r\n            <JobUpdateForm \r\n              categories={categories}\r\n              handleSubmit={props.clickEditDone}\r\n              job={job}\r\n              initialValues={{\r\n                id: job.id,\r\n                title: job.title, category: category, description: job.description,\r\n                start_date: job.start_date, end_date: job.end_date, budget: job.budget,\r\n                address: job.address\r\n              }}\r\n              clickJobEdit={props.clickJobEdit}\r\n              />\r\n            </div>\r\n        </div>\r\n        :\r\n        <div className='card card-style my-2 mx-0 pb-3'>\r\n          <div className=\"content text-left\">\r\n            <h4 className='font-16 font-500 float-left'>{job.title}</h4>\r\n            <h4 className='font-18 float-right'>{job.budget}</h4>\r\n            <div className=\"clearfix\"></div>\r\n            <p className='text-left float-left mb-0 font-12 font-500'>{job.zakazchik}</p>\r\n            <p className='text-left float-right mb-0 font-11 font-500'>{job.category}</p>\r\n            <div className=\"clearfix\"></div>\r\n            <p className=\"text-left mb-0\">\r\n              {job.description}\r\n            </p>\r\n            <p className='text-left float-left mb-0'>{job.address}</p>\r\n            {job.start_date ? \r\n                <p className='text-left float-right mb-0'>c {job.start_date} до {job.end_date}</p>\r\n                :\r\n                job.end_date ?\r\n                  <p className='text-left float-right mb-0'>До {job.end_date}</p>\r\n                  :\r\n                  <p className='text-left float-right mb-0'>В любое время</p>\r\n              }\r\n            <div className=\"clearfix\"></div>\r\n            <p className='text-left font-10 mb-1'>{job.created_ago}</p>\r\n            <button className='btn btn-m mb-1 rounded-s text-uppercase font-900 shadow-s\r\n              bg-blue2-light text-wrap' data-id={job.id} onClick={props.clickJobEdit}>\r\n                Изменить\r\n            </button>\r\n            <button className='btn btn-m mb-1 rounded-s text-uppercase font-900 shadow-s\r\n              bg-red2-light text-wrap float-right' data-id={job.id} onClick={props.clickDeactivate}>\r\n                Удалить\r\n            </button>\r\n            <div className=\"clearfix\"></div>\r\n            <div className=''>\r\n                {job.images.length > 0 && job.images.map(image =>\r\n                  <div className='rounded-m img-fluid mx-2 my-2 float-left'\r\n                    key={image.id} style={{\"height\": \"75px\"}}\r\n                    >\r\n                      <img src={'https://svoyaeda.su' + image.non_zoom_image} style={{\"height\": \"75px\"}}/>\r\n                      <span className='badge badge-primary' \r\n                        onClick={() => props.deleteJobImage({image: image.id, id: job.id})}>\r\n                        X\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"clearfix\"></div>\r\n            </div>\r\n            <div className=\"file-data\">\r\n              <input className='upload-file bg-highlight shadow-s rounded-s bg-blue2-light'\r\n                placeholder='Добавить фото' type='file' onChange={props.addJobImage} data-job-id={job.id} />\r\n              <p className=\"upload-file-text color-white\">Добавить фото</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nclass JobsEditable extends Component {\r\n  constructor(props) {\r\n    super(props);  \r\n    this.state = {\r\n      jobsEditList: [],\r\n      jobEditId: null,\r\n      needToRefresh: false\r\n    }\r\n\r\n  this.clickJobEdit = this.clickJobEdit.bind(this);\r\n  this.clickEditDone = this.clickEditDone.bind(this);\r\n  this.clickDeactivate = this.clickDeactivate.bind(this);\r\n  this.clickCreateNew = this.clickCreateNew.bind(this);\r\n  this.addJobImage = this.addJobImage.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  clickJobEdit (e) {\r\n    const { id } = e.target.dataset    \r\n    this.setState({...this.state, \r\n      jobEditId: id\r\n    })\r\n  }\r\n\r\n  clickEditDone () {\r\n    const { values } = this.props.form.jobUpdate\r\n    this.props.partialUpdateJob(values)\r\n    this.setState({...this.state, \r\n      jobEditId: null,\r\n      needToRefresh: true\r\n    })\r\n  }\r\n\r\n  clickDeactivate (e) {\r\n    const { id } = e.target.dataset  \r\n    this.props.activateDeactivateJob({id: id, active: false})\r\n    this.setState({...this.state, \r\n      jobEditId: null,\r\n      needToRefresh: true\r\n    })\r\n  }\r\n\r\n  clickCreateNew() {\r\n    const { values } = this.props.form.jobCreate\r\n    this.props.createJob(values)\r\n    this.setState({...this.state, \r\n      jobEditId: null,\r\n      needToRefresh: true\r\n    })\r\n  }\r\n\r\n  addJobImage(e) {\r\n    this.props.addJobImage({original: e.target.files[0], id: e.target.dataset.jobId})\r\n  }\r\n\r\n  refreshSowsList () {\r\n    if (!this.props.eventFetching && this.state.needToRefresh){\r\n      setTimeout(() => {\r\n        this.setState({...this.state, needToRefresh: false})\r\n        this.props.getJobs({zakazchik: this.props.user.id})\r\n      }, 10)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.refreshSowsList()\r\n    const { jobs, user, categories } = this.props\r\n    const { jobEditId } = this.state\r\n    return (\r\n      <div className=''>\r\n        {jobs.length > 0 && jobs.map(job => \r\n          <JobEditable \r\n            job={job}\r\n            jobEditId={jobEditId}\r\n            clickJobEdit={this.clickJobEdit} \r\n            clickEditDone={this.clickEditDone}\r\n            clickDeactivate={this.clickDeactivate}\r\n            categories={categories}\r\n            key={job.id}\r\n            addJobImage={this.addJobImage}\r\n            deleteJobImage={this.props.deleteJobImage}\r\n          />\r\n        )}\r\n        <div className=\"card card-style mb-3 mx-0\">\r\n          {jobs.length < 2 && user ? \r\n              <div className=\"content\">\r\n                <h3 className='font-18 font-500 text-center'>Создать работу</h3>\r\n                <JobCreateForm \r\n                    categories={categories}\r\n                    handleSubmit={this.clickCreateNew}\r\n                    initialValues={{\r\n                      zakazchik: user ? user.id : null, start_date: null, end_date: null, address: 'Улан-Удэ',\r\n                    }}\r\n                  />\r\n              </div>\r\n            :\r\n            <p className='font-18 font-500 text-left'>\r\n              У вас больше 2х активных работ.\r\n            </p>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction UsernamePhone (props) {\r\n  const { user } = props\r\n  const [ edit, setEdit] = useState(0);\r\n  return (\r\n    edit \r\n    ? <div className='card card-style mb-1 mt-2 rounded-m mx-0'>\r\n        <div className=\"content\">\r\n          <UsernamePhoneForm\r\n              handleSubmit={props.changeUsernamePhone}\r\n              initialValues={{\r\n                nickname: user ? user.nickname : null, phone: user.phone, id: user.id\r\n              }}\r\n              setEdit={setEdit}\r\n              edit={edit}\r\n          />\r\n        </div>\r\n      </div>\r\n    : <div className='card card-style mb-1 mt-2 rounded-m mx-0'>\r\n        <div className=\"content\">\r\n          <div className='row my-0'>\r\n            <div className='col-8'>\r\n              <h5 className='text-center font-17 font-600 mb-1'>{user.nickname}</h5>\r\n              <h5 className='text-center font-17 font-600'>{user.phone}</h5>\r\n            </div>\r\n            <div className='col-4'>\r\n              <button className='btn btn-m mb-1 rounded-s text-uppercase font-900 shadow-s\r\n                bg-blue2-light text-wrap float-right'\r\n                onClick={() => setEdit(!edit)}\r\n              >\r\n                Изменить\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\nclass ZakazchikAcc extends Component {\r\n  constructor(props) {\r\n    super(props);  \r\n    this.state = {\r\n    }\r\n\r\n  this.submitCreateShop = this.submitCreateShop.bind(this);\r\n  this.changeUsernamePhone = this.changeUsernamePhone.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user_id = localStorage.getItem('user_id');\r\n    this.props.getJobs({zakazchik: user_id})\r\n  }\r\n\r\n  submitCreateShop(e){\r\n    e.preventDefault()\r\n    this.props.createFirstJob(this.props.state.form.jobCreate.values)\r\n  }\r\n\r\n  changeUsernamePhone (e) {\r\n    this.props.updateUser(this.props.state.form.usernamePhoneForm.values)\r\n  }\r\n\r\n  render() {\r\n    let { user } = this.props\r\n    const { categories, jobs } = this.props.state.jobs\r\n    const { listFetching } = this.props.state.jobs\r\n    return (\r\n      <div className='container-fluid shop-create'>\r\n        {user && <UsernamePhone user={user} changeUsernamePhone={this.changeUsernamePhone}/>}\r\n        {listFetching ?\r\n          <p>Loading</p>\r\n          :\r\n          <JobsEditable \r\n            user={user} \r\n            form={this.props.form}\r\n            categories={categories}\r\n            eventFetching={this.props.state.jobs.eventFetching}\r\n            jobs={jobs}\r\n            getJobs={this.props.getJobs}\r\n            partialUpdateJob={this.props.partialUpdateJob}\r\n            activateDeactivateJob={this.props.activateDeactivateJob}\r\n            createJob={this.props.createJob}\r\n            addJobImage={this.props.addJobImage}\r\n            deleteJobImage={this.props.deleteJobImage}\r\n            />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  routing: state.routing,\r\n  user: state.auth.user,\r\n  jobs: state.jobs.jobs,\r\n  form: state.form\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createFirstJob: id => dispatch(JobsActions.createFirstJobRequest(id)),\r\n  partialUpdateJob: id => dispatch(JobsActions.partialUpdateJobRequest(id)),\r\n  activateDeactivateJob: id => dispatch(JobsActions.activateDeactivateJobRequest(id)),\r\n  getJobs: query => dispatch(JobsActions.getJobsRequest(query)),\r\n  createJob: id => dispatch(JobsActions.createJobRequest(id)),\r\n  addJobImage: id => dispatch(JobsActions.addJobImageRequest(id)),\r\n  deleteJobImage: id => dispatch(JobsActions.deleteJobImageRequest(id)),\r\n\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  updateUser: id => dispatch(AuthActions.partialUpdateUserRequest(id)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ZakazchikAcc);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { browserHistory } from 'react-router';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/store/';\r\n\r\n// Containers\r\nimport Main from './containers/Main'\r\nimport JobFirstCreateShop from './containers/CreateFirstJob'\r\nimport ViberAuthenticationComponent from './containers/ViberLogin'\r\nimport Header from './containers/HeaderContainer'\r\nimport ZakazchikAcc from './containers/ZakazchikAcc'\r\nimport JobDetail from './containers/JobDetail'\r\n\r\n// components\r\n\r\nconst store = configureStore()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      {/* Loader Component */}\r\n      {/* <div id=\"preloader\"><div class=\"spinner-border color-highlight\" role=\"status\"></div></div> */}\r\n      <div className='app' id=\"page\">\r\n        <Header />\r\n        {/* <div id=\"footer-bar\" className=\"footer-bar-5\">\r\n          <Link to=\"/\"><i data-feather=\"heart\" data-feather-line=\"1\" data-feather-size=\"21\" data-feather-color=\"red2-dark\" data-feather-bg=\"red2-fade-light\"></i><span>Features</span></Link>\r\n          <Link to=\"/\"><i data-feather=\"image\" data-feather-line=\"1\" data-feather-size=\"21\" data-feather-color=\"green1-dark\" data-feather-bg=\"green1-fade-light\"></i><span>Media</span></Link>\r\n          <Link to=\"/\" className=\"active-nav\"><i data-feather=\"home\" data-feather-line=\"1\" data-feather-size=\"21\" data-feather-color=\"blue2-dark\" data-feather-bg=\"blue2-fade-light\"></i><span>Home</span></Link>\r\n          <Link to=\"/\"><i data-feather=\"file\" data-feather-line=\"1\" data-feather-size=\"21\" data-feather-color=\"brown1-dark\" data-feather-bg=\"brown1-fade-light\"></i><span>Pages</span></Link>\r\n          <Link to=\"/\"><i data-feather=\"settings\" data-feather-line=\"1\" data-feather-size=\"21\" data-feather-color=\"gray2-dark\" data-feather-bg=\"gray2-fade-light\"></i><span>Settings</span></Link>\r\n        </div> */}\r\n        <div className=\"page-content header-clear\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Main />\r\n            </Route>\r\n            <Route path=\"/zakazchik/create_first/\" component={JobFirstCreateShop} />\r\n            <Route path=\"/zakazchik/account/\" component={ZakazchikAcc} />\r\n            <Route path=\"/dm/login/v/:token\" component={ViberAuthenticationComponent} />\r\n            <Route path=\"/jobs/:id/\" component={JobDetail} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  </Provider>, document.getElementById('root')\r\n);","import { createReducer, createActions } from 'reduxsauce'\r\nimport Immutable from 'seamless-immutable'\r\n\r\nimport { toggleArray, lodashToggle } from '../../components/utils';\r\n\r\n\r\n/* ------------- Types and Action Creators ------------- */\r\nconst { Types, Creators } = createActions({\r\n    createOrChangeIsubRequest: ['payload'],\r\n    createOrChangeIsubFail: ['payload'],\r\n    createOrChangeIsubSuccess: ['payload'],\r\n\r\n    toggleFilterCategories: ['catId'],\r\n})\r\n\r\nexport const IsubsTypes = Types\r\nexport default Creators\r\n\r\n\r\n/* ------------- Initial State ------------- */\r\nexport const INITIAL_STATE = Immutable({\r\n    fetching: false,\r\n    error: null,\r\n    isub: null,\r\n    categories: [],\r\n    filterCategories: [],\r\n    message: '',\r\n})\r\n\r\n/* ------------- Selectors ------------- */\r\nexport const IsubsSelectors = {\r\n    createOrChangeIsub: state => state.isubs.isub,\r\n}\r\n\r\n/* ------------- Reducers ------------- */\r\n// create first job\r\nexport const createOrChangeIsubRequest = (state, { payload }) => {\r\n    return state.merge({ fetching: true, message: '' })\r\n}\r\n\r\nexport const createOrChangeIsubSuccess = (state, { payload }) => {\r\n    return state.merge({ fetching: false, error: null, message: payload.message, isub: payload.isub,\r\n        categories: payload.isub && payload.isub.categories })\r\n}\r\n\r\nexport const createOrChangeIsubFail = (state, { payload }) => {\r\n    return state.merge({ fetching: false, error: payload, message: '', isub: null, categories: null })\r\n}\r\n\r\nexport const toggleFilterCategories = (state, { catId }) => {\r\n    let { filterCategories } = state\r\n    filterCategories = lodashToggle(filterCategories, parseInt(catId))\r\n    return state.merge({ filterCategories: filterCategories })\r\n}\r\n\r\n/* ------------- Hookup Reducers To Types ------------- */\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [Types.CREATE_OR_CHANGE_ISUB_REQUEST]: createOrChangeIsubRequest,\r\n    [Types.CREATE_OR_CHANGE_ISUB_SUCCESS]: createOrChangeIsubSuccess,\r\n    [Types.CREATE_OR_CHANGE_ISUB_FAIL]: createOrChangeIsubFail,\r\n\r\n    [Types.TOGGLE_FILTER_CATEGORIES]: toggleFilterCategories,\r\n})\r\n","import _ from 'lodash';\r\n\r\nexport const toggleArray = (arr: Array<String>, string: string) => {\r\n    if (arr.indexOf(string) === -1) {\r\n      return [...arr, string]\r\n    } else {\r\n      return arr.filter(item => item !== string)\r\n    }\r\n  }\r\n\r\nexport const lodashToggle = (array, item) => _.xor(array, [item])\r\n\r\nexport const toggleArrayLocations = (arr: Array<Object>, location: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (_.isEqual(arr[i], location)){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, location]\r\n  }\r\n}\r\n\r\nexport const addItemToArray = (arr: Array<String>, string: string) => {\r\n    return [...arr, string]\r\n  }\r\n\r\nexport const removeItemFromArray = (arr: Array<String>, string: string) => {\r\n    return arr.filter(item => item !== string)\r\n}\r\n\r\nexport const uniq = a => [...new Set(a)]\r\n\r\n\r\nexport const convertSowsByTours2 = (sowsByToursElemList) => {\r\n  let outputDict = {};\r\n  sowsByToursElemList.map((listElem) => {\r\n    let columns = {};\r\n    outputDict[listElem['tour']['id']] = columns;\r\n    columns['count'] = listElem['count'];\r\n    columns['checked'] = false;\r\n    columns['rows'] = {};\r\n    listElem['sows'].map(sowElem => {\r\n      columns['rows'][sowElem['farm_id']] = {}\r\n      columns['rows'][sowElem['farm_id']]['active'] = false\r\n      columns['rows'][sowElem['farm_id']]['id'] = sowElem['id']\r\n      columns['rows'][sowElem['farm_id']]['status'] = sowElem['status']\r\n    });\r\n  });\r\n  return outputDict\r\n}\r\n\r\nexport const convertSowsByTours = (sowsByToursElemList) => {\r\n  let outputDict = {};\r\n  sowsByToursElemList.map((listElem) => {\r\n    let columns = {};\r\n    outputDict[listElem['title']] = columns;\r\n    columns['count'] = listElem['count'];\r\n    columns['checked'] = false;\r\n    columns['rows'] = {};\r\n    listElem['sows'].map(sowElem => {\r\n      columns['rows'][sowElem['id']] = {}\r\n      columns['rows'][sowElem['id']]['active'] = false\r\n      columns['rows'][sowElem['id']]['id'] = sowElem['id']\r\n      columns['rows'][sowElem['id']]['status'] = sowElem['status']\r\n      columns['rows'][sowElem['id']]['farm_id'] = sowElem['farm_id']\r\n    });\r\n  });\r\n  return outputDict\r\n}\r\n\r\n\r\nexport const getObjectbyId = (list, id) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element['id'] == id)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const getObjectInListbyFieldValue = (list, field, value) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element[field] == value)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\n// doesnt work with immutable *splice\r\nexport const toggleArrayDictById = (arr: Array<Object>, obj: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (arr[i].id === obj.id){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n  \r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, obj]\r\n  }\r\n}","import { createReducer, createActions } from 'reduxsauce'\r\nimport Immutable from 'seamless-immutable'\r\nimport { toggleArrayDictById, getObjectbyId } from '../../components/utils'\r\n\r\n\r\n/* ------------- Types and Action Creators ------------- */\r\nconst { Types, Creators } = createActions({\r\n    getJobsRequest: ['payload'],\r\n    getJobsFail: ['payload'],\r\n    getJobsSuccess: ['payload'],\r\n\r\n    getJobDetailRequest: ['payload'],\r\n    getJobDetailFail: ['error'],\r\n    getJobDetailSuccess: ['payload'],\r\n\r\n    getCategoriesRequest: ['payload'],\r\n    getCategoriesFail: ['payload'],\r\n    getCategoriesSuccess: ['payload'],\r\n\r\n    createFirstJobRequest: ['payload'],\r\n    createFirstJobFail: ['payload'],\r\n    createFirstJobSuccess: ['payload'],\r\n\r\n    partialUpdateJobRequest: ['payload'],\r\n    partialUpdateJobFail: ['payload'],\r\n    partialUpdateJobSuccess: ['payload'],\r\n\r\n    activateDeactivateJobRequest: ['payload'],\r\n    activateDeactivateJobFail: ['payload'],\r\n    activateDeactivateJobSuccess: ['payload'],\r\n\r\n    createJobRequest: ['payload'],\r\n    createJobFail: ['payload'],\r\n    createJobSuccess: ['payload'],\r\n\r\n    addJobImageRequest: ['payload'],\r\n    addJobImageFail: ['payload'],\r\n    addJobImageSuccess: ['payload'],\r\n\r\n    deleteJobImageRequest: ['payload'],\r\n    deleteJobImageFail: ['payload'],\r\n    deleteJobImageSuccess: ['payload'],\r\n})\r\n\r\nexport const JobsTypes = Types\r\nexport default Creators\r\n\r\n\r\n/* ------------- Initial State ------------- */\r\nexport const INITIAL_STATE = Immutable({\r\n    listFetching: false,\r\n    jobs: [],\r\n    categories: [],\r\n    errorList: null,\r\n\r\n    detailFetching: null,\r\n    jobDetail: null,\r\n    errorDetail: null,\r\n\r\n    eventFetching: null,\r\n\r\n    message: '',\r\n})\r\n\r\n\r\n/* ------------- Selectors ------------- */\r\nexport const JobsSelectors = {\r\n    getJobs: state => state.jobs.job_list,\r\n    getCategories: state => state.jobs.categories,\r\n    createJob: state => state.jobs.jobDetail,\r\n}\r\n\r\n\r\n/* ------------- Reducers ------------- */\r\n// Get Jobs\r\nexport const getJobsRequest = (state, { payload }) => {\r\n    return state.merge({ listFetching: true, jobs: [] })\r\n}\r\n\r\nexport const getJobsSuccess = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList: null, jobs: payload.results,\r\n         categories: payload.categories })\r\n}\r\n\r\nexport const getJobsFail = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList: payload, jobs: [] })\r\n}\r\n\r\n// Get one\r\nexport const getJobDetailRequest = (state, { payload }) => {\r\n    return state.merge({ detailFetching: true, })\r\n}\r\n\r\nexport const getJobDetailSuccess = (state, { payload }) => {\r\n    return state.merge({ detailFetching: false, errorDetail: null, jobDetail: payload})\r\n}\r\n\r\nexport const getJobDetailFail = (state, { error }) => {\r\n    return state.merge({ detailFetching: false, errorDetail: error, jobDetail: null })\r\n}\r\n\r\n// Get categories\r\nexport const getCategoriesRequest = (state, { payload }) => {\r\n    return state.merge({ listFetching: true, categories: [] })\r\n}\r\n\r\nexport const getCategoriesSuccess = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList: null, categories: payload })\r\n}\r\n\r\nexport const getCategoriesFail = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList:payload, categories: [] })\r\n}\r\n\r\n// create first job\r\nexport const createFirstJobRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const createFirstJobSuccess = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message })\r\n}\r\n\r\nexport const createFirstJobFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n// partial update job\r\nexport const partialUpdateJobRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const partialUpdateJobSuccess = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message })\r\n}\r\n\r\nexport const partialUpdateJobFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n// activateDeactivate job\r\nexport const activateDeactivateJobRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const activateDeactivateJobSuccess = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message })\r\n}\r\n\r\nexport const activateDeactivateJobFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n// create job\r\nexport const createJobRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const createJobSuccess = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message, \r\n        jobDetail: payload.job })\r\n}\r\n\r\nexport const createJobFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n// add job image\r\nexport const addJobImageRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const addJobImageSuccess = (state, { payload }) => {\r\n    const jobInList = getObjectbyId(state.jobs, payload.job.id)\r\n    const index = state.jobs.indexOf(jobInList)\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message, \r\n        jobs: [...state.jobs.slice(0, index), payload.job, ...state.jobs.slice(index + 1)]\r\n         })\r\n}\r\n\r\nexport const addJobImageFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n// delete job image\r\nexport const deleteJobImageRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const deleteJobImageSuccess = (state, { payload }) => {\r\n    const jobInList = getObjectbyId(state.jobs, payload.job.id)\r\n    const index = state.jobs.indexOf(jobInList)\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message,\r\n        jobs: [...state.jobs.slice(0, index), payload.job, ...state.jobs.slice(index + 1)]\r\n     })\r\n}\r\n\r\nexport const deleteJobImageFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n/* ------------- Hookup Reducers To Types ------------- */\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [Types.GET_JOBS_REQUEST]: getJobsRequest,\r\n    [Types.GET_JOBS_SUCCESS]: getJobsSuccess,\r\n    [Types.GET_JOBS_FAIL]: getJobsFail,\r\n\r\n    [Types.GET_JOB_DETAIL_REQUEST]: getJobDetailRequest,\r\n    [Types.GET_JOB_DETAIL_SUCCESS]: getJobDetailSuccess,\r\n    [Types.GET_JOB_DETAIL_FAIL]: getJobDetailFail,\r\n\r\n    [Types.GET_CATEGORIES_REQUEST]: getCategoriesRequest,\r\n    [Types.GET_CATEGORIES_SUCCESS]: getCategoriesSuccess,\r\n    [Types.GET_CATEGORIES_FAIL]: getCategoriesFail,\r\n\r\n    [Types.CREATE_FIRST_JOB_REQUEST]: createFirstJobRequest,\r\n    [Types.CREATE_FIRST_JOB_SUCCESS]: createFirstJobSuccess,\r\n    [Types.CREATE_FIRST_JOB_FAIL]: createFirstJobFail,\r\n\r\n    [Types.PARTIAL_UPDATE_JOB_REQUEST]: partialUpdateJobRequest,\r\n    [Types.PARTIAL_UPDATE_JOB_SUCCESS]: partialUpdateJobSuccess,\r\n    [Types.PARTIAL_UPDATE_JOB_FAIL]: partialUpdateJobFail,\r\n\r\n    [Types.ACTIVATE_DEACTIVATE_JOB_REQUEST]: activateDeactivateJobRequest,\r\n    [Types.ACTIVATE_DEACTIVATE_JOB_SUCCESS]: activateDeactivateJobSuccess,\r\n    [Types.ACTIVATE_DEACTIVATE_JOB_FAIL]: activateDeactivateJobFail,\r\n\r\n    [Types.CREATE_JOB_REQUEST]: createJobRequest,\r\n    [Types.CREATE_JOB_SUCCESS]: createJobSuccess,\r\n    [Types.CREATE_JOB_FAIL]: createJobFail,\r\n\r\n    [Types.ADD_JOB_IMAGE_REQUEST]: addJobImageRequest,\r\n    [Types.ADD_JOB_IMAGE_SUCCESS]: addJobImageSuccess,\r\n    [Types.ADD_JOB_IMAGE_FAIL]: addJobImageFail,\r\n\r\n    [Types.DELETE_JOB_IMAGE_REQUEST]: deleteJobImageRequest,\r\n    [Types.DELETE_JOB_IMAGE_SUCCESS]: deleteJobImageSuccess,\r\n    [Types.DELETE_JOB_IMAGE_FAIL]: deleteJobImageFail,\r\n})\r\n"],"sourceRoot":""}