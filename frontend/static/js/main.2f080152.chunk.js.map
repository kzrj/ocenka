{"version":3,"sources":["redux/redux-sauce/auth.js","redux/api/endpoints.js","redux/api/utils.js","redux/api/authApi.js","redux/api/jobsApi.js","redux/api/isubsApi.js","redux/sagas/authSagas.js","redux/sagas/jobsSagas.js","redux/sagas/isubsSagas.js","redux/sagas/index.js","redux/store/index.js","containers/Main.js","components/JobForms.js","containers/CreateFirstJob.js","containers/ViberLogin.js","containers/HeaderContainer.js","containers/ZakazchikAcc.js","containers/JobDetail.js","index.js","redux/redux-sauce/isubs.js","components/utils.js","redux/redux-sauce/jobs.js"],"names":["createActions","loginRequest","loginSuccess","loginFailure","logoutRequest","logoutSuccess","logoutFailure","checkTokenRequest","checkTokenSuccess","checkTokenFail","Types","Creators","AuthTypes","INITIAL_STATE","Immutable","fetching","user","error","isLoggedIn","isLoggingIn","AuthSelectors","getUser","state","data","merge","action","payload","profile","reducer","createReducer","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","CHECK_TOKEN_REQUEST","CHECK_TOKEN_FAIL","CHECK_TOKEN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","apiUrl","JWT_AUTH","JWT_CHECK_TOKEN","SIGNUP","GET_JOBS","getJobDetail","id","activateDeactivateJobDetail","CREATE_FIRST_JOB","addJobImage","deleteJobImage","GET_CATEGORIES","CREATE_OR_CHANGE_ISUB","parseErrorData","response","errorObj","status","statusText","message","JSON","stringify","property","createUrlParamsFromFilters","filters","params","URLSearchParams","Object","keys","forEach","key","Array","append","map","value","logIn","username","password","axios","post","endpoints","then","Error","token","catch","err","localStorage","setItem","checkToken","logOut","removeItem","getJobs","get","getCategories","getItem","url","method","createFirstJob","name","phone","title","description","budget","address","start_date","end_date","category","formData","FormData","headers","partialUpdateJob","activateDeactivateJob","active","createJob","original","image","createOrChangeIsub","categories","length","cat","console","log","api","put","AuthActions","resetAuthErrors","call","toggleModal","IsubsActions","createOrChangeIsubSuccess","JobsActions","getJobsSuccess","getJobsFail","getJobDetailSuccess","getJobDetailFail","getCategoriesSuccess","results","getCategoriesFail","createFirstJobSuccess","createFirstJobFail","partialUpdateJobSuccess","partialUpdateJobFail","activateDeactivateJobSuccess","activateDeactivateJobFail","createJobSuccess","createJobFail","addJobImageSuccess","addJobImageFail","deleteJobImageSuccess","deleteJobImageFail","createOrChangeIsubFail","root","authApi","AuthApi","jobsApi","JobsApi","isubsApi","IsubsApi","all","takeEvery","JobsTypes","GET_JOBS_REQUEST","jobsSaga","GET_JOB_DETAIL_REQUEST","GET_CATEGORIES_REQUEST","CREATE_FIRST_JOB_REQUEST","PARTIAL_UPDATE_JOB_REQUEST","ACTIVATE_DEACTIVATE_JOB_REQUEST","CREATE_JOB_REQUEST","ADD_JOB_IMAGE_REQUEST","DELETE_JOB_IMAGE_REQUEST","IsubsTypes","CREATE_OR_CHANGE_ISUB_REQUEST","isubsSaga","reducers","combineReducers","auth","require","jobs","isubs","form","formReducer","JobBlock","props","job","linkTo","className","to","zakazchik","created_ago","images","Categories","catClass","filterCategories","includes","onClick","clickCategory","data-id","ru_name","Main","needToRefresh","bind","clickSubscribe","clickUnsubscribe","clickSubscribeAll","this","e","target","dataset","toggleFilterCategories","setState","toggleArray","listFetching","setTimeout","greetingMessage","greetingTime","Date","getHours","refreshList","errorList","isub","getGreetings","style","nickname","data-menu","src","viber_avatar","data-card-height","data-src","idx","Component","connect","notifications","dispatch","query","getCategoriesRequest","getJobsRequest","catId","createOrChangeIsubRequest","renderTextField","label","placeholder","input","multiline","meta","touched","invalid","labelClass","custom","TextField","helperText","InputLabelProps","renderSelectField","formClass","children","FormControl","InputLabel","Select","native","FormHelperText","renderFromHelper","renderDateTimeField","type","shrink","renderField","required","warning","JobForm2","handleSubmit","pristine","reset","submitting","jobDate","Field","component","onChange","setData","JobFirstCreateForm","onSubmit","defaultValue","disabled","reduxForm","JobCreateForm","initialValues","JobUpdateForm","clickJobEdit","JobFirstCreateShop","submitCreateShop","preventDefault","jobFirstCreate","values","history","push","pathname","shopName","shopPhone","shopInfo","routing","createFirstJobRequest","ViberAuthenticationComponent","match","access","from","Header","data-toggle","data-target","logout","JobEditable","jobEditId","edit","clickEditDone","clickDeactivate","catalog_image","data-job-id","JobsEditable","jobsEditList","clickCreateNew","jobUpdate","jobCreate","files","jobId","eventFetching","refreshSowsList","ZakazchikAcc","user_id","partialUpdateJobRequest","activateDeactivateJobRequest","createJobRequest","addJobImageRequest","deleteJobImageRequest","JobDetail","jobDetail","detailFetching","getJobDetailRequest","store","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","configureStore","ReactDOM","render","exact","path","document","getElementById","IsubsSelectors","lodashToggle","parseInt","CREATE_OR_CHANGE_ISUB_SUCCESS","CREATE_OR_CHANGE_ISUB_FAIL","TOGGLE_FILTER_CATEGORIES","arr","string","indexOf","filter","item","array","_","xor","getObjectbyId","list","obj","element","errorDetail","JobsSelectors","job_list","jobInList","index","slice","GET_JOBS_SUCCESS","GET_JOBS_FAIL","GET_JOB_DETAIL_SUCCESS","GET_JOB_DETAIL_FAIL","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAIL","CREATE_FIRST_JOB_SUCCESS","CREATE_FIRST_JOB_FAIL","PARTIAL_UPDATE_JOB_SUCCESS","PARTIAL_UPDATE_JOB_FAIL","ACTIVATE_DEACTIVATE_JOB_SUCCESS","ACTIVATE_DEACTIVATE_JOB_FAIL","CREATE_JOB_SUCCESS","CREATE_JOB_FAIL","ADD_JOB_IMAGE_SUCCESS","ADD_JOB_IMAGE_FAIL","DELETE_JOB_IMAGE_SUCCESS","DELETE_JOB_IMAGE_FAIL"],"mappings":"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","file":"static/js/main.2f080152.chunk.js","sourcesContent":["import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  loginRequest: ['data'],\n  loginSuccess: ['user'],\n  loginFailure: ['error'],\n\n  logoutRequest: null,\n  logoutSuccess: null,\n  logoutFailure: ['error'],\n\n  checkTokenRequest: ['payload'],\n  checkTokenSuccess: ['payload'],\n  checkTokenFail: ['error'],\n})\n\nexport const AuthTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n  fetching: false,\n  user: null,\n  error: '',\n  isLoggedIn: false,\n  isLoggingIn: false\n})\n\n/* ------------- Selectors ------------- */\n\nexport const AuthSelectors = {\n  getUser: state => state.user\n}\n\n/* ------------- Reducers ------------- */\n\n// login request\nexport const loginRequest = (state, { data }) => {\n  return state.merge({ fetching: true, user: null, isLoggingIn: true, isLoggedIn: false })\n}\n  \n\n// login success\nexport const loginSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggedIn: true, isLoggingIn: false })\n}\n\n// login fail\nexport const loginFailure = (state, action) => {\n  const { error } = action\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n\n// logout request\nexport const logoutRequest = (state) => {\n  return state.merge({ fetching: true, isLoggingIn: true })\n}\n\nexport const logoutSuccess = (state) => {\n  return state.merge({ fetching: false, error: null, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\nexport const logoutFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, isLoggingIn: false })\n}\n \nexport const checkTokenRequest = (state, { payload }) => {\n  return state.merge({ fetching: true })\n}\n\nexport const checkTokenSuccess = (state, { payload }) => {\n  return state.merge({ fetching: false, error: null, user: payload.profile, isLoggedIn: true, isLoggingIn: false })\n}\n\nexport const checkTokenFail = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.LOGIN_REQUEST]: loginRequest,\n  [Types.LOGIN_SUCCESS]: loginSuccess,\n  [Types.LOGIN_FAILURE]: loginFailure,\n  \n  [Types.CHECK_TOKEN_REQUEST]: checkTokenRequest,\n  [Types.CHECK_TOKEN_FAIL]: checkTokenFail,\n  [Types.CHECK_TOKEN_SUCCESS]: checkTokenSuccess,\n  \n  [Types.LOGOUT_REQUEST]: logoutRequest,\n  [Types.LOGOUT_SUCCESS]: logoutSuccess,\n  [Types.LOGOUT_FAILURE]: logoutFailure,\n  \n})\n","// export const url = 'http://35.222.169.29';\r\nexport const url = 'https://svoyaeda.su';\r\n\r\nexport const apiUrl = `${url}/api`;\r\n\r\nexport default {\r\n    JWT_AUTH: `${apiUrl}/jwt/api-token-auth/`,\r\n    JWT_CHECK_TOKEN: `${apiUrl}/jwt/api-token-verify/`,\r\n    SIGNUP: `${apiUrl}/users/`,\r\n\r\n    // jobs\r\n    GET_JOBS: `${apiUrl}/jobs/`,\r\n    getJobDetail: (id) => `${apiUrl}/jobs/${id}/`,\r\n    activateDeactivateJobDetail: (id) => `${apiUrl}/jobs/${id}/activate_deactivate/`,\r\n    CREATE_FIRST_JOB: `${apiUrl}/jobs/first_create/`,\r\n    addJobImage: (id) => `${apiUrl}/jobs/${id}/add_image/`,\r\n    deleteJobImage: (id) => `${apiUrl}/jobs/${id}/delete_image/`,\r\n\r\n    // categories\r\n    GET_CATEGORIES: `${apiUrl}/categories/`,\r\n\r\n    // subs\r\n    CREATE_OR_CHANGE_ISUB: `${apiUrl}/subs/`,\r\n}","\n// standart serializer field error. There are could be several fields\n// {\n//     \"birth_id\": [\"This field is required.\"]\n// }\n\n\nexport const parseErrorData = (error) => {\n\n    if (error && typeof error.response !== 'undefined') {\n        let errorObj = {\n            status: error.response.status, \n            statusText: error.response.statusText,\n            message: null,\n            response: error.response,\n        }\n        if ('message' in error.response.data) {\n            errorObj.message = JSON.stringify(error.response.data.message)\n        }\n        else {\n            let message = ''\n            for (const property in error.response.data) {\n                message = message + `${property}: ${error.response.data[property]}. `\n              }\n            errorObj.message = message\n\n        }\n        return errorObj\n\n    } else {\n        return { \n         status: 'Connection Error',\n         statusText: 'An error occurred while sending your data!',\n         message: 'An error occurred while sending your data!' }\n    }\n}\n\nexport const createUrlParamsFromFilters = (filters) => {\n    const params = new URLSearchParams()\n\n    if (filters != null) Object.keys(filters).forEach(key => {\n            if (filters[key] !== null && !(filters[key] instanceof Array)) \n                params.append(key, filters[key])\n            if (filters[key] !== null && filters[key] instanceof Array){\n                delete params[key]\n                filters[key].map(value => {\n                    if (value !== '')\n                        params.append(key, value)\n                    return null\n                })\n            }\n        })\n    return params\n}","import axios from 'axios';\nimport endpoints from './endpoints';\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\n\n\nconst create = () => {\n  const logIn = (data: { username: string, password: string}): void => {\n    const { username, password } = data;\n    \n     return axios.post(endpoints.JWT_AUTH, { username, password })\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n            throw new Error(response);\n        }\n        return { token: response.data.token, user: response.data.user };\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n      .then((response) => {\n          // console.log('response.data', response.data)\n          localStorage.setItem('token', response.data.token);\n          return response.user;\n      })\n  }\n\n  const logOut = () => {\n    localStorage.removeItem('token');\n  }\n\n  const checkToken = (payload: string) => {\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token: payload })\n      .then(response => {\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('user_id', response.data.profile.id);\n        return response.data\n      })\n      .catch(err => {\n        const error = new Error(err);\n            error.data = parseErrorData(err);\n            throw error;\n      })\n  }\n\n  return {\n    logIn,\n    checkToken,\n    logOut,\n  }\n}\n\nexport default {\n  create\n}","import axios from 'axios';\r\nimport endpoints from './endpoints';\r\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\r\n\r\nconst create = () => {\r\n\r\n    const getCategories = (filters) => {\r\n        const params = createUrlParamsFromFilters(filters);\r\n        return axios.get(endpoints.GET_CATEGORIES, { params })\r\n        .then(response => response.data)\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const getJobs = (filters) => {\r\n        const params = createUrlParamsFromFilters(filters);\r\n        return axios.get(endpoints.GET_JOBS, { params })\r\n        .then(response => response.data)\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const getJobDetail = id => {\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.getJobDetail(id);\r\n\r\n        return axios({\r\n                    method: 'get',\r\n                    url: url,\r\n                    // headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const createFirstJob = payload => {\r\n        const { name, phone, title, description, budget, address, start_date, end_date, category } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.CREATE_FIRST_JOB;\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"name\", name);\r\n        formData.append(\"phone\", phone);\r\n        formData.append(\"title\", title);\r\n        formData.append(\"description\", description);\r\n        formData.append(\"budget\", budget);\r\n        formData.append(\"address\", address);\r\n        formData.append(\"category\", category);\r\n        start_date && formData.append(\"start_date\", start_date);\r\n        end_date && formData.append(\"end_date\", end_date);\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const partialUpdateJob = payload => {\r\n        const { id, title, description, budget, address, start_date, end_date, category } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.getJobDetail(id);\r\n\r\n        const formData = new FormData();\r\n        title && formData.append(\"title\", title);\r\n        description && formData.append(\"description\", description);\r\n        budget && formData.append(\"budget\", budget);\r\n        address && formData.append(\"address\", address);\r\n        category && formData.append(\"category\", category);\r\n        start_date && formData.append(\"start_date\", start_date);\r\n        end_date && formData.append(\"end_date\", end_date);\r\n        \r\n        return axios({\r\n                    method: 'patch',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const activateDeactivateJob = payload => {\r\n        const { id, active } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.activateDeactivateJobDetail(id);\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"active\", active);\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const createJob = payload => {\r\n        const { title, description, budget, address, start_date, end_date, category } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.GET_JOBS;\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"title\", title);\r\n        formData.append(\"description\", description);\r\n        formData.append(\"budget\", budget);\r\n        formData.append(\"address\", address);\r\n        formData.append(\"category\", category);\r\n        start_date && formData.append(\"start_date\", start_date);\r\n        end_date && formData.append(\"end_date\", end_date);\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const addJobImage = payload => {\r\n        const { id, original } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.addJobImage(id);\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"original\", original);\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const deleteJobImage = payload => {\r\n        const { id, image } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.deleteJobImage(id);\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"image\", image);\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    return {\r\n        getJobs,\r\n        getCategories,\r\n        getJobDetail,\r\n        createFirstJob,\r\n        partialUpdateJob,\r\n        activateDeactivateJob,\r\n        createJob,\r\n        addJobImage,\r\n        deleteJobImage\r\n    }\r\n}\r\n\r\nexport default {\r\n    create\r\n}","import axios from 'axios';\r\nimport endpoints from './endpoints';\r\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\r\n\r\nconst create = () => {\r\n    const createOrChangeIsub = payload => {\r\n        const { categories } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.CREATE_OR_CHANGE_ISUB;\r\n\r\n        const formData = new FormData();\r\n        categories && categories.length > 0 && categories.map(cat =>\r\n            formData.append(\"categories\", cat)\r\n            ) \r\n        console.log(categories)\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    return {\r\n        createOrChangeIsub,\r\n    }\r\n}\r\n\r\nexport default {\r\n    create\r\n}","import { put, call } from 'redux-saga/effects';\r\n// import { push } from 'react-router-redux';\r\n// import Notifications from 'react-notification-system-redux';\r\n\r\nimport AuthActions from '../redux-sauce/auth'\r\nimport IsubsActions from '../redux-sauce/isubs'\r\n\r\nexport function * logIn (api, action) {\r\n  const { data } = action;\r\n  yield put(AuthActions.resetAuthErrors())\r\n  try {\r\n    let response = yield call(api.logIn, data)\r\n    yield put(AuthActions.loginSuccess(response))\r\n    yield put(AuthActions.toggleModal(false))\r\n  } catch (e) {\r\n    yield put(AuthActions.loginFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * logOut (api, action) {\r\n  try {\r\n    yield call(api.logOut)\r\n    yield put(AuthActions.logoutSuccess())\r\n  } catch (e) {\r\n    yield put(AuthActions.logoutFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function* checkToken(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    let response = yield call(api.checkToken, payload);\r\n    yield put(AuthActions.checkTokenSuccess(response));\r\n    yield put(IsubsActions.createOrChangeIsubSuccess(response.profile))\r\n    // add isub action\r\n  } catch (e) {\r\n    yield put(AuthActions.checkTokenFail(e.message))\r\n  }\r\n}","import { put, call } from 'redux-saga/effects';\r\n\r\nimport JobsActions from '../redux-sauce/jobs'\r\n\r\nexport function* getJobs(api, action) {\r\n    try {\r\n        let response = yield call(api.getJobs, action.payload);\r\n        yield put(JobsActions.getJobsSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.getJobsFail(err))\r\n    }\r\n}\r\n\r\nexport function* getJobDetail(api, action) {\r\n    try {\r\n        let response = yield call(api.getJobDetail, action.payload);\r\n        yield put(JobsActions.getJobDetailSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.getJobDetailFail(err))\r\n    }\r\n}\r\n\r\nexport function* getCategories(api, action) {\r\n    try {\r\n        let response = yield call(api.getCategories, action.payload);\r\n        yield put(JobsActions.getCategoriesSuccess(response.results));\r\n    } catch (err) {\r\n        yield put(JobsActions.getCategoriesFail(err))\r\n    }\r\n}\r\n\r\nexport function* createFirstJob(api, action) {\r\n    try {\r\n        let response = yield call(api.createFirstJob, action.payload);\r\n        yield put(JobsActions.createFirstJobSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.createFirstJobFail(err))\r\n    }\r\n}\r\n\r\nexport function* partialUpdateJob(api, action) {\r\n    try {\r\n        let response = yield call(api.partialUpdateJob, action.payload);\r\n        yield put(JobsActions.partialUpdateJobSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.partialUpdateJobFail(err))\r\n    }\r\n}\r\n\r\nexport function* activateDeactivateJob(api, action) {\r\n    try {\r\n        let response = yield call(api.activateDeactivateJob, action.payload);\r\n        yield put(JobsActions.activateDeactivateJobSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.activateDeactivateJobFail(err))\r\n    }\r\n}\r\n\r\nexport function* createJob(api, action) {\r\n    try {\r\n        let response = yield call(api.createJob, action.payload);\r\n        yield put(JobsActions.createJobSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.createJobFail(err))\r\n    }\r\n}\r\n\r\nexport function* addJobImage(api, action) {\r\n    try {\r\n        let response = yield call(api.addJobImage, action.payload);\r\n        yield put(JobsActions.addJobImageSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.addJobImageFail(err))\r\n    }\r\n}\r\n\r\nexport function* deleteJobImage(api, action) {\r\n    try {\r\n        let response = yield call(api.deleteJobImage, action.payload);\r\n        yield put(JobsActions.deleteJobImageSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.deleteJobImageFail(err))\r\n    }\r\n}","import { put, call } from 'redux-saga/effects';\r\n\r\nimport IsubsActions from '../redux-sauce/isubs'\r\n\r\nexport function* createOrChangeIsub(api, action) {\r\n    try {\r\n        let response = yield call(api.createOrChangeIsub, action.payload);\r\n        yield put(IsubsActions.createOrChangeIsubSuccess(response));\r\n    } catch (err) {\r\n        yield put(IsubsActions.createOrChangeIsubFail(err))\r\n    }\r\n}","import { takeEvery, all, takeLatest } from \"redux-saga/effects\";\r\n\r\n/* -------------- API -------------- */\r\nimport AuthApi from \"../api/authApi\";\r\nimport JobsApi from '../api/jobsApi';\r\nimport IsubsApi from '../api/isubsApi';\r\n\r\n/* ------------- Types ------------- */\r\nimport { AuthTypes } from \"../redux-sauce/auth\";\r\nimport { JobsTypes } from '../redux-sauce/jobs';\r\nimport { IsubsTypes } from '../redux-sauce/isubs';\r\n\r\n/* ------------- Sagas ------------- */\r\nimport { logIn, logOut, checkToken, signUp, checkAuth } from \"./authSagas\";\r\nimport * as jobsSaga from './jobsSagas';\r\nimport * as isubsSaga from './isubsSagas';\r\n\r\nconst authApi = AuthApi.create();\r\nconst jobsApi = JobsApi.create();\r\nconst isubsApi = IsubsApi.create();\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeEvery(AuthTypes.LOGIN_REQUEST, logIn, authApi),\r\n    takeEvery(AuthTypes.LOGOUT_REQUEST, logOut, authApi),\r\n    takeEvery(AuthTypes.CHECK_TOKEN_REQUEST, checkToken, authApi),\r\n\r\n    takeEvery(JobsTypes.GET_JOBS_REQUEST, jobsSaga.getJobs, jobsApi),\r\n    takeEvery(JobsTypes.GET_JOB_DETAIL_REQUEST, jobsSaga.getJobDetail, jobsApi),\r\n    takeEvery(JobsTypes.GET_CATEGORIES_REQUEST, jobsSaga.getCategories, jobsApi),\r\n    takeEvery(JobsTypes.CREATE_FIRST_JOB_REQUEST, jobsSaga.createFirstJob, jobsApi),\r\n    takeEvery(JobsTypes.PARTIAL_UPDATE_JOB_REQUEST, jobsSaga.partialUpdateJob, jobsApi),\r\n    takeEvery(JobsTypes.ACTIVATE_DEACTIVATE_JOB_REQUEST, jobsSaga.activateDeactivateJob, jobsApi),\r\n    takeEvery(JobsTypes.CREATE_JOB_REQUEST, jobsSaga.createJob, jobsApi),\r\n    takeEvery(JobsTypes.ADD_JOB_IMAGE_REQUEST, jobsSaga.addJobImage, jobsApi),\r\n    takeEvery(JobsTypes.DELETE_JOB_IMAGE_REQUEST, jobsSaga.deleteJobImage, jobsApi),\r\n\r\n    takeEvery(IsubsTypes.CREATE_OR_CHANGE_ISUB_REQUEST, isubsSaga.createOrChangeIsub, isubsApi),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\n// import { reducer as notifications } from 'react-notification-system-redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport const reducers = combineReducers({\r\n  // routing: routerReducer,\r\n  auth: require('../redux-sauce/auth').reducer,\r\n  jobs: require('../redux-sauce/jobs').reducer,\r\n  isubs: require('../redux-sauce/isubs').reducer,\r\n  \r\n  form: formReducer,\r\n  // notifications: notifications\r\n})\r\n\r\nexport default (history) => {\r\n  // const rMiddleware = routerMiddleware(history)\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(reducers, composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  ));\r\n\r\n  let sagasManager = sagaMiddleware.run(rootSaga)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(() => {\r\n      const nextRootReducer = require('./').reducers\r\n      store.replaceReducer(nextRootReducer)\r\n\r\n      const newYieldedSagas = require('../sagas').default\r\n      sagasManager.cancel()\r\n      sagasManager.done.then(() => {\r\n        sagasManager = sagaMiddleware.run(newYieldedSagas)\r\n      })\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toggleArray } from '../components/utils'\r\nimport {\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\n// actions\r\nimport JobsActions from '../redux/redux-sauce/jobs';\r\nimport IsubsActions from '../redux/redux-sauce/isubs';\r\n\r\n\r\nfunction JobBlock (props) {\r\n  const { job } = props\r\n  const linkTo = `/jobs/${job.id}/`\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className=\"content text-left\">\r\n          <Link to={linkTo}><h4 className='font-16 font-500 float-left'>{job.title}</h4></Link>\r\n          <h4 className='font-18 float-right'>{job.budget}</h4>\r\n          <div className=\"clearfix\"></div>\r\n          <p className='text-left float-left mb-0 font-12 font-500'>{job.zakazchik}</p>\r\n          <p className='text-left float-right mb-0 font-11 font-400 font-italic'>{job.category}</p>\r\n          <div className=\"clearfix\"></div>\r\n          <p className=\"text-left mb-0\">\r\n            {job.description}\r\n          </p>\r\n          <p className='text-left float-left mb-0'>{job.address}</p>\r\n          {job.start_date ? \r\n              <p className='text-left float-right mb-0'>c {job.start_date} до {job.end_date}</p>\r\n              :\r\n              job.end_date ?\r\n                <p className='text-left float-right mb-0'>До {job.end_date}</p>\r\n                :\r\n                <p className='text-left float-right mb-0'>В любое время</p>\r\n            }\r\n          <div className=\"clearfix\"></div>\r\n          <p className='text-left float-left font-10'>{job.created_ago}</p>\r\n          {job.images.length > 0 && <p className='text-left float-right font-15'>{job.images.length} фото</p>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nfunction Categories (props){\r\n  const { categories } = props\r\n  let catClass = \"btn btn-xs mb-1 ml-1 rounded-xl text-uppercase font-900 shadow-s \\\r\n     text-wrap float-left\"\r\n  let active = \" bg-red2-light\"\r\n  let notActive = \" bg-blue2-light\"\r\n  return (\r\n    <div>\r\n      {categories.length > 0 && categories.map(category => \r\n          <button \r\n            className={props.filterCategories.includes(category.id) ? catClass + active : catClass + notActive }\r\n            key={category.id} onClick={props.clickCategory} \r\n            data-id={category.id}\r\n            >\r\n              {category.ru_name}\r\n          </button>\r\n        )}\r\n      <div className=\"clearfix\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      needToRefresh: false,\r\n    }\r\n    this.clickCategory = this.clickCategory.bind(this);\r\n    this.clickSubscribe = this.clickSubscribe.bind(this);\r\n    this.clickUnsubscribe = this.clickUnsubscribe.bind(this);\r\n    this.clickSubscribeAll = this.clickSubscribeAll.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // console.log(this.props.history)\r\n    this.props.getJobs()\r\n  }\r\n\r\n  clickCategory(e) {\r\n    const { id } = e.target.dataset\r\n    this.props.toggleFilterCategories(id)\r\n    this.setState({...this.state, needToRefresh: true})\r\n  }\r\n\r\n  clickSubscribe(){\r\n    this.props.createOrChangeIsub({categories: this.props.filterCategories})\r\n  }\r\n\r\n  clickSubscribeAll(){\r\n    let categories = []\r\n    this.props.state.jobs.categories.map(cat => categories = toggleArray(categories, cat.id))\r\n    this.props.createOrChangeIsub({categories: categories})\r\n  }\r\n\r\n  clickUnsubscribe(){\r\n    this.props.createOrChangeIsub({})\r\n  }\r\n\r\n  refreshList () {\r\n    if (!this.props.state.jobs.listFetching && this.state.needToRefresh){\r\n      setTimeout(() => {\r\n        this.setState({...this.state, needToRefresh: false})\r\n        const { filterCategories } = this.props\r\n        this.props.getJobs({category: filterCategories})\r\n      }, 10)\r\n    }\r\n  }\r\n\r\n  getGreetings(){\r\n    var greetingTime = new Date().getHours();\r\n    var greetingMessage;\r\n    var greetingMorning = ('Доброе утро');\r\n    var greetingAfternoon = ('Добрый день');\r\n    var greetingEvening = ('Добрый вечер');\r\n    if (greetingTime >= 0 && greetingTime < 12) {greetingMessage = greetingMorning; \r\n    } else if (greetingTime >= 12 && greetingTime < 17) {greetingMessage = greetingAfternoon;\r\n    } else if (greetingTime >= 17 && greetingTime < 24) {greetingMessage = greetingEvening;}\r\n\r\n    return greetingMessage\r\n  }\r\n\r\n  render() {\r\n    this.refreshList()\r\n    const { jobs, categories, listFetching, errorList } = this.props.state.jobs\r\n    const { filterCategories, isub } = this.props.state.isubs\r\n    let { user } = this.props.state.auth\r\n    const greetingMessage = this.getGreetings()\r\n    // console.log(this.props.state)\r\n    return (\r\n        <div>\r\n          <div className=\"page-title page-title-large\">\r\n            <h2 style={{\"color\": '#fff'}}>{greetingMessage}, <br/>{user ? user.nickname : 'Пользователь'}</h2>\r\n            <img data-menu=\"menu-main\" src={user ? user.viber_avatar : 'images/pictures/20s.jpg'}\r\n              className=\"bg-fade-gray1-dark shadow-xl\" \r\n            />\r\n          </div>\r\n          <div className=\"card header-card shape-rounded\" data-card-height=\"210\" style={{\"height\": \"210px\"}}>\r\n            <div className=\"card-overlay bg-highlight opacity-95\"></div>\r\n            <div className=\"card-overlay dark-mode-tint\"></div>\r\n            <div className=\"card-bg preload-img\" data-src=\"images/pictures/20s.jpg\" \r\n              style={{\"backgroundImage\": \"url('images/pictures/20s.jpg')\"}}></div>\r\n          </div>\r\n          <div className=\"card card-style mb-3\">\r\n            <div className=\"content\">\r\n              <Categories \r\n                categories={categories} \r\n                getJobs={this.props.getJobs} \r\n                filterCategories={filterCategories}\r\n                toggleFilterCategories={this.props.toggleFilterCategories}\r\n                clickCategory={this.clickCategory}\r\n              />\r\n              {categories && isub && isub.categories.length > 0 &&\r\n                <div>\r\n                  <p className='my-2 mr-1 ml-3 font-11 text-wrap font-italic' style={{\"lineHeight\": \"95%\"}}>\r\n                    Вы подписаны на {isub.categories.map((cat, idx) =>\r\n                      cat.ru_name + ', '\r\n                    )}\r\n                  </p>\r\n                  <button className='btn btn-m mb-1 ml-1 rounded-xl text-uppercase font-900\r\n                      shadow-s bg-red2-light float-right' onClick={this.clickUnsubscribe}>\r\n                        Отписаться\r\n                  </button>\r\n                </div>\r\n              }\r\n              {filterCategories.length > 0 \r\n                ? <button className='btn btn-m mb-1 ml-1 rounded-xl text-uppercase font-900\r\n                    shadow-s bg-blue1-dark float-left' onClick={this.clickSubscribe}>\r\n                    Подписаться ({filterCategories.length})\r\n                  </button>\r\n                : isub && isub.categories < 1 && \r\n                  <button className='btn btn-m mb-1 ml-1 rounded-xl text-uppercase font-900\r\n                    shadow-s bg-blue1-dark float-left' onClick={this.clickSubscribeAll}>\r\n                    Подписаться на все категории\r\n                  </button>\r\n              }\r\n            </div>\r\n          </div>\r\n          {listFetching && <p>Loading...</p>}\r\n          {jobs.length > 0 && jobs.map(job =>\r\n            <JobBlock job={job} key={job.id}/>\r\n            )}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.notifications,\r\n  state: state,\r\n  filterCategories: state.isubs.filterCategories\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCategories: query => dispatch(JobsActions.getCategoriesRequest(query)),\r\n  getJobs: query => dispatch(JobsActions.getJobsRequest(query)),\r\n\r\n  toggleFilterCategories: catId => dispatch(IsubsActions.toggleFilterCategories(catId)),\r\n  createOrChangeIsub: catId => dispatch(IsubsActions.createOrChangeIsubRequest(catId)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import React, { Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Checkbox from '@material-ui/core/Checkbox'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\n\r\n\r\n// actions\r\n\r\nconst renderFromHelper = ({ touched, error }) => {\r\n  if (!(touched && error)) {\r\n    return\r\n  } else {\r\n    return <FormHelperText>{touched && error}</FormHelperText>\r\n  }\r\n}\r\n\r\nconst renderTextField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  multiline,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n  <TextField\r\n    label={label}\r\n    placeholder={placeholder}\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n    }}\r\n  />\r\n)\r\n\r\nconst renderSelectField = ({\r\n  input,\r\n  label,\r\n  formClass,\r\n  labelClass,\r\n  meta: { touched, error },\r\n  children,\r\n  ...custom\r\n}) => (\r\n  <FormControl error={touched && error} className={formClass}>\r\n    <InputLabel className={labelClass}>{label}</InputLabel>\r\n    <Select\r\n      native\r\n      {...input}\r\n      {...custom}\r\n    >\r\n      {children}\r\n    </Select>\r\n    {renderFromHelper({ touched, error })}\r\n  </FormControl>\r\n)\r\n\r\nconst renderDateTimeField = ({\r\n  label,\r\n  placeholder,\r\n  input,\r\n  meta: { touched, invalid, error },\r\n  labelClass,\r\n  ...custom\r\n}) => (\r\n\r\n  <TextField\r\n    label={label}\r\n    type=\"date\"\r\n    error={touched && invalid}\r\n    helperText={touched && error}\r\n    {...input}\r\n    {...custom}\r\n    InputLabelProps={{\r\n      className: labelClass,\r\n      shrink: true \r\n    }}\r\n  />\r\n)\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  placeholder,\r\n  type,\r\n  required,\r\n  meta: { touched, error, warning }\r\n}) => (\r\n  <div className=\"input-style input-style-2\">\r\n    {label && <span className=\"color-highlight\">{label} </span>}\r\n    {required && <em>*</em>}\r\n    <input {...input} placeholder={placeholder} type={type}/>\r\n    {touched &&\r\n      ((error && <span>{error}</span>) ||\r\n        (warning && <span>{warning}</span>))}\r\n  </div>\r\n)\r\n\r\nfunction JobForm2 (props) {\r\n  let { handleSubmit, pristine, reset, submitting, categories, job, jobDate } = props\r\n  return (\r\n    <div>\r\n        <Field\r\n          component={renderTextField}\r\n          name=\"title\"\r\n          // type=\"text\"\r\n          // placeholder='Что нужно сделать?'\r\n          label='Что нужно сделать?'\r\n          // required={true}\r\n          className='input-group my-2'\r\n          labelClass='font-12'\r\n        />\r\n\r\n        <Field \r\n          name=\"category\" \r\n          component={renderSelectField}\r\n          labelClass='font-12 '\r\n          formClass='input-group my-2'\r\n          label='Выберите категорию работ'\r\n          required={true}>\r\n            {categories && categories.length > 0 && categories.map(category => \r\n              <option className='font-12' value={category.id} key={category.id}>{category.ru_name}</option>\r\n              )}\r\n        </Field>\r\n          \r\n        <Field name=\"description\" component=\"textarea\" className=\"form-control font-12 my-2\"\r\n          style={{\"height\": \"150px\"}} label='Укажите объем и виды работ'\r\n          placeholder='Какую работу нужно сделать? \r\n          - Напишите список работ.\r\n          - Укажите объем работы в квадратных метрах, штуках или в другой подходящей единице измерения.\r\n          - Опишите ваши пожелания и требования, если они есть.\r\n          '\r\n          />\r\n        <FormControl className='input-group my-2'>\r\n          <InputLabel className='font-12'>Когда нужно выполнить работу?</InputLabel>\r\n          <Select onChange={props.setData} name='jobDate' className='input-group font-12'>\r\n            <option value={'any'}>В любое время</option>\r\n            <option value={'period'}>В период</option>\r\n            <option value={'not later'}>Не позднее, чем</option>\r\n          </Select>\r\n        </FormControl>\r\n        {jobDate == 'period' && \r\n          <div>\r\n            <Field\r\n              name=\"start_date\"\r\n              component={renderDateTimeField}\r\n              label=\"C\"\r\n            />\r\n            <Field\r\n              name=\"end_date\"\r\n              component={renderDateTimeField}\r\n              label=\"До\"\r\n            />\r\n          </div>\r\n          }\r\n        {jobDate == 'not later' && \r\n          <Field\r\n            name=\"end_date\"\r\n            component={renderDateTimeField}\r\n          />\r\n        }\r\n        \r\n        <Field\r\n          name=\"budget\"\r\n          component={renderTextField}\r\n          type=\"number\"\r\n          label=\"Бюджет до\"\r\n          className='input-group my-2'\r\n          labelClass='font-12'\r\n        />\r\n\r\n        <Field\r\n          component={renderTextField}\r\n          name=\"address\"\r\n          type=\"text\"\r\n          value={'Улан-Удэ'}\r\n          label='Адрес'\r\n          className='input-group my-2'\r\n          labelClass='font-12'\r\n        />\r\n        \r\n    </div>\r\n  )\r\n}\r\n\r\nexport class JobFirstCreateForm extends Component {\r\n  constructor(props) {\r\n   super(props);\r\n   this.state = {\r\n     jobDate: 'any',\r\n   };\r\n\r\n   this.setData = this.setData.bind(this);   \r\n }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n      })\r\n  }\r\n  \r\n  render () {\r\n    let { handleSubmit, pristine, reset, submitting, user, categories } = this.props\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <Field\r\n            component={renderField}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder={''}\r\n            value={user ? user.nickname : ''}\r\n            defaultValue={user ? user.nickname : ''}\r\n            label='Как к вам обращаться?'\r\n          />\r\n        </div>\r\n        <div>\r\n          <Field\r\n            name=\"phone\"\r\n            component={renderField}\r\n            type=\"number\"\r\n            placeholder=\"79148965232\"\r\n            label=\"Телефон\"\r\n          />\r\n        </div>\r\n        <JobForm2 \r\n          handleSubmit={handleSubmit}\r\n          pristine={pristine}\r\n          reset={reset}\r\n          submitting={submitting}\r\n          categories={categories}\r\n          setData={this.setData}\r\n          job={null}\r\n          jobDate={this.state.jobDate} />\r\n        \r\n        <div>\r\n          <button className='btn btn-primary'\r\n            // type=\"submit\"\r\n            onClick={handleSubmit}\r\n\r\n            disabled={pristine || submitting}>\r\n            Создать\r\n          </button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nJobFirstCreateForm = reduxForm({\r\n  form: 'jobFirstCreate' // a unique identifier for this form\r\n})(JobFirstCreateForm)\r\n\r\n\r\nexport class JobCreateForm extends Component {\r\n  constructor(props) {\r\n   super(props);\r\n   this.state = {\r\n     jobDate: 'any',\r\n   };\r\n\r\n   this.setData = this.setData.bind(this);   \r\n }\r\n\r\n componentDidMount() {\r\n  const { start_date, end_date } = this.props.initialValues\r\n  if (start_date) {\r\n    this.setState({...this.state, jobDate : 'period'})\r\n  }\r\n  if (end_date && !start_date){\r\n    this.setState({...this.state, jobDate : 'not later'})\r\n  }\r\n}\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n      })\r\n  }\r\n  \r\n  render () {\r\n    let { handleSubmit, pristine, reset, submitting, categories, job } = this.props\r\n    return (\r\n      <div>\r\n        <JobForm2 \r\n          handleSubmit={handleSubmit}\r\n          pristine={pristine}\r\n          reset={reset}\r\n          submitting={submitting}\r\n          categories={categories}\r\n          setData={this.setData}\r\n          job={job}\r\n          jobDate={this.state.jobDate} />\r\n        <div>\r\n          <button className='btn btn-m mb-1 rounded-s text-uppercase font-900 shadow-s\r\n              bg-blue2-light text-wrap'\r\n            onClick={handleSubmit}\r\n\r\n            disabled={pristine || submitting}>\r\n            Создать\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nJobCreateForm = reduxForm({\r\n  form: 'jobCreate', // a unique identifier for this form\r\n})(JobCreateForm)\r\n\r\n\r\nexport class JobUpdateForm extends Component {\r\n  constructor(props) {\r\n   super(props);\r\n   this.state = {\r\n     jobDate: 'any',\r\n   };\r\n\r\n   this.setData = this.setData.bind(this);   \r\n }\r\n\r\n componentDidMount() {\r\n  const { start_date, end_date } = this.props.initialValues\r\n  if (start_date) {\r\n    this.setState({...this.state, jobDate : 'period'})\r\n  }\r\n  if (end_date && !start_date){\r\n    this.setState({...this.state, jobDate : 'not later'})\r\n  }\r\n}\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n      })\r\n  }\r\n  \r\n  render () {\r\n    let { handleSubmit, pristine, reset, submitting, categories, job } = this.props\r\n    return (\r\n      <div>\r\n        <JobForm2 \r\n          handleSubmit={handleSubmit}\r\n          pristine={pristine}\r\n          reset={reset}\r\n          submitting={submitting}\r\n          categories={categories}\r\n          setData={this.setData}\r\n          job={job}\r\n          jobDate={this.state.jobDate} />\r\n        {/* <div> */}\r\n        <button className='btn btn-m mb-1 rounded-s text-uppercase font-900 shadow-s\r\n            bg-blue2-light text-wrap'\r\n          onClick={handleSubmit}\r\n          disabled={pristine || submitting}>\r\n          Сохранить\r\n        </button>\r\n        <button className='btn btn-m mb-1 rounded-s text-uppercase font-900 shadow-s\r\n            bg-blue2-light text-wrap float-right'\r\n          onClick={this.props.clickJobEdit}\r\n          data-id={null}\r\n        >\r\n          назад\r\n        </button>\r\n        <div className=\"clearfix\"></div>\r\n        {/* </div> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nJobUpdateForm = reduxForm({\r\n  form: 'jobUpdate', // a unique identifier for this form\r\n})(JobUpdateForm)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { JobFirstCreateForm } from '../components/JobForms';\r\n\r\n// actions\r\nimport JobsActions from '../redux/redux-sauce/jobs';\r\n\r\n\r\nclass JobFirstCreateShop extends Component {\r\n  constructor(props) {\r\n    super(props);  \r\n    this.state = {\r\n    }\r\n\r\n  this.submitCreateShop = this.submitCreateShop.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getCategories()\r\n  }\r\n\r\n  submitCreateShop(e){\r\n    e.preventDefault()\r\n    this.props.createFirstJob(this.props.state.form.jobFirstCreate.values)\r\n    this.props.history.push(\"/zakazchik/account/\")\r\n  }\r\n\r\n  render() {\r\n    let { user } = this.props\r\n    const { categories } = this.props.state.jobs\r\n    return (\r\n      user && user.zakazchik ?\r\n      <Redirect\r\n            to={{pathname: \"/zakazchik/account/\", }}\r\n          />\r\n      :\r\n      <div className='container-fluid shop-create'>\r\n        <h4>\r\n          Создание работы. Слизано с ремонтника.\r\n        </h4>\r\n        <JobFirstCreateForm shopName={''} shopPhone={''} shopInfo={''} handleSubmit={this.submitCreateShop}\r\n          user={user} categories={categories}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  routing: state.routing,\r\n  user: state.auth.user\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createFirstJob: id => dispatch(JobsActions.createFirstJobRequest(id)),\r\n  getCategories: id => dispatch(JobsActions.getCategoriesRequest(id)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(JobFirstCreateShop);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport Main from '../containers/Main';\r\n\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nclass ViberAuthenticationComponent extends Component {\r\n    componentDidMount() {\r\n      const { token } = this.props.match.params\r\n      const { user } = this.props\r\n      \r\n      if (!user) {\r\n        this.props.checkToken(token);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      let access = false\r\n      if (this.props.isLoggedIn === true) access = true\r\n      return (\r\n          <div>\r\n              {access\r\n                  ? <Redirect\r\n                    to={{\r\n                      pathname: \"/\",\r\n                      state: { from: 'viber login' }\r\n                    }}\r\n                  />\r\n                  : 'Не авторизован'\r\n              }\r\n          </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n    user: state.auth.user,\r\n    state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViberAuthenticationComponent);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// actions\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction ModalAuth (props){\r\n  return (\r\n    <div className=\"modal fade\" id=\"authModal\" tabIndex=\"-1\" role=\"dialog\" \r\n      aria-labelledby=\"authModalLabel\" aria-hidden=\"true\">\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"authModalLabel\">Войти с помощью</h5>\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <a href='viber://pa?chatURI=dm-eda&context=Chto_za_CONTEXT?&text=войти'>Войти через вайбер</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { user } = this.props.auth\r\n    console.log('user', user)\r\n    const token = localStorage.getItem('token');\r\n    if (!user && token) {\r\n      // const token = localStorage.getItem('token');\r\n      this.props.checkToken(token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, user } = this.props.auth\r\n    console.log(this.props.state)\r\n    return (\r\n      <div className='header header-fixed header-logo-left'>\r\n        <Link className='header-title font-20' to='/'>СтройСервис</Link>\r\n        {isLoggedIn ? \r\n          user.zakazchik ?\r\n\r\n              <Link to='/zakazchik/account/'  \r\n                className=\"font-16 float-right mr-3 mt-2 pt-1\">\r\n                  Мои объявления\r\n              </Link>\r\n            :\r\n              <Link to='/zakazchik/create_first/' \r\n                className=\"font-14 mr-3 mt-2 pt-1 float-right\">Создать обьявление</Link>\r\n              \r\n              // <button className='btn btn-m mb-1 ml-1 rounded-xl text-uppercase font-900\r\n              //         shadow-s bg-blue1-dark' onClick={this.props.logout}>Выйти</button>\r\n          : user &&\r\n          <div>\r\n            <button className='btn btn-m mb-1 ml-1 rounded-xl text-uppercase font-900\r\n                     shadow-s bg-blue1-dark' data-toggle=\"modal\" data-target=\"#authModal\">Создать обьявление</button>\r\n            <button className='btn btn-m mb-1 ml-1 rounded-xl text-uppercase font-900\r\n                     shadow-s bg-blue1-dark' data-toggle=\"modal\" data-target=\"#authModal\">Войти</button>\r\n          </div>\r\n        }\r\n        {/* <ModalAuth/> */}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  state: state,\r\n\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  logout: () => dispatch(AuthActions.logoutRequest()),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","import React, { Component, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { JobCreateForm, JobUpdateForm } from '../components/JobForms';\r\n\r\n// actions\r\nimport JobsActions from '../redux/redux-sauce/jobs';\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction JobEditable (props) {\r\n  const { job, jobEditId, categories } = props\r\n  let category = null\r\n  Object.keys(categories).forEach(key => {\r\n    if (categories[key] == job.category)\r\n      category = key\r\n  })\r\n  let edit = false\r\n  if (job.id == jobEditId) edit = true\r\n\r\n  return (\r\n    <div>\r\n      {edit ?\r\n        <div className=\"card card-style mb-3 mx-0\">\r\n          <div className=\"content\">\r\n            <JobUpdateForm \r\n              categories={categories}\r\n              handleSubmit={props.clickEditDone}\r\n              job={job}\r\n              initialValues={{\r\n                id: job.id,\r\n                title: job.title, category: category, description: job.description,\r\n                start_date: job.start_date, end_date: job.end_date, budget: job.budget,\r\n                address: job.address\r\n              }}\r\n              clickJobEdit={props.clickJobEdit}\r\n              />\r\n            </div>\r\n        </div>\r\n        :\r\n        <div className='card card-style my-2 mx-0 pb-3'>\r\n          <div className=\"content text-left\">\r\n            <h4 className='font-16 font-500 float-left'>{job.title}</h4>\r\n            <h4 className='font-18 float-right'>{job.budget}</h4>\r\n            <div className=\"clearfix\"></div>\r\n            <p className='text-left float-left mb-0 font-12 font-500'>{job.zakazchik}</p>\r\n            <p className='text-left float-right mb-0 font-11 font-500'>{job.category}</p>\r\n            <div className=\"clearfix\"></div>\r\n            <p className=\"text-left mb-0\">\r\n              {job.description}\r\n            </p>\r\n            <p className='text-left float-left mb-0'>{job.address}</p>\r\n            {job.start_date ? \r\n                <p className='text-left float-right mb-0'>c {job.start_date} до {job.end_date}</p>\r\n                :\r\n                job.end_date ?\r\n                  <p className='text-left float-right mb-0'>До {job.end_date}</p>\r\n                  :\r\n                  <p className='text-left float-right mb-0'>В любое время</p>\r\n              }\r\n            <div className=\"clearfix\"></div>\r\n            <p className='text-left font-10 mb-1'>{job.created_ago}</p>\r\n            <button className='btn btn-m mb-1 rounded-s text-uppercase font-900 shadow-s\r\n              bg-blue2-light text-wrap' data-id={job.id} onClick={props.clickJobEdit}>\r\n                Изменить\r\n            </button>\r\n            <button className='btn btn-m mb-1 rounded-s text-uppercase font-900 shadow-s\r\n              bg-red2-light text-wrap float-right' data-id={job.id} onClick={props.clickDeactivate}>\r\n                Удалить\r\n            </button>\r\n            <div className=\"clearfix\"></div>\r\n            <div className=''>\r\n                {job.images.length > 0 && job.images.map(image =>\r\n                  <div className='rounded-m img-fluid mx-2 my-2 float-left'\r\n                    key={image.id} style={{\"height\": \"75px\"}}\r\n                    >\r\n                      <img src={'https://svoyaeda.su' + image.catalog_image} style={{\"height\": \"75px\"}}/>\r\n                      <span className='badge badge-primary' \r\n                        onClick={() => props.deleteJobImage({image: image.id, id: job.id})}>\r\n                        X\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  <div className=\"clearfix\"></div>\r\n            </div>\r\n            <div className=\"file-data\">\r\n              <input className='upload-file bg-highlight shadow-s rounded-s bg-blue2-light'\r\n                placeholder='Добавить фото' type='file' onChange={props.addJobImage} data-job-id={job.id} />\r\n              <p className=\"upload-file-text color-white\">Добавить фото</p>\r\n              {/* <button type='submit'> */}\r\n\r\n            </div>\r\n\r\n            {/* </div> */}\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nclass JobsEditable extends Component {\r\n  constructor(props) {\r\n    super(props);  \r\n    this.state = {\r\n      jobsEditList: [],\r\n      jobEditId: null,\r\n      needToRefresh: false\r\n    }\r\n\r\n  this.clickJobEdit = this.clickJobEdit.bind(this);\r\n  this.clickEditDone = this.clickEditDone.bind(this);\r\n  this.clickDeactivate = this.clickDeactivate.bind(this);\r\n  this.clickCreateNew = this.clickCreateNew.bind(this);\r\n  this.addJobImage = this.addJobImage.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  clickJobEdit (e) {\r\n    const { id } = e.target.dataset    \r\n    this.setState({...this.state, \r\n      jobEditId: id\r\n    })\r\n  }\r\n\r\n  clickEditDone () {\r\n    const { values } = this.props.form.jobUpdate\r\n    this.props.partialUpdateJob(values)\r\n    this.setState({...this.state, \r\n      jobEditId: null,\r\n      needToRefresh: true\r\n    })\r\n  }\r\n\r\n  clickDeactivate (e) {\r\n    const { id } = e.target.dataset  \r\n    this.props.activateDeactivateJob({id: id, active: false})\r\n    this.setState({...this.state, \r\n      jobEditId: null,\r\n      needToRefresh: true\r\n    })\r\n  }\r\n\r\n  clickCreateNew() {\r\n    const { values } = this.props.form.jobCreate\r\n    this.props.createJob(values)\r\n    this.setState({...this.state, \r\n      jobEditId: null,\r\n      needToRefresh: true\r\n    })\r\n  }\r\n\r\n  addJobImage(e) {\r\n    console.log('addJobImage')\r\n    this.props.addJobImage({original: e.target.files[0], id: e.target.dataset.jobId})\r\n  }\r\n\r\n  refreshSowsList () {\r\n    if (!this.props.eventFetching && this.state.needToRefresh){\r\n      setTimeout(() => {\r\n        this.setState({...this.state, needToRefresh: false})\r\n        this.props.getJobs({zakazchik: this.props.user.id})\r\n      }, 10)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.refreshSowsList()\r\n    const { jobs, user, categories } = this.props\r\n    const { jobEditId } = this.state\r\n    return (\r\n      <div className=''>\r\n        {jobs.length > 0 && jobs.map(job => \r\n          <JobEditable \r\n            job={job}\r\n            jobEditId={jobEditId}\r\n            clickJobEdit={this.clickJobEdit} \r\n            clickEditDone={this.clickEditDone}\r\n            clickDeactivate={this.clickDeactivate}\r\n            categories={categories}\r\n            key={job.id}\r\n            addJobImage={this.addJobImage}\r\n            deleteJobImage={this.props.deleteJobImage}\r\n          />\r\n        )}\r\n        <div className=\"card card-style mb-3 mx-0\">\r\n          {jobs.length < 2 && user ? \r\n              <div className=\"content\">\r\n                <h3 className='font-18 font-500 text-center'>Создать работу</h3>\r\n                <JobCreateForm \r\n                    categories={categories}\r\n                    handleSubmit={this.clickCreateNew}\r\n                    initialValues={{\r\n                      zakazchik: user ? user.id : null, start_date: null, end_date: null, address: 'Улан-Удэ',\r\n                    }}\r\n                  />\r\n              </div>\r\n            :\r\n            <p className='font-18 font-500 text-left'>\r\n              У вас больше 2х активных работ.\r\n            </p>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass ZakazchikAcc extends Component {\r\n  constructor(props) {\r\n    super(props);  \r\n    this.state = {\r\n    }\r\n\r\n  this.submitCreateShop = this.submitCreateShop.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user_id = localStorage.getItem('user_id');\r\n    this.props.getJobs({zakazchik: user_id})\r\n  }\r\n\r\n  submitCreateShop(e){\r\n    e.preventDefault()\r\n    this.props.createFirstJob(this.props.state.form.jobCreate.values)\r\n  }\r\n\r\n  render() {\r\n    let { user } = this.props\r\n    const { categories, jobs } = this.props.state.jobs\r\n    const { listFetching } = this.props.state.jobs\r\n    console.log(jobs)\r\n    return (\r\n      <div className='container-fluid shop-create'>\r\n        <h4>\r\n          Кабинет заказчика\r\n        </h4>\r\n        {listFetching ?\r\n          <p>Loading</p>\r\n          :\r\n          <JobsEditable \r\n            user={user} \r\n            form={this.props.form}\r\n            categories={categories}\r\n            eventFetching={this.props.state.jobs.eventFetching}\r\n            jobs={jobs}\r\n            getJobs={this.props.getJobs}\r\n            partialUpdateJob={this.props.partialUpdateJob}\r\n            activateDeactivateJob={this.props.activateDeactivateJob}\r\n            createJob={this.props.createJob}\r\n            addJobImage={this.props.addJobImage}\r\n            deleteJobImage={this.props.deleteJobImage}\r\n            />\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  routing: state.routing,\r\n  user: state.auth.user,\r\n  jobs: state.jobs.jobs,\r\n  form: state.form\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createFirstJob: id => dispatch(JobsActions.createFirstJobRequest(id)),\r\n  partialUpdateJob: id => dispatch(JobsActions.partialUpdateJobRequest(id)),\r\n  activateDeactivateJob: id => dispatch(JobsActions.activateDeactivateJobRequest(id)),\r\n  getJobs: query => dispatch(JobsActions.getJobsRequest(query)),\r\n  createJob: id => dispatch(JobsActions.createJobRequest(id)),\r\n  addJobImage: id => dispatch(JobsActions.addJobImageRequest(id)),\r\n  deleteJobImage: id => dispatch(JobsActions.deleteJobImageRequest(id)),\r\n\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ZakazchikAcc);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toggleArray } from '../components/utils'\r\n\r\n// actions\r\nimport JobsActions from '../redux/redux-sauce/jobs';\r\nimport IsubsActions from '../redux/redux-sauce/isubs';\r\n\r\n\r\nfunction JobBlock (props) {\r\n  const { job } = props\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div className=\"content text-left\">\r\n          <h4 className='font-16 font-500 float-left'>{job.title}</h4>\r\n          <h4 className='font-18 float-right'>{job.budget}</h4>\r\n          <div className=\"clearfix\"></div>\r\n          <p className='text-left float-left mb-0 font-12 font-500'>{job.zakazchik}</p>\r\n          <p className='text-left float-right mb-0 font-11 font-400 font-italic'>{job.category}</p>\r\n          <div className=\"clearfix\"></div>\r\n          <p className=\"text-left mb-0\">\r\n            {job.description}\r\n          </p>\r\n          <p className='text-left float-left mb-0'>{job.address}</p>\r\n          {job.start_date ? \r\n              <p className='text-left float-right mb-0'>c {job.start_date} до {job.end_date}</p>\r\n              :\r\n              job.end_date ?\r\n                <p className='text-left float-right mb-0'>До {job.end_date}</p>\r\n                :\r\n                <p className='text-left float-right mb-0'>В любое время</p>\r\n            }\r\n          <div className=\"clearfix\"></div>\r\n          <p className='text-left float-left font-10'>{job.created_ago}</p>\r\n          {job.images.length > 0 && <p className='text-left float-right font-15'>{job.images.length} фото</p>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nclass JobDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      needToRefresh: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.match)\r\n    // this.props.getJob()\r\n    // if (this.props.match)\r\n    const { id } = this.props.match.params\r\n    console.log(id)\r\n    this.props.getJobDetail(id)\r\n  }\r\n\r\n  render() {\r\n    const { jobDetail, detailFetching } = this.props.state.jobs\r\n\r\n    // console.log(this.props.state)\r\n    return (\r\n        jobDetail \r\n            ? <JobBlock job={jobDetail} />\r\n            : 'Не найдено'\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.notifications,\r\n  state: state,\r\n  filterCategories: state.isubs.filterCategories\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCategories: query => dispatch(JobsActions.getCategoriesRequest(query)),\r\n  getJobDetail: query => dispatch(JobsActions.getJobDetailRequest(query)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(JobDetail);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { browserHistory } from 'react-router';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/store/';\r\n\r\n// Containers\r\nimport Main from './containers/Main'\r\nimport JobFirstCreateShop from './containers/CreateFirstJob'\r\nimport ViberAuthenticationComponent from './containers/ViberLogin'\r\nimport Header from './containers/HeaderContainer'\r\nimport ZakazchikAcc from './containers/ZakazchikAcc'\r\nimport JobDetail from './containers/JobDetail'\r\n\r\n// components\r\n\r\nconst store = configureStore()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      {/* Loader Component */}\r\n      {/* <div id=\"preloader\"><div class=\"spinner-border color-highlight\" role=\"status\"></div></div> */}\r\n      <div className='app' id=\"page\">\r\n        <Header />\r\n        {/* <div id=\"footer-bar\" className=\"footer-bar-5\">\r\n          <Link to=\"/\"><i data-feather=\"heart\" data-feather-line=\"1\" data-feather-size=\"21\" data-feather-color=\"red2-dark\" data-feather-bg=\"red2-fade-light\"></i><span>Features</span></Link>\r\n          <Link to=\"/\"><i data-feather=\"image\" data-feather-line=\"1\" data-feather-size=\"21\" data-feather-color=\"green1-dark\" data-feather-bg=\"green1-fade-light\"></i><span>Media</span></Link>\r\n          <Link to=\"/\" className=\"active-nav\"><i data-feather=\"home\" data-feather-line=\"1\" data-feather-size=\"21\" data-feather-color=\"blue2-dark\" data-feather-bg=\"blue2-fade-light\"></i><span>Home</span></Link>\r\n          <Link to=\"/\"><i data-feather=\"file\" data-feather-line=\"1\" data-feather-size=\"21\" data-feather-color=\"brown1-dark\" data-feather-bg=\"brown1-fade-light\"></i><span>Pages</span></Link>\r\n          <Link to=\"/\"><i data-feather=\"settings\" data-feather-line=\"1\" data-feather-size=\"21\" data-feather-color=\"gray2-dark\" data-feather-bg=\"gray2-fade-light\"></i><span>Settings</span></Link>\r\n        </div> */}\r\n        <div className=\"page-content header-clear\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Main />\r\n            </Route>\r\n            <Route path=\"/zakazchik/create_first/\" component={JobFirstCreateShop} />\r\n            <Route path=\"/zakazchik/account/\" component={ZakazchikAcc} />\r\n            <Route path=\"/dm/login/v/:token\" component={ViberAuthenticationComponent} />\r\n            <Route path=\"/jobs/:id/\" component={JobDetail} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  </Provider>, document.getElementById('root')\r\n);","import { createReducer, createActions } from 'reduxsauce'\r\nimport Immutable from 'seamless-immutable'\r\n\r\nimport { toggleArray, lodashToggle } from '../../components/utils';\r\n\r\n\r\n/* ------------- Types and Action Creators ------------- */\r\nconst { Types, Creators } = createActions({\r\n    createOrChangeIsubRequest: ['payload'],\r\n    createOrChangeIsubFail: ['payload'],\r\n    createOrChangeIsubSuccess: ['payload'],\r\n\r\n    toggleFilterCategories: ['catId'],\r\n})\r\n\r\nexport const IsubsTypes = Types\r\nexport default Creators\r\n\r\n\r\n/* ------------- Initial State ------------- */\r\nexport const INITIAL_STATE = Immutable({\r\n    fetching: false,\r\n    error: null,\r\n    isub: null,\r\n    categories: [],\r\n    filterCategories: [],\r\n    message: '',\r\n})\r\n\r\n/* ------------- Selectors ------------- */\r\nexport const IsubsSelectors = {\r\n    createOrChangeIsub: state => state.isubs.isub,\r\n}\r\n\r\n/* ------------- Reducers ------------- */\r\n// create first job\r\nexport const createOrChangeIsubRequest = (state, { payload }) => {\r\n    return state.merge({ fetching: true, message: '' })\r\n}\r\n\r\nexport const createOrChangeIsubSuccess = (state, { payload }) => {\r\n    return state.merge({ fetching: false, error: null, message: payload.message, isub: payload.isub,\r\n        categories: payload.isub && payload.isub.categories })\r\n}\r\n\r\nexport const createOrChangeIsubFail = (state, { payload }) => {\r\n    return state.merge({ fetching: false, error: payload, message: '', isub: null, categories: null })\r\n}\r\n\r\nexport const toggleFilterCategories = (state, { catId }) => {\r\n    let { filterCategories } = state\r\n    filterCategories = lodashToggle(filterCategories, parseInt(catId))\r\n    return state.merge({ filterCategories: filterCategories })\r\n}\r\n\r\n/* ------------- Hookup Reducers To Types ------------- */\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [Types.CREATE_OR_CHANGE_ISUB_REQUEST]: createOrChangeIsubRequest,\r\n    [Types.CREATE_OR_CHANGE_ISUB_SUCCESS]: createOrChangeIsubSuccess,\r\n    [Types.CREATE_OR_CHANGE_ISUB_FAIL]: createOrChangeIsubFail,\r\n\r\n    [Types.TOGGLE_FILTER_CATEGORIES]: toggleFilterCategories,\r\n})\r\n","import _ from 'lodash';\r\n\r\nexport const toggleArray = (arr: Array<String>, string: string) => {\r\n    if (arr.indexOf(string) === -1) {\r\n      return [...arr, string]\r\n    } else {\r\n      return arr.filter(item => item !== string)\r\n    }\r\n  }\r\n\r\nexport const lodashToggle = (array, item) => _.xor(array, [item])\r\n\r\nexport const toggleArrayLocations = (arr: Array<Object>, location: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (_.isEqual(arr[i], location)){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, location]\r\n  }\r\n}\r\n\r\nexport const addItemToArray = (arr: Array<String>, string: string) => {\r\n    return [...arr, string]\r\n  }\r\n\r\nexport const removeItemFromArray = (arr: Array<String>, string: string) => {\r\n    return arr.filter(item => item !== string)\r\n}\r\n\r\nexport const uniq = a => [...new Set(a)]\r\n\r\n\r\nexport const convertSowsByTours2 = (sowsByToursElemList) => {\r\n  let outputDict = {};\r\n  sowsByToursElemList.map((listElem) => {\r\n    let columns = {};\r\n    outputDict[listElem['tour']['id']] = columns;\r\n    columns['count'] = listElem['count'];\r\n    columns['checked'] = false;\r\n    columns['rows'] = {};\r\n    listElem['sows'].map(sowElem => {\r\n      columns['rows'][sowElem['farm_id']] = {}\r\n      columns['rows'][sowElem['farm_id']]['active'] = false\r\n      columns['rows'][sowElem['farm_id']]['id'] = sowElem['id']\r\n      columns['rows'][sowElem['farm_id']]['status'] = sowElem['status']\r\n    });\r\n  });\r\n  return outputDict\r\n}\r\n\r\nexport const convertSowsByTours = (sowsByToursElemList) => {\r\n  let outputDict = {};\r\n  sowsByToursElemList.map((listElem) => {\r\n    let columns = {};\r\n    outputDict[listElem['title']] = columns;\r\n    columns['count'] = listElem['count'];\r\n    columns['checked'] = false;\r\n    columns['rows'] = {};\r\n    listElem['sows'].map(sowElem => {\r\n      columns['rows'][sowElem['id']] = {}\r\n      columns['rows'][sowElem['id']]['active'] = false\r\n      columns['rows'][sowElem['id']]['id'] = sowElem['id']\r\n      columns['rows'][sowElem['id']]['status'] = sowElem['status']\r\n      columns['rows'][sowElem['id']]['farm_id'] = sowElem['farm_id']\r\n    });\r\n  });\r\n  return outputDict\r\n}\r\n\r\n\r\nexport const getObjectbyId = (list, id) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element['id'] == id)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const getObjectInListbyFieldValue = (list, field, value) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element[field] == value)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\n// doesnt work with immutable *splice\r\nexport const toggleArrayDictById = (arr: Array<Object>, obj: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (arr[i].id === obj.id){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n  \r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, obj]\r\n  }\r\n}","import { createReducer, createActions } from 'reduxsauce'\r\nimport Immutable from 'seamless-immutable'\r\nimport { toggleArrayDictById, getObjectbyId } from '../../components/utils'\r\n\r\n\r\n/* ------------- Types and Action Creators ------------- */\r\nconst { Types, Creators } = createActions({\r\n    getJobsRequest: ['payload'],\r\n    getJobsFail: ['payload'],\r\n    getJobsSuccess: ['payload'],\r\n\r\n    getJobDetailRequest: ['payload'],\r\n    getJobDetailFail: ['error'],\r\n    getJobDetailSuccess: ['payload'],\r\n\r\n    getCategoriesRequest: ['payload'],\r\n    getCategoriesFail: ['payload'],\r\n    getCategoriesSuccess: ['payload'],\r\n\r\n    createFirstJobRequest: ['payload'],\r\n    createFirstJobFail: ['payload'],\r\n    createFirstJobSuccess: ['payload'],\r\n\r\n    partialUpdateJobRequest: ['payload'],\r\n    partialUpdateJobFail: ['payload'],\r\n    partialUpdateJobSuccess: ['payload'],\r\n\r\n    activateDeactivateJobRequest: ['payload'],\r\n    activateDeactivateJobFail: ['payload'],\r\n    activateDeactivateJobSuccess: ['payload'],\r\n\r\n    createJobRequest: ['payload'],\r\n    createJobFail: ['payload'],\r\n    createJobSuccess: ['payload'],\r\n\r\n    addJobImageRequest: ['payload'],\r\n    addJobImageFail: ['payload'],\r\n    addJobImageSuccess: ['payload'],\r\n\r\n    deleteJobImageRequest: ['payload'],\r\n    deleteJobImageFail: ['payload'],\r\n    deleteJobImageSuccess: ['payload'],\r\n})\r\n\r\nexport const JobsTypes = Types\r\nexport default Creators\r\n\r\n\r\n/* ------------- Initial State ------------- */\r\nexport const INITIAL_STATE = Immutable({\r\n    listFetching: false,\r\n    jobs: [],\r\n    categories: [],\r\n    errorList: null,\r\n\r\n    detailFetching: null,\r\n    jobDetail: null,\r\n    errorDetail: null,\r\n\r\n    eventFetching: null,\r\n\r\n    message: '',\r\n})\r\n\r\n\r\n/* ------------- Selectors ------------- */\r\nexport const JobsSelectors = {\r\n    getJobs: state => state.jobs.job_list,\r\n    getCategories: state => state.jobs.categories,\r\n    createJob: state => state.jobs.jobDetail,\r\n}\r\n\r\n\r\n/* ------------- Reducers ------------- */\r\n// Get Jobs\r\nexport const getJobsRequest = (state, { payload }) => {\r\n    return state.merge({ listFetching: true, jobs: [] })\r\n}\r\n\r\nexport const getJobsSuccess = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList: null, jobs: payload.results,\r\n         categories: payload.categories })\r\n}\r\n\r\nexport const getJobsFail = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList: payload, jobs: [] })\r\n}\r\n\r\n// Get one\r\nexport const getJobDetailRequest = (state, { payload }) => {\r\n    return state.merge({ detailFetching: true, })\r\n}\r\n\r\nexport const getJobDetailSuccess = (state, { payload }) => {\r\n    return state.merge({ detailFetching: false, errorDetail: null, jobDetail: payload})\r\n}\r\n\r\nexport const getJobDetailFail = (state, { error }) => {\r\n    return state.merge({ detailFetching: false, errorDetail: error, jobDetail: null })\r\n}\r\n\r\n// Get categories\r\nexport const getCategoriesRequest = (state, { payload }) => {\r\n    return state.merge({ listFetching: true, categories: [] })\r\n}\r\n\r\nexport const getCategoriesSuccess = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList: null, categories: payload })\r\n}\r\n\r\nexport const getCategoriesFail = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList:payload, categories: [] })\r\n}\r\n\r\n// create first job\r\nexport const createFirstJobRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const createFirstJobSuccess = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message })\r\n}\r\n\r\nexport const createFirstJobFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n// partial update job\r\nexport const partialUpdateJobRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const partialUpdateJobSuccess = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message })\r\n}\r\n\r\nexport const partialUpdateJobFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n// activateDeactivate job\r\nexport const activateDeactivateJobRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const activateDeactivateJobSuccess = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message })\r\n}\r\n\r\nexport const activateDeactivateJobFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n// create job\r\nexport const createJobRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const createJobSuccess = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message, \r\n        jobDetail: payload.job })\r\n}\r\n\r\nexport const createJobFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n// add job image\r\nexport const addJobImageRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const addJobImageSuccess = (state, { payload }) => {\r\n    const jobInList = getObjectbyId(state.jobs, payload.job.id)\r\n    const index = state.jobs.indexOf(jobInList)\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message, \r\n        jobs: [...state.jobs.slice(0, index), payload.job, ...state.jobs.slice(index + 1)]\r\n         })\r\n}\r\n\r\nexport const addJobImageFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n// delete job image\r\nexport const deleteJobImageRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const deleteJobImageSuccess = (state, { payload }) => {\r\n    const jobInList = getObjectbyId(state.jobs, payload.job.id)\r\n    const index = state.jobs.indexOf(jobInList)\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message,\r\n        jobs: [...state.jobs.slice(0, index), payload.job, ...state.jobs.slice(index + 1)]\r\n     })\r\n}\r\n\r\nexport const deleteJobImageFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n/* ------------- Hookup Reducers To Types ------------- */\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [Types.GET_JOBS_REQUEST]: getJobsRequest,\r\n    [Types.GET_JOBS_SUCCESS]: getJobsSuccess,\r\n    [Types.GET_JOBS_FAIL]: getJobsFail,\r\n\r\n    [Types.GET_JOB_DETAIL_REQUEST]: getJobDetailRequest,\r\n    [Types.GET_JOB_DETAIL_SUCCESS]: getJobDetailSuccess,\r\n    [Types.GET_JOB_DETAIL_FAIL]: getJobDetailFail,\r\n\r\n    [Types.GET_CATEGORIES_REQUEST]: getCategoriesRequest,\r\n    [Types.GET_CATEGORIES_SUCCESS]: getCategoriesSuccess,\r\n    [Types.GET_CATEGORIES_FAIL]: getCategoriesFail,\r\n\r\n    [Types.CREATE_FIRST_JOB_REQUEST]: createFirstJobRequest,\r\n    [Types.CREATE_FIRST_JOB_SUCCESS]: createFirstJobSuccess,\r\n    [Types.CREATE_FIRST_JOB_FAIL]: createFirstJobFail,\r\n\r\n    [Types.PARTIAL_UPDATE_JOB_REQUEST]: partialUpdateJobRequest,\r\n    [Types.PARTIAL_UPDATE_JOB_SUCCESS]: partialUpdateJobSuccess,\r\n    [Types.PARTIAL_UPDATE_JOB_FAIL]: partialUpdateJobFail,\r\n\r\n    [Types.ACTIVATE_DEACTIVATE_JOB_REQUEST]: activateDeactivateJobRequest,\r\n    [Types.ACTIVATE_DEACTIVATE_JOB_SUCCESS]: activateDeactivateJobSuccess,\r\n    [Types.ACTIVATE_DEACTIVATE_JOB_FAIL]: activateDeactivateJobFail,\r\n\r\n    [Types.CREATE_JOB_REQUEST]: createJobRequest,\r\n    [Types.CREATE_JOB_SUCCESS]: createJobSuccess,\r\n    [Types.CREATE_JOB_FAIL]: createJobFail,\r\n\r\n    [Types.ADD_JOB_IMAGE_REQUEST]: addJobImageRequest,\r\n    [Types.ADD_JOB_IMAGE_SUCCESS]: addJobImageSuccess,\r\n    [Types.ADD_JOB_IMAGE_FAIL]: addJobImageFail,\r\n\r\n    [Types.DELETE_JOB_IMAGE_REQUEST]: deleteJobImageRequest,\r\n    [Types.DELETE_JOB_IMAGE_SUCCESS]: deleteJobImageSuccess,\r\n    [Types.DELETE_JOB_IMAGE_FAIL]: deleteJobImageFail,\r\n})\r\n"],"sourceRoot":""}