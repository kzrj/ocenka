{"version":3,"sources":["redux/redux-sauce/auth.js","redux/redux-sauce/isubs.js","redux/api/endpoints.js","redux/api/utils.js","redux/api/authApi.js","redux/api/jobsApi.js","redux/api/isubsApi.js","redux/sagas/authSagas.js","redux/sagas/jobsSagas.js","redux/sagas/isubsSagas.js","redux/sagas/index.js","redux/store/index.js","containers/Main.js","components/JobForms.js","containers/CreateFirstJob.js","containers/ViberLogin.js","containers/HeaderContainer.js","containers/ZakazchikAcc.js","index.js","components/utils.js","redux/redux-sauce/jobs.js"],"names":["createActions","loginRequest","loginSuccess","loginFailure","logoutRequest","logoutSuccess","logoutFailure","checkTokenRequest","checkTokenSuccess","checkTokenFail","Types","Creators","AuthTypes","INITIAL_STATE","Immutable","fetching","user","error","isLoggedIn","isLoggingIn","AuthSelectors","getUser","state","data","merge","action","payload","profile","reducer","createReducer","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","CHECK_TOKEN_REQUEST","CHECK_TOKEN_FAIL","CHECK_TOKEN_SUCCESS","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","createOrChangeIsubRequest","createOrChangeIsubFail","createOrChangeIsubSuccess","toggleFilterCategories","IsubsTypes","isub","categories","filterCategories","message","IsubsSelectors","createOrChangeIsub","isubs","catId","lodashToggle","parseInt","CREATE_OR_CHANGE_ISUB_REQUEST","CREATE_OR_CHANGE_ISUB_SUCCESS","CREATE_OR_CHANGE_ISUB_FAIL","TOGGLE_FILTER_CATEGORIES","apiUrl","JWT_AUTH","JWT_CHECK_TOKEN","SIGNUP","GET_JOBS","getJobDetail","id","activateDeactivateJobDetail","CREATE_FIRST_JOB","GET_CATEGORIES","CREATE_OR_CHANGE_ISUB","parseErrorData","response","errorObj","status","statusText","JSON","stringify","property","createUrlParamsFromFilters","filters","params","URLSearchParams","Object","keys","forEach","key","Array","append","map","value","logIn","username","password","axios","post","endpoints","then","Error","token","catch","err","localStorage","setItem","checkToken","logOut","removeItem","getJobs","get","getCategories","getItem","url","method","createFirstJob","name","phone","title","description","budget","address","start_date","end_date","category","formData","FormData","headers","partialUpdateJob","activateDeactivateJob","active","createJob","length","cat","console","log","api","put","AuthActions","resetAuthErrors","call","toggleModal","IsubsActions","JobsActions","getJobsSuccess","getJobsFail","getJobDetailSuccess","getJobDetailFail","getCategoriesSuccess","results","getCategoriesFail","createFirstJobSuccess","createFirstJobFail","partialUpdateJobSuccess","partialUpdateJobFail","activateDeactivateJobSuccess","activateDeactivateJobFail","createJobSuccess","createJobFail","root","authApi","AuthApi","jobsApi","JobsApi","isubsApi","IsubsApi","all","takeEvery","JobsTypes","GET_JOBS_REQUEST","jobsSaga","GET_JOB_DETAIL_REQUEST","GET_CATEGORIES_REQUEST","CREATE_FIRST_JOB_REQUEST","PARTIAL_UPDATE_JOB_REQUEST","ACTIVATE_DEACTIVATE_JOB_REQUEST","CREATE_JOB_REQUEST","isubsSaga","reducers","combineReducers","auth","require","jobs","form","formReducer","JobBlock","props","job","className","class","zakazchik","created_ago","Categories","onClick","clickCategory","data-id","ru_name","Main","needToRefresh","bind","clickSubscribe","clickUnsubscribe","clickSubscribeAll","this","e","target","dataset","setState","toggleArray","listFetching","setTimeout","refreshList","errorList","data-username","nickname","href","data-menu","data-src","data-card-height","style","idx","Component","connect","notifications","dispatch","query","getCategoriesRequest","getJobsRequest","renderField","input","placeholder","label","type","meta","touched","warning","JobForm2","handleSubmit","pristine","reset","submitting","setData","jobDate","Field","component","defaultValue","onChange","JobFirstCreateForm","onSubmit","disabled","reduxForm","JobCreateForm","initialValues","JobUpdateForm","clickJobEdit","JobFirstCreateShop","submitCreateShop","preventDefault","jobFirstCreate","values","history","push","to","pathname","shopName","shopPhone","shopInfo","routing","createFirstJobRequest","ViberAuthenticationComponent","match","access","Header","data-toggle","data-target","logout","JobEditable","jobEditId","edit","clickEditDone","clickDeactivate","JobsEditable","jobsEditList","clickCreateNew","jobUpdate","jobCreate","eventFetching","refreshSowsList","ZakazchikAcc","user_id","partialUpdateJobRequest","activateDeactivateJobRequest","createJobRequest","store","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","rootSaga","configureStore","ReactDOM","render","exact","path","document","getElementById","arr","string","indexOf","filter","item","array","_","xor","getJobDetailRequest","detailFetching","jobDetail","errorDetail","JobsSelectors","job_list","GET_JOBS_SUCCESS","GET_JOBS_FAIL","GET_JOB_DETAIL_SUCCESS","GET_JOB_DETAIL_FAIL","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAIL","CREATE_FIRST_JOB_SUCCESS","CREATE_FIRST_JOB_FAIL","PARTIAL_UPDATE_JOB_SUCCESS","PARTIAL_UPDATE_JOB_FAIL","ACTIVATE_DEACTIVATE_JOB_SUCCESS","ACTIVATE_DEACTIVATE_JOB_FAIL","CREATE_JOB_SUCCESS","CREATE_JOB_FAIL"],"mappings":"wwBAK4BA,wBAAc,CACxCC,aAAc,CAAC,QACfC,aAAc,CAAC,QACfC,aAAc,CAAC,SAEfC,cAAe,KACfC,cAAe,KACfC,cAAe,CAAC,SAEhBC,kBAAmB,CAAC,WACpBC,kBAAmB,CAAC,WACpBC,eAAgB,CAAC,WAXXC,E,EAAAA,MAAOC,E,EAAAA,SAcFC,EAAYF,EACVC,YAIR,IAAME,EAAgBC,IAAU,CACrCC,UAAU,EACVC,KAAM,KACNC,MAAO,GACPC,YAAY,EACZC,aAAa,IAKFC,EAAgB,CAC3BC,QAAS,SAAAC,GAAK,OAAIA,EAAMN,OAMbf,EAAe,SAACqB,EAAD,GAAqB,EAAXC,KACpC,OAAOD,EAAME,MAAM,CAAET,UAAU,EAAMC,KAAM,KAAMG,aAAa,EAAMD,YAAY,KAKrEhB,EAAe,SAACoB,EAAD,GAAsB,IAAZN,EAAW,EAAXA,KACpC,OAAOM,EAAME,MAAM,CAAET,UAAU,EAAOE,MAAO,KAAMD,KAAMA,EAAME,YAAY,EAAMC,aAAa,KAInFhB,EAAe,SAACmB,EAAOG,GAAY,IACtCR,EAAUQ,EAAVR,MACR,OAAOK,EAAME,MAAM,CAAET,UAAU,EAAOE,MAAOA,EAAOD,KAAM,KAAME,YAAY,EAAOC,aAAa,KAKrFf,EAAgB,SAACkB,GAC5B,OAAOA,EAAME,MAAM,CAAET,UAAU,EAAMI,aAAa,KAGvCd,EAAgB,SAACiB,GAC5B,OAAOA,EAAME,MAAM,CAAET,UAAU,EAAOE,MAAO,KAAMD,KAAM,KAAMG,aAAa,EAAOD,YAAY,KAGpFZ,EAAgB,SAACgB,EAAD,GAAuB,IAAbL,EAAY,EAAZA,MACrC,OAAOK,EAAME,MAAM,CAAET,UAAU,EAAOE,MAAOA,EAAOE,aAAa,KAGtDZ,EAAoB,SAACe,EAAD,GAAwB,EAAdI,QACzC,OAAOJ,EAAME,MAAM,CAAET,UAAU,KAGpBP,EAAoB,SAACc,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QACzC,OAAOJ,EAAME,MAAM,CAAET,UAAU,EAAOE,MAAO,KAAMD,KAAMU,EAAQC,QAAST,YAAY,EAAMC,aAAa,KAG9FV,EAAiB,SAACa,EAAD,GAAuB,IAAbL,EAAY,EAAZA,MACtC,OAAOK,EAAME,MAAM,CAAET,UAAU,EAAOE,MAAOA,EAAOD,KAAM,KAAME,YAAY,EAAOC,aAAa,KAKrFS,EAAUC,wBAAchB,GAAD,mBACjCH,EAAMoB,cAAgB7B,GADW,cAEjCS,EAAMqB,cAAgB7B,GAFW,cAGjCQ,EAAMsB,cAAgB7B,GAHW,cAKjCO,EAAMuB,oBAAsB1B,GALK,cAMjCG,EAAMwB,iBAAmBzB,GANQ,cAOjCC,EAAMyB,oBAAsB3B,GAPK,cASjCE,EAAM0B,eAAiBhC,GATU,cAUjCM,EAAM2B,eAAiBhC,GAVU,cAWjCK,EAAM4B,eAAiBhC,GAXU,K,yeC9ERN,wBAAc,CACtCuC,0BAA2B,CAAC,WAC5BC,uBAAwB,CAAC,WACzBC,0BAA2B,CAAC,WAE5BC,uBAAwB,CAAC,WALrBhC,E,EAAAA,MAAOC,E,EAAAA,SAQFgC,EAAajC,EACXC,YAIR,IAAME,EAAgBC,IAAU,CACnCC,UAAU,EACVE,MAAO,KACP2B,KAAM,KACNC,WAAY,GACZC,iBAAkB,GAClBC,QAAS,KAIAC,EAAiB,CAC1BC,mBAAoB,SAAA3B,GAAK,OAAIA,EAAM4B,MAAMN,OAKhCL,EAA4B,SAACjB,EAAD,GAAwB,EAAdI,QAC/C,OAAOJ,EAAME,MAAM,CAAET,UAAU,EAAMgC,QAAS,MAGrCN,EAA4B,SAACnB,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QAC/C,OAAOJ,EAAME,MAAM,CAAET,UAAU,EAAOE,MAAO,KAAM8B,QAASrB,EAAQqB,QAASH,KAAMlB,EAAQkB,KACvFC,WAAYnB,EAAQkB,KAAKC,cAGpBL,EAAyB,SAAClB,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QAC5C,OAAOJ,EAAME,MAAM,CAAET,UAAU,EAAOE,MAAOS,EAASqB,QAAS,GAAIH,KAAM,KAAMC,WAAY,QAGlFH,EAAyB,SAACpB,EAAD,GAAuB,IAAb6B,EAAY,EAAZA,MACtCL,EAAqBxB,EAArBwB,iBAEN,OADAA,EAAmBM,YAAaN,EAAkBO,SAASF,IACpD7B,EAAME,MAAM,CAAEsB,iBAAkBA,KAK9BlB,EAAUC,wBAAchB,GAAD,mBAC/BH,EAAM4C,8BAAgCf,GADP,cAE/B7B,EAAM6C,8BAAgCd,GAFP,cAG/B/B,EAAM8C,2BAA6BhB,GAHJ,cAK/B9B,EAAM+C,yBAA2Bf,GALF,K,wKCtDvBgB,EAAM,UAFA,sBAEA,QAEJ,GACXC,SAAS,GAAD,OAAKD,EAAL,wBACRE,gBAAgB,GAAD,OAAKF,EAAL,0BACfG,OAAO,GAAD,OAAKH,EAAL,WAGNI,SAAS,GAAD,OAAKJ,EAAL,UACRK,aAAc,SAACC,GAAD,gBAAWN,EAAX,iBAA0BM,EAA1B,MACdC,4BAA6B,SAACD,GAAD,gBAAWN,EAAX,iBAA0BM,EAA1B,0BAC7BE,iBAAiB,GAAD,OAAKR,EAAL,uBAGhBS,eAAe,GAAD,OAAKT,EAAL,gBAGdU,sBAAsB,GAAD,OAAKV,EAAL,WCbZW,EAAiB,SAACpD,GAE3B,GAAIA,GAAmC,qBAAnBA,EAAMqD,SAA0B,CAChD,IAAIC,EAAW,CACXC,OAAQvD,EAAMqD,SAASE,OACvBC,WAAYxD,EAAMqD,SAASG,WAC3B1B,QAAS,KACTuB,SAAUrD,EAAMqD,UAEpB,GAAI,YAAarD,EAAMqD,SAAS/C,KAC5BgD,EAASxB,QAAU2B,KAAKC,UAAU1D,EAAMqD,SAAS/C,KAAKwB,aAErD,CACD,IAAIA,EAAU,GACd,IAAK,IAAM6B,KAAY3D,EAAMqD,SAAS/C,KAClCwB,GAAiB,UAAM6B,EAAN,aAAmB3D,EAAMqD,SAAS/C,KAAKqD,GAAvC,MAErBL,EAASxB,QAAUA,EAGvB,OAAOwB,EAGP,MAAO,CACNC,OAAQ,mBACRC,WAAY,6CACZ1B,QAAS,+CAIL8B,EAA6B,SAACC,GACvC,IAAMC,EAAS,IAAIC,gBAcnB,OAZe,MAAXF,GAAiBG,OAAOC,KAAKJ,GAASK,SAAQ,SAAAC,GACrB,OAAjBN,EAAQM,IAAmBN,EAAQM,aAAgBC,OACnDN,EAAOO,OAAOF,EAAKN,EAAQM,IACV,OAAjBN,EAAQM,IAAiBN,EAAQM,aAAgBC,eAC1CN,EAAOK,GACdN,EAAQM,GAAKG,KAAI,SAAAC,GAGb,MAFc,KAAVA,GACAT,EAAOO,OAAOF,EAAKI,GAChB,YAIhBT,GCDI,EA9CA,WAuCb,MAAO,CACLU,MAvCY,SAAClE,GAAuD,IAC5DmE,EAAuBnE,EAAvBmE,SAAUC,EAAapE,EAAboE,SAEjB,OAAOC,IAAMC,KAAKC,EAAUnC,SAAU,CAAE+B,WAAUC,aAChDI,MAAK,SAAAzB,GACJ,GAAIA,EAASE,OAAS,KAAOF,EAASE,QAAU,IAC5C,MAAM,IAAIwB,MAAM1B,GAEpB,MAAO,CAAE2B,MAAO3B,EAAS/C,KAAK0E,MAAOjF,KAAMsD,EAAS/C,KAAKP,SAE1DkF,OAAM,SAAAC,GACL,MAAM,IAAIH,MAAMG,EAAI7B,SAAS/C,KAAK0D,OAAOC,KAAKiB,EAAI7B,SAAS/C,MAAM,IAAI,OAEtEwE,MAAK,SAACzB,GAGH,OADA8B,aAAaC,QAAQ,QAAS/B,EAAS/C,KAAK0E,OACrC3B,EAAStD,SAwBtBsF,WAhBiB,SAAC5E,GAClB,OAAOkE,IAAMC,KAAKC,EAAUlC,gBAAiB,CAAEqC,MAAOvE,IACnDqE,MAAK,SAAAzB,GAGJ,OAFA8B,aAAaC,QAAQ,QAAS/B,EAAS/C,KAAK0E,OAC5CG,aAAaC,QAAQ,UAAW/B,EAAS/C,KAAKI,QAAQqC,IAC/CM,EAAS/C,QAEjB2E,OAAM,SAAAC,GACL,IAAMlF,EAAQ,IAAI+E,MAAMG,GAEpB,MADAlF,EAAMM,KAAO8C,EAAe8B,GACtBlF,MAOdsF,OArBa,WACbH,aAAaI,WAAW,YCmJb,EA1KA,WA+JX,MAAO,CACHC,QAnJY,SAAC3B,GACb,IAAMC,EAASF,EAA2BC,GAC1C,OAAOc,IAAMc,IAAIZ,EAAUhC,SAAU,CAAEiB,WACtCgB,MAAK,SAAAzB,GAAQ,OAAIA,EAAS/C,QAC1B2E,OAAM,SAAAC,GACH,IAAMlF,EAAQ,IAAI+E,MAAMG,GAExB,MADAlF,EAAMM,KAAO8C,EAAe8B,GACtBlF,MA6IV0F,cA/JkB,SAAC7B,GACnB,IAAMC,EAASF,EAA2BC,GAC1C,OAAOc,IAAMc,IAAIZ,EAAU3B,eAAgB,CAAEY,WAC5CgB,MAAK,SAAAzB,GAAQ,OAAIA,EAAS/C,QAC1B2E,OAAM,SAAAC,GACH,IAAMlF,EAAQ,IAAI+E,MAAMG,GAExB,MADAlF,EAAMM,KAAO8C,EAAe8B,GACtBlF,MAyJV8C,aA1IiB,SAAAC,GACHoC,aAAaQ,QAAQ,SAAnC,IACMC,EAAMf,EAAU/B,aAAaC,GAEnC,OAAO4B,IAAM,CACDkB,OAAQ,MACRD,IAAKA,IAGhBd,MAAK,SAAAzB,GACF,OAAOA,EAAS/C,QAEnB2E,OAAM,SAAAC,GACH,IAAMlF,EAAQ,IAAI+E,MAAMG,GAExB,MADAlF,EAAMM,KAAO8C,EAAe8B,GACtBlF,MA4HV8F,eAxHmB,SAAArF,GAAY,IACvBsF,EAAqFtF,EAArFsF,KAAMC,EAA+EvF,EAA/EuF,MAAOC,EAAwExF,EAAxEwF,MAAOC,EAAiEzF,EAAjEyF,YAAaC,EAAoD1F,EAApD0F,OAAQC,EAA4C3F,EAA5C2F,QAASC,EAAmC5F,EAAnC4F,WAAYC,EAAuB7F,EAAvB6F,SAAUC,EAAa9F,EAAb8F,SAC1EvB,EAAQG,aAAaQ,QAAQ,UAAY,GACzCC,EAAMf,EAAU5B,iBAEhBuD,EAAW,IAAIC,SAWrB,OAVAD,EAASnC,OAAO,OAAQ0B,GACxBS,EAASnC,OAAO,QAAS2B,GACzBQ,EAASnC,OAAO,QAAS4B,GACzBO,EAASnC,OAAO,cAAe6B,GAC/BM,EAASnC,OAAO,SAAU8B,GAC1BK,EAASnC,OAAO,UAAW+B,GAC3BI,EAASnC,OAAO,WAAYkC,GAC5BF,GAAcG,EAASnC,OAAO,aAAcgC,GAC5CC,GAAYE,EAASnC,OAAO,WAAYiC,GAEjC3B,IAAM,CACDkB,OAAQ,OACRD,IAAKA,EACLtF,KAAMkG,EACNE,QAAS,CAAE,eAAgB,sBAAuB,cAAgB,OAAhB,OAAwB1B,MAErFF,MAAK,SAAAzB,GACF,OAAOA,EAAS/C,QAEnB2E,OAAM,SAAAC,GACH,IAAMlF,EAAQ,IAAI+E,MAAMG,GAExB,MADAlF,EAAMM,KAAO8C,EAAe8B,GACtBlF,MA6FV2G,iBAzFqB,SAAAlG,GAAY,IACzBsC,EAA4EtC,EAA5EsC,GAAIkD,EAAwExF,EAAxEwF,MAAOC,EAAiEzF,EAAjEyF,YAAaC,EAAoD1F,EAApD0F,OAAQC,EAA4C3F,EAA5C2F,QAASC,EAAmC5F,EAAnC4F,WAAYC,EAAuB7F,EAAvB6F,SAAUC,EAAa9F,EAAb8F,SACjEvB,EAAQG,aAAaQ,QAAQ,UAAY,GACzCC,EAAMf,EAAU/B,aAAaC,GAE7ByD,EAAW,IAAIC,SASrB,OARAR,GAASO,EAASnC,OAAO,QAAS4B,GAClCC,GAAeM,EAASnC,OAAO,cAAe6B,GAC9CC,GAAUK,EAASnC,OAAO,SAAU8B,GACpCC,GAAWI,EAASnC,OAAO,UAAW+B,GACtCG,GAAYC,EAASnC,OAAO,WAAYkC,GACxCF,GAAcG,EAASnC,OAAO,aAAcgC,GAC5CC,GAAYE,EAASnC,OAAO,WAAYiC,GAEjC3B,IAAM,CACDkB,OAAQ,QACRD,IAAKA,EACLtF,KAAMkG,EACNE,QAAS,CAAE,eAAgB,sBAAuB,cAAgB,OAAhB,OAAwB1B,MAErFF,MAAK,SAAAzB,GACF,OAAOA,EAAS/C,QAEnB2E,OAAM,SAAAC,GACH,IAAMlF,EAAQ,IAAI+E,MAAMG,GAExB,MADAlF,EAAMM,KAAO8C,EAAe8B,GACtBlF,MAgEV4G,sBA5D0B,SAAAnG,GAAY,IAC9BsC,EAAetC,EAAfsC,GAAI8D,EAAWpG,EAAXoG,OACN7B,EAAQG,aAAaQ,QAAQ,UAAY,GACzCC,EAAMf,EAAU7B,4BAA4BD,GAE5CyD,EAAW,IAAIC,SAGrB,OAFAD,EAASnC,OAAO,SAAUwC,GAEnBlC,IAAM,CACDkB,OAAQ,OACRD,IAAKA,EACLtF,KAAMkG,EACNE,QAAS,CAAE,eAAgB,sBAAuB,cAAgB,OAAhB,OAAwB1B,MAErFF,MAAK,SAAAzB,GACF,OAAOA,EAAS/C,QAEnB2E,OAAM,SAAAC,GACH,IAAMlF,EAAQ,IAAI+E,MAAMG,GAExB,MADAlF,EAAMM,KAAO8C,EAAe8B,GACtBlF,MAyCV8G,UArCc,SAAArG,GAAY,IAClBwF,EAAwExF,EAAxEwF,MAAOC,EAAiEzF,EAAjEyF,YAAaC,EAAoD1F,EAApD0F,OAAQC,EAA4C3F,EAA5C2F,QAASC,EAAmC5F,EAAnC4F,WAAYC,EAAuB7F,EAAvB6F,SAAUC,EAAa9F,EAAb8F,SAC7DvB,EAAQG,aAAaQ,QAAQ,UAAY,GACzCC,EAAMf,EAAUhC,SAEhB2D,EAAW,IAAIC,SASrB,OARAD,EAASnC,OAAO,QAAS4B,GACzBO,EAASnC,OAAO,cAAe6B,GAC/BM,EAASnC,OAAO,SAAU8B,GAC1BK,EAASnC,OAAO,UAAW+B,GAC3BI,EAASnC,OAAO,WAAYkC,GAC5BF,GAAcG,EAASnC,OAAO,aAAcgC,GAC5CC,GAAYE,EAASnC,OAAO,WAAYiC,GAEjC3B,IAAM,CACDkB,OAAQ,OACRD,IAAKA,EACLtF,KAAMkG,EACNE,QAAS,CAAE,eAAgB,sBAAuB,cAAgB,OAAhB,OAAwB1B,MAErFF,MAAK,SAAAzB,GACF,OAAOA,EAAS/C,QAEnB2E,OAAM,SAAAC,GACH,IAAMlF,EAAQ,IAAI+E,MAAMG,GAExB,MADAlF,EAAMM,KAAO8C,EAAe8B,GACtBlF,QC1HH,EAjCA,WA4BX,MAAO,CACHgC,mBA5BuB,SAAAvB,GAAY,IAC3BmB,EAAenB,EAAfmB,WACFoD,EAAQG,aAAaQ,QAAQ,UAAY,GACzCC,EAAMf,EAAU1B,sBAEhBqD,EAAW,IAAIC,SAMrB,OALA7E,GAAcA,EAAWmF,OAAS,GAAKnF,EAAW0C,KAAI,SAAA0C,GAAG,OACrDR,EAASnC,OAAO,aAAc2C,MAElCC,QAAQC,IAAItF,GAEL+C,IAAM,CACDkB,OAAQ,OACRD,IAAKA,EACLtF,KAAMkG,EACNE,QAAS,CAAE,eAAgB,sBAAuB,cAAgB,OAAhB,OAAwB1B,MAErFF,MAAK,SAAAzB,GACF,OAAOA,EAAS/C,QAEnB2E,OAAM,SAAAC,GACH,IAAMlF,EAAQ,IAAI+E,MAAMG,GAExB,MADAlF,EAAMM,KAAO8C,EAAe8B,GACtBlF,Q,kCCrBAwE,G,WAaAc,G,WAUDD,GAvBV,SAAWb,EAAO2C,EAAK3G,GAAvB,yEAEL,OADQF,EAASE,EAATF,KADH,SAEC8G,YAAIC,UAAYC,mBAFjB,OAIY,OAJZ,kBAIkBC,YAAKJ,EAAI3C,MAAOlE,GAJlC,OAKH,OADI+C,EAJD,gBAKG+D,YAAIC,UAAYpI,aAAaoE,IALhC,OAMH,OANG,UAMG+D,YAAIC,UAAYG,aAAY,IAN/B,gCAQH,OARG,oCAQGJ,YAAIC,UAAYnI,aAAa,KAAE4C,UARlC,sDAaA,SAAWwD,EAAQ6B,EAAK3G,GAAxB,iEAEH,OAFG,kBAEG+G,YAAKJ,EAAI7B,QAFZ,OAGH,OAHG,SAGG8B,YAAIC,UAAYjI,iBAHnB,8BAKH,OALG,mCAKGgI,YAAIC,UAAYhI,cAAc,KAAEyC,UALnC,qDAUA,SAAUuD,EAAW8B,EAAK3G,GAA1B,yEAGY,OAFTC,EAAYD,EAAZC,QADH,kBAGkB8G,YAAKJ,EAAI9B,WAAY5E,GAHvC,OAIH,OADI4C,EAHD,gBAIG+D,YAAIC,UAAY9H,kBAAkB8D,IAJrC,OAKH,OALG,SAKG+D,YAAIK,UAAajG,0BAA0B6B,EAAS3C,UALvD,+BAQH,OARG,oCAQG0G,YAAIC,UAAY7H,eAAe,KAAEsC,UARpC,sD,eC1BU0D,G,WASA1C,G,WASA4C,G,WASAI,G,WASAa,G,WASAC,G,WASAE,GAtDV,SAAUtB,EAAQ2B,EAAK3G,GAAvB,uEAEgB,OAFhB,kBAEsB+G,YAAKJ,EAAI3B,QAAShF,EAAOC,SAF/C,OAGC,OADI4C,EAFL,gBAGO+D,YAAIM,UAAYC,eAAetE,IAHtC,8BAKC,OALD,mCAKO+D,YAAIM,UAAYE,YAAZ,OALX,qDASA,SAAU9E,EAAaqE,EAAK3G,GAA5B,uEAEgB,OAFhB,kBAEsB+G,YAAKJ,EAAIrE,aAActC,EAAOC,SAFpD,OAGC,OADI4C,EAFL,gBAGO+D,YAAIM,UAAYG,oBAAoBxE,IAH3C,8BAKC,OALD,mCAKO+D,YAAIM,UAAYI,iBAAZ,OALX,qDASA,SAAUpC,EAAcyB,EAAK3G,GAA7B,uEAEgB,OAFhB,kBAEsB+G,YAAKJ,EAAIzB,cAAelF,EAAOC,SAFrD,OAGC,OADI4C,EAFL,gBAGO+D,YAAIM,UAAYK,qBAAqB1E,EAAS2E,UAHrD,8BAKC,OALD,mCAKOZ,YAAIM,UAAYO,kBAAZ,OALX,qDASA,SAAUnC,EAAeqB,EAAK3G,GAA9B,uEAEgB,OAFhB,kBAEsB+G,YAAKJ,EAAIrB,eAAgBtF,EAAOC,SAFtD,OAGC,OADI4C,EAFL,gBAGO+D,YAAIM,UAAYQ,sBAAsB7E,IAH7C,8BAKC,OALD,mCAKO+D,YAAIM,UAAYS,mBAAZ,OALX,qDASA,SAAUxB,EAAiBQ,EAAK3G,GAAhC,uEAEgB,OAFhB,kBAEsB+G,YAAKJ,EAAIR,iBAAkBnG,EAAOC,SAFxD,OAGC,OADI4C,EAFL,gBAGO+D,YAAIM,UAAYU,wBAAwB/E,IAH/C,8BAKC,OALD,mCAKO+D,YAAIM,UAAYW,qBAAZ,OALX,qDASA,SAAUzB,EAAsBO,EAAK3G,GAArC,uEAEgB,OAFhB,kBAEsB+G,YAAKJ,EAAIP,sBAAuBpG,EAAOC,SAF7D,OAGC,OADI4C,EAFL,gBAGO+D,YAAIM,UAAYY,6BAA6BjF,IAHpD,8BAKC,OALD,mCAKO+D,YAAIM,UAAYa,0BAAZ,OALX,qDASA,SAAUzB,EAAUK,EAAK3G,GAAzB,uEAEgB,OAFhB,kBAEsB+G,YAAKJ,EAAIL,UAAWtG,EAAOC,SAFjD,OAGC,OADI4C,EAFL,gBAGO+D,YAAIM,UAAYc,iBAAiBnF,IAHxC,8BAKC,OALD,mCAKO+D,YAAIM,UAAYe,cAAZ,OALX,qD,eCtDUzG,GAAV,SAAUA,EAAmBmF,EAAK3G,GAAlC,uEAEgB,OAFhB,kBAEsB+G,YAAKJ,EAAInF,mBAAoBxB,EAAOC,SAF1D,OAGC,OADI4C,EAFL,gBAGO+D,YAAIK,UAAajG,0BAA0B6B,IAHlD,8BAKC,OALD,mCAKO+D,YAAIK,UAAalG,uBAAb,OALX,qD,eCiBkBmH,IAJnBC,EAAUC,IACVC,EAAUC,IACVC,EAAWC,IAEF,SAAUN,KAAV,iEACb,OADa,SACPO,YAAI,CACRC,YAAUvJ,YAAUkB,cAAe2D,EAAOmE,GAC1CO,YAAUvJ,YAAUwB,eAAgBmE,EAAQqD,GAC5CO,YAAUvJ,YAAUqB,oBAAqBqE,EAAYsD,GAErDO,YAAUC,YAAUC,iBAAkBC,EAAkBR,GACxDK,YAAUC,YAAUG,uBAAwBD,EAAuBR,GACnEK,YAAUC,YAAUI,uBAAwBF,EAAwBR,GACpEK,YAAUC,YAAUK,yBAA0BH,EAAyBR,GACvEK,YAAUC,YAAUM,2BAA4BJ,EAA2BR,GAC3EK,YAAUC,YAAUO,gCAAiCL,EAAgCR,GACrFK,YAAUC,YAAUQ,mBAAoBN,EAAoBR,GAE5DK,YAAUxH,aAAWW,8BAA+BuH,EAA8Bb,KAdvE,uC,cCdFc,GAAWC,0BAAgB,CAEtCC,KAAMC,EAAQ,IAAuBrJ,QACrCsJ,KAAMD,EAAQ,GAAuBrJ,QACrCsB,MAAO+H,EAAQ,IAAwBrJ,QAEvCuJ,KAAMC,O,+DCFR,SAASC,GAAUC,GAAQ,IACjBC,EAAQD,EAARC,IACR,OACE,yBAAKC,UAAU,wBACb,yBAAKC,MAAM,qBACP,wBAAID,UAAU,+BAA+BD,EAAIrE,OACjD,wBAAIsE,UAAU,uBAAuBD,EAAInE,QACzC,yBAAKoE,UAAU,aACf,uBAAGA,UAAU,8CAA8CD,EAAIG,WAC/D,uBAAGF,UAAU,+CAA+CD,EAAI/D,UAChE,yBAAKgE,UAAU,aACf,uBAAGA,UAAU,kBACVD,EAAIpE,aAEP,uBAAGqE,UAAU,6BAA6BD,EAAIlE,SAC7CkE,EAAIjE,WACD,uBAAGkE,UAAU,8BAAb,KAA6CD,EAAIjE,WAAjD,iBAAiEiE,EAAIhE,UAErEgE,EAAIhE,SACF,uBAAGiE,UAAU,8BAAb,gBAA8CD,EAAIhE,UAElD,uBAAGiE,UAAU,8BAAb,wEAEN,yBAAKA,UAAU,aACf,uBAAGA,UAAU,qBAAqBD,EAAII,eAOhD,SAASC,GAAYN,GAAO,IAClBzI,EAAeyI,EAAfzI,WAER,OACE,6BACGA,EAAWmF,OAAS,GAAKnF,EAAW0C,KAAI,SAAAiC,GAAQ,OAC7C,4BACEgE,UAAU,yGAGVpG,IAAKoC,EAASxD,GAAI6H,QAASP,EAAMQ,cACjCC,UAASvE,EAASxD,IAEfwD,EAASwE,YAGlB,yBAAKR,UAAU,c,IAKfS,G,oDACJ,WAAYX,GAAQ,IAAD,+BACjB,cAAMA,IACDhK,MAAQ,CACX4K,eAAe,GAEjB,EAAKJ,cAAgB,EAAKA,cAAcK,KAAnB,iBACrB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,iBACtB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,iBACxB,EAAKG,kBAAoB,EAAKA,kBAAkBH,KAAvB,iBARR,E,iEAYjBI,KAAKjB,MAAM7E,Y,oCAGC+F,GAAI,IACRxI,EAAOwI,EAAEC,OAAOC,QAAhB1I,GACRuI,KAAKjB,MAAM5I,uBAAuBsB,GAClCuI,KAAKI,SAAL,6BAAkBJ,KAAKjL,OAAvB,IAA8B4K,eAAe,O,uCAI7CK,KAAKjB,MAAMrI,mBAAmB,CAACJ,WAAY0J,KAAKjB,MAAMxI,qB,0CAItD,IAAID,EAAa,GACjB0J,KAAKjB,MAAMhK,MAAM4J,KAAKrI,WAAW0C,KAAI,SAAA0C,GAAG,OAAIpF,EAAa+J,aAAY/J,EAAYoF,EAAIjE,OACrFuI,KAAKjB,MAAMrI,mBAAmB,CAACJ,WAAYA,M,yCAI3C0J,KAAKjB,MAAMrI,mBAAmB,M,oCAGhB,IAAD,QACRsJ,KAAKjB,MAAMhK,MAAM4J,KAAK2B,cAAgBN,KAAKjL,MAAM4K,eACpDY,YAAW,WACT,EAAKH,SAAL,6BAAkB,EAAKrL,OAAvB,IAA8B4K,eAAe,KAD9B,IAEPpJ,EAAqB,EAAKwI,MAA1BxI,iBACR,EAAKwI,MAAM7E,QAAQ,CAACe,SAAU1E,MAC7B,M,+BAKLyJ,KAAKQ,cADE,MAE+CR,KAAKjB,MAAMhK,MAAM4J,KAA/DA,EAFD,EAECA,KAAMrI,EAFP,EAEOA,WAAYgK,EAFnB,EAEmBA,aAFnB,KAEiCG,UACLT,KAAKjB,MAAMhK,MAAM4B,OAA5CJ,EAHD,EAGCA,iBAAkBF,EAHnB,EAGmBA,KAClB5B,EAASuL,KAAKjB,MAAMhK,MAAM0J,KAA1BhK,KAER,OACI,6BACE,yBAAKwK,UAAU,IACb,yBAAKA,UAAU,+BACb,wBAAIyB,gBAAejM,EAAOA,EAAKkM,SAAW,2EAAgB1B,UAAU,iBAApE,wCAGA,uBAAG2B,KAAK,IAAIC,YAAU,YAAY5B,UAAU,2CAC1C6B,WAAS,2BAEb,yBAAK7B,UAAU,iCAAiC8B,mBAAiB,OAC/D,yBAAK9B,UAAU,yCACf,yBAAKA,UAAU,gCACf,yBAAKA,UAAU,sBAAsB6B,WAAS,6BAEhD,yBAAK7B,UAAU,wBACb,yBAAKA,UAAU,WACb,kBAACI,GAAD,CACE/I,WAAYA,EACZ4D,QAAS8F,KAAKjB,MAAM7E,QACpB3D,iBAAkBA,EAClBJ,uBAAwB6J,KAAKjB,MAAM5I,uBACnCoJ,cAAeS,KAAKT,gBAErBjJ,GAAcD,GAAQA,EAAKC,WAAWmF,OAAS,GAC9C,6BACE,uBAAGwD,UAAU,+CAA+C+B,MAAO,CAAC,cAAe,QAAnF,oFACmB3K,EAAKC,WAAW0C,KAAI,SAAC0C,EAAKuF,GAAN,OACnCvF,EAAI+D,QAAU,SAGlB,4BAAQR,UAAU,8FACqBK,QAASU,KAAKF,kBADrD,iEAMHvJ,EAAiBkF,OAAS,EACvB,4BAAQwD,UAAU,6FACkBK,QAASU,KAAKH,gBADlD,uEAEgBtJ,EAAiBkF,OAFjC,KAIApF,GAAQA,EAAKC,WAAa,GAC1B,4BAAQ2I,UAAU,6FACkBK,QAASU,KAAKD,mBADlD,+JAOPO,GAAgB,yCAChB3B,EAAKlD,OAAS,GAAKkD,EAAK3F,KAAI,SAAAgG,GAAG,OAC9B,kBAACF,GAAD,CAAUE,IAAKA,EAAKnG,IAAKmG,EAAIvH,c,GAxGxByJ,aA8HJC,gBAdS,SAACpM,GAAD,MAAY,CAClCqM,cAAerM,EAAMqM,cACrBrM,MAAOA,EACPwB,iBAAkBxB,EAAM4B,MAAMJ,qBAGL,SAAC8K,GAAD,MAAe,CACxCjH,cAAe,SAAAkH,GAAK,OAAID,EAASjF,UAAYmF,qBAAqBD,KAClEpH,QAAS,SAAAoH,GAAK,OAAID,EAASjF,UAAYoF,eAAeF,KAEtDnL,uBAAwB,SAAAS,GAAK,OAAIyK,EAASlF,UAAahG,uBAAuBS,KAC9EF,mBAAoB,SAAAE,GAAK,OAAIyK,EAASlF,UAAanG,0BAA0BY,QAGhEuK,CAGbzB,I,4BC3LI+B,GAAc,SAAC,GAAD,IAClBC,EADkB,EAClBA,MAEAC,GAHkB,EAElBC,MAFkB,EAGlBD,aACAE,EAJkB,EAIlBA,KAJkB,IAKlBC,KAAQC,EALU,EAKVA,QAASrN,EALC,EAKDA,MAAOsN,EALN,EAKMA,QALN,OAOlB,yBAAK/C,UAAU,4CACb,0BAAMA,UAAU,0BAA0B0C,GAC1C,2CAAWD,EAAX,CAAkBC,YAAaA,EAAaE,KAAMA,KACjDE,IACGrN,GAAS,8BAAOA,IACfsN,GAAW,8BAAOA,MAI3B,SAASC,GAAUlD,GACsEA,EAAjFmD,aAAiFnD,EAAnEoD,SAAmEpD,EAAzDqD,MAAyDrD,EAAlDsD,WADZ,IACwB/L,EAAsCyI,EAAtCzI,WAAYgM,EAA0BvD,EAA1BuD,QAAStD,EAAiBD,EAAjBC,IAAKuD,EAAYxD,EAAZwD,QAC3E,OACE,6BACE,6BACI,kBAACC,GAAA,EAAD,CACEC,UAAWhB,GACXhH,KAAK,QACLoH,KAAK,OACLF,YAAY,mGAGhB,6BACE,yKACA,6BACE,kBAACa,GAAA,EAAD,CAAO/H,KAAK,WAAWgI,UAAU,UAC/B,iCACCnM,GAAcA,EAAWmF,OAAS,GAAKnF,EAAW0C,KAAI,SAAAiC,GAAQ,OAC7D+D,GAAOA,EAAI/D,WAAaA,EAASwE,QACjC,4BAAQiD,aAAczH,EAASxD,GAAIoB,IAAKoC,EAASxD,IAAMwD,EAASwE,SAEhE,4BAAQxG,MAAOgC,EAASxD,GAAIoB,IAAKoC,EAASxD,IAAKwD,EAASwE,eAKhE,6BACE,2KACA,6BACE,kBAAC+C,GAAA,EAAD,CAAO/H,KAAK,cAAcgI,UAAU,WAAWxD,UAAU,6BACvD0C,YAAY,8/BAQlB,6BACE,6LACA,4BAAQgB,SAAUL,EAAS7H,KAAK,WAC9B,4BAAQiI,aAAc,OAAtB,wEACA,4BAAQzJ,MAAO,UAAf,+CACA,4BAAQA,MAAO,aAAf,gFAEU,UAAXsJ,GACC,6BACE,oCACA,kBAACC,GAAA,EAAD,CACE/H,KAAK,aACLgI,UAAU,QACVZ,KAAK,OACLF,YAAY,GACZC,MAAM,MAER,+CACA,kBAACY,GAAA,EAAD,CACE/H,KAAK,WACLgI,UAAU,QACVZ,KAAK,OACLF,YAAY,GACZC,MAAM,kBAIA,aAAXW,GACC,kBAACC,GAAA,EAAD,CACE/H,KAAK,WACLgI,UAAU,QACVZ,KAAK,OACLF,YAAY,MAIlB,6BACE,kBAACa,GAAA,EAAD,CACE/H,KAAK,SACLgI,UAAWhB,GACXI,KAAK,SACLF,YAAY,oDACZC,MAAM,uDAGV,6BACE,kBAACY,GAAA,EAAD,CACEC,UAAWhB,GACXhH,KAAK,UACLoH,KAAK,OACLF,YAAY,iCACZ1I,MAAO,8CACP2I,MAAM,qCAOX,IAAMgB,GAAb,oDACE,WAAY7D,GAAQ,IAAD,+BAClB,cAAMA,IACDhK,MAAQ,CACXwN,QAAS,OAGX,EAAKD,QAAU,EAAKA,QAAQ1C,KAAb,iBANG,EADrB,qDAUWK,GACPD,KAAKI,SAAL,gBACGH,EAAEC,OAAOzF,KAAOwF,EAAEC,OAAOjH,UAZhC,+BAgBa,IAAD,EAC8D+G,KAAKjB,MAArEmD,EADE,EACFA,aAAcC,EADZ,EACYA,SAAUC,EADtB,EACsBA,MAAOC,EAD7B,EAC6BA,WAAY5N,EADzC,EACyCA,KAAM6B,EAD/C,EAC+CA,WACvD,OACE,0BAAMuM,SAAUX,GACd,6BACE,kBAACM,GAAA,EAAD,CACEC,UAAWhB,GACXhH,KAAK,OACLoH,KAAK,OACLF,YAAa,GACb1I,MAAOxE,EAAOA,EAAKkM,SAAW,GAC9B+B,aAAcjO,EAAOA,EAAKkM,SAAW,GACrCiB,MAAM,gHAGV,6BACE,kBAACY,GAAA,EAAD,CACE/H,KAAK,QACLgI,UAAWhB,GACXI,KAAK,SACLF,YAAY,cACZC,MAAM,gDAGV,kBAACK,GAAD,CACEC,aAAcA,EACdC,SAAUA,EACVC,MAAOA,EACPC,WAAYA,EACZ/L,WAAYA,EACZgM,QAAStC,KAAKsC,QACdtD,IAAK,KACLuD,QAASvC,KAAKjL,MAAMwN,UAEtB,6BACE,4BAAQtD,UAAU,kBAEhBK,QAAS4C,EAETY,SAAUX,GAAYE,GAJxB,oDAnDV,GAAwCnB,aAgExC0B,GAAqBG,aAAU,CAC7BnE,KAAM,kBADamE,CAElBH,IAGI,IAAMI,GAAb,oDACE,WAAYjE,GAAQ,IAAD,+BAClB,cAAMA,IACDhK,MAAQ,CACXwN,QAAS,OAGX,EAAKD,QAAU,EAAKA,QAAQ1C,KAAb,iBANG,EADrB,iEAUsB,IAAD,EACcI,KAAKjB,MAAMkE,cAApClI,EADW,EACXA,WAAYC,EADD,EACCA,SAChBD,GACFiF,KAAKI,SAAL,6BAAkBJ,KAAKjL,OAAvB,IAA8BwN,QAAU,YAEtCvH,IAAaD,GACfiF,KAAKI,SAAL,6BAAkBJ,KAAKjL,OAAvB,IAA8BwN,QAAU,iBAhB5C,8BAoBWtC,GACPD,KAAKI,SAAL,gBACGH,EAAEC,OAAOzF,KAAOwF,EAAEC,OAAOjH,UAtBhC,+BA0Ba,IAAD,EAC6D+G,KAAKjB,MAApEmD,EADE,EACFA,aAAcC,EADZ,EACYA,SAAUC,EADtB,EACsBA,MAAOC,EAD7B,EAC6BA,WAAY/L,EADzC,EACyCA,WAAY0I,EADrD,EACqDA,IAC7D,OACE,6BACE,kBAACiD,GAAD,CACEC,aAAcA,EACdC,SAAUA,EACVC,MAAOA,EACPC,WAAYA,EACZ/L,WAAYA,EACZgM,QAAStC,KAAKsC,QACdtD,IAAKA,EACLuD,QAASvC,KAAKjL,MAAMwN,UACtB,6BACE,4BAAQtD,UAAU,kBAChBK,QAAS4C,EAETY,SAAUX,GAAYE,GAHxB,oDAxCV,GAAmCnB,aAoDnC8B,GAAgBD,aAAU,CACxBnE,KAAM,aADQmE,CAEbC,IAGI,IAAME,GAAb,oDACE,WAAYnE,GAAQ,IAAD,+BAClB,cAAMA,IACDhK,MAAQ,CACXwN,QAAS,OAGX,EAAKD,QAAU,EAAKA,QAAQ1C,KAAb,iBANG,EADrB,iEAUsB,IAAD,EACcI,KAAKjB,MAAMkE,cAApClI,EADW,EACXA,WAAYC,EADD,EACCA,SAChBD,GACFiF,KAAKI,SAAL,6BAAkBJ,KAAKjL,OAAvB,IAA8BwN,QAAU,YAEtCvH,IAAaD,GACfiF,KAAKI,SAAL,6BAAkBJ,KAAKjL,OAAvB,IAA8BwN,QAAU,iBAhB5C,8BAoBWtC,GACPD,KAAKI,SAAL,gBACGH,EAAEC,OAAOzF,KAAOwF,EAAEC,OAAOjH,UAtBhC,+BA0Ba,IAAD,EAC6D+G,KAAKjB,MAApEmD,EADE,EACFA,aAAcC,EADZ,EACYA,SAAUC,EADtB,EACsBA,MAAOC,EAD7B,EAC6BA,WAAY/L,EADzC,EACyCA,WAAY0I,EADrD,EACqDA,IAC7D,OACE,6BACE,kBAACiD,GAAD,CACEC,aAAcA,EACdC,SAAUA,EACVC,MAAOA,EACPC,WAAYA,EACZ/L,WAAYA,EACZgM,QAAStC,KAAKsC,QACdtD,IAAKA,EACLuD,QAASvC,KAAKjL,MAAMwN,UACtB,6BACE,4BAAQtD,UAAU,kBAChBK,QAAS4C,EACTY,SAAUX,GAAYE,GAFxB,0DAKA,4BAAQpD,UAAU,kBAChBK,QAASU,KAAKjB,MAAMoE,aACpB3D,UAAS,MAFX,wCA7CV,GAAmC0B,aAyDnCgC,GAAgBH,aAAU,CACxBnE,KAAM,aADQmE,CAEbG,I,ICrSGE,G,oDACJ,WAAYrE,GAAQ,IAAD,+BACjB,cAAMA,IACDhK,MAAQ,GAGf,EAAKsO,iBAAmB,EAAKA,iBAAiBzD,KAAtB,iBALL,E,iEASjBI,KAAKjB,MAAM3E,kB,uCAGI6F,GACfA,EAAEqD,iBACFtD,KAAKjB,MAAMvE,eAAewF,KAAKjB,MAAMhK,MAAM6J,KAAK2E,eAAeC,QAC/DxD,KAAKjB,MAAM0E,QAAQC,KAAK,yB,+BAGhB,IACFjP,EAASuL,KAAKjB,MAAdtK,KACE6B,EAAe0J,KAAKjB,MAAMhK,MAAM4J,KAAhCrI,WACR,OACE7B,GAAQA,EAAK0K,UACb,kBAAC,IAAD,CACMwE,GAAI,CAACC,SAAU,yBAGrB,yBAAK3E,UAAU,+BACb,sOAGA,kBAAC,GAAD,CAAoB4E,SAAU,GAAIC,UAAW,GAAIC,SAAU,GAAI7B,aAAclC,KAAKqD,iBAChF5O,KAAMA,EAAM6B,WAAYA,S,GAjCD4K,aAkDlBC,gBAXS,SAACpM,GAAD,MAAY,CAClCA,MAAOA,EACPiP,QAASjP,EAAMiP,QACfvP,KAAMM,EAAM0J,KAAKhK,SAGQ,SAAC4M,GAAD,MAAe,CACxC7G,eAAgB,SAAA/C,GAAE,OAAI4J,EAASjF,UAAY6H,sBAAsBxM,KACjE2C,cAAe,SAAA3C,GAAE,OAAI4J,EAASjF,UAAYmF,qBAAqB9J,QAGlD0J,CAGbiC,ICvDIc,G,sLACkB,IAEVxK,EAAUsG,KAAKjB,MAAMoF,MAAM3L,OAA3BkB,MACSsG,KAAKjB,MAAdtK,MAENuL,KAAKjB,MAAMhF,WAAWL,K,+BAKxB,IAAI0K,GAAS,EAEb,OAD8B,IAA1BpE,KAAKjB,MAAMpK,aAAqByP,GAAS,GAEzC,6BACKA,EACK,kBAAC,GAAD,MACA,uF,GAjBuBlD,aAmC5BC,gBAXS,SAACpM,GAAD,MAAY,CAChCJ,WAAYI,EAAM0J,KAAK9J,WACvBF,KAAMM,EAAM0J,KAAKhK,KACjBM,MAAOA,MAIgB,SAAAsM,GAAQ,MAAK,CACpCtH,WAAY,SAACL,GAAD,OAAW2H,EAAStF,UAAY/H,kBAAkB0F,QAGnDyH,CAA6C+C,I,ICbtDG,G,oDACJ,WAAYtF,GAAQ,IAAD,+BACjB,cAAMA,IACDhK,MAAQ,GAFI,E,iEAOjB,IAAM2E,EAAQG,aAAaQ,QAAQ,SAClB2F,KAAKjB,MAAMN,KAApBhK,MAENuL,KAAKjB,MAAMhF,WAAWL,K,+BAIhB,IAAD,EACsBsG,KAAKjB,MAAMN,KAAhC9J,EADD,EACCA,WAAYF,EADb,EACaA,KACpB,OACE,yBAAKwK,UAAU,wCACb,kBAAC,IAAD,CAAMA,UAAU,uBAAuB0E,GAAG,KAA1C,sEACChP,EACCF,EAAK0K,UAED,kBAAC,IAAD,CAAMwE,GAAG,sBACP1E,UAAU,sCADZ,mFAKA,kBAAC,IAAD,CAAM0E,GAAG,2BACP1E,UAAU,sCADZ,2GAMJ,6BACE,4BAAQA,UAAU,kFACeqF,cAAY,QAAQC,cAAY,cADjE,2GAEA,4BAAQtF,UAAU,kFACeqF,cAAY,QAAQC,cAAY,cADjE,wC,GArCSrD,aA0DNC,gBAXS,SAACpM,GAAD,MAAY,CAClC0J,KAAM1J,EAAM0J,KACZ1J,MAAOA,MAIkB,SAACsM,GAAD,MAAe,CACxCtH,WAAY,SAACL,GAAD,OAAW2H,EAAStF,UAAY/H,kBAAkB0F,KAC9D8K,OAAQ,kBAAMnD,EAAStF,UAAYlI,qBAGtBsN,CAGbkD,IClFF,SAASI,GAAa1F,GAAQ,IACpBC,EAA+BD,EAA/BC,IAAK0F,EAA0B3F,EAA1B2F,UAAWpO,EAAeyI,EAAfzI,WACpB2E,EAAW,KACfvC,OAAOC,KAAKrC,GAAYsC,SAAQ,SAAAC,GAC1BvC,EAAWuC,IAAQmG,EAAI/D,WACzBA,EAAWpC,MAEf,IAAI8L,GAAO,EAGX,OAFI3F,EAAIvH,IAAMiN,IAAWC,GAAO,GAG9B,6BACGA,EACC,6BACE,kBAAC,GAAD,CACErO,WAAYA,EACZ4L,aAAcnD,EAAM6F,cACpB5F,IAAKA,EACLiE,cAAe,CACbxL,GAAIuH,EAAIvH,GACRkD,MAAOqE,EAAIrE,MAAOM,SAAUA,EAAUL,YAAaoE,EAAIpE,YACvDG,WAAYiE,EAAIjE,WAAYC,SAAUgE,EAAIhE,SAAUH,OAAQmE,EAAInE,OAChEC,QAASkE,EAAIlE,SAEfqI,aAAcpE,EAAMoE,gBAIxB,yBAAKlE,UAAU,6BACb,yBAAKC,MAAM,qBACT,wBAAID,UAAU,+BAA+BD,EAAIrE,OACjD,wBAAIsE,UAAU,uBAAuBD,EAAInE,QACzC,yBAAKoE,UAAU,aACf,uBAAGA,UAAU,8CAA8CD,EAAIG,WAC/D,uBAAGF,UAAU,+CAA+CD,EAAI/D,UAChE,yBAAKgE,UAAU,aACf,uBAAGA,UAAU,kBACVD,EAAIpE,aAEP,uBAAGqE,UAAU,6BAA6BD,EAAIlE,SAC7CkE,EAAIjE,WACD,uBAAGkE,UAAU,8BAAb,KAA6CD,EAAIjE,WAAjD,iBAAiEiE,EAAIhE,UAErEgE,EAAIhE,SACF,uBAAGiE,UAAU,8BAAb,gBAA8CD,EAAIhE,UAElD,uBAAGiE,UAAU,8BAAb,wEAEN,yBAAKA,UAAU,aACf,uBAAGA,UAAU,0BAA0BD,EAAII,aAC3C,4BAAQH,UAAU,8FACUO,UAASR,EAAIvH,GAAI6H,QAASP,EAAMoE,cAD5D,oDAIA,4BAAQlE,UAAU,yGACqBO,UAASR,EAAIvH,GAAI6H,QAASP,EAAM8F,iBADvE,2GAIA,yBAAK5F,UAAU,gB,IASrB6F,G,oDACJ,WAAY/F,GAAQ,IAAD,+BACjB,cAAMA,IACDhK,MAAQ,CACXgQ,aAAc,GACdL,UAAW,KACX/E,eAAe,GAGnB,EAAKwD,aAAe,EAAKA,aAAavD,KAAlB,iBACpB,EAAKgF,cAAgB,EAAKA,cAAchF,KAAnB,iBACrB,EAAKiF,gBAAkB,EAAKA,gBAAgBjF,KAArB,iBACvB,EAAKoF,eAAiB,EAAKA,eAAepF,KAApB,iBAXH,E,uGAiBLK,GAAI,IACRxI,EAAOwI,EAAEC,OAAOC,QAAhB1I,GACRuI,KAAKI,SAAL,6BAAkBJ,KAAKjL,OAAvB,IACE2P,UAAWjN,O,sCAIG,IACR+L,EAAWxD,KAAKjB,MAAMH,KAAKqG,UAA3BzB,OACRxD,KAAKjB,MAAM1D,iBAAiBmI,GAC5BxD,KAAKI,SAAL,6BAAkBJ,KAAKjL,OAAvB,IACE2P,UAAW,KACX/E,eAAe,O,sCAIFM,GAAI,IACXxI,EAAOwI,EAAEC,OAAOC,QAAhB1I,GACRuI,KAAKjB,MAAMzD,sBAAsB,CAAC7D,GAAIA,EAAI8D,QAAQ,IAClDyE,KAAKI,SAAL,6BAAkBJ,KAAKjL,OAAvB,IACE2P,UAAW,KACX/E,eAAe,O,uCAID,IACR6D,EAAWxD,KAAKjB,MAAMH,KAAKsG,UAA3B1B,OACRxD,KAAKjB,MAAMvD,UAAUgI,GACrBxD,KAAKI,SAAL,6BAAkBJ,KAAKjL,OAAvB,IACE2P,UAAW,KACX/E,eAAe,O,wCAIC,IAAD,QACZK,KAAKjB,MAAMoG,eAAiBnF,KAAKjL,MAAM4K,eAC1CY,YAAW,WACT,EAAKH,SAAL,6BAAkB,EAAKrL,OAAvB,IAA8B4K,eAAe,KAC7C,EAAKZ,MAAM7E,QAAQ,CAACiF,UAAW,EAAKJ,MAAMtK,KAAKgD,OAC9C,M,+BAIG,IAAD,OACPuI,KAAKoF,kBADE,MAE4BpF,KAAKjB,MAAhCJ,EAFD,EAECA,KAAMlK,EAFP,EAEOA,KAAM6B,EAFb,EAEaA,WACZoO,EAAc1E,KAAKjL,MAAnB2P,UACR,OACE,yBAAKzF,UAAU,IACZN,EAAKlD,OAAS,GAAKkD,EAAK3F,KAAI,SAAAgG,GAAG,OAC9B,kBAACyF,GAAD,CACEzF,IAAKA,EACL0F,UAAWA,EACXvB,aAAc,EAAKA,aACnByB,cAAe,EAAKA,cACpBC,gBAAiB,EAAKA,gBACtBvO,WAAYA,EACZuC,IAAKmG,EAAIvH,QAGb,yBAAKwH,UAAU,6BACZN,EAAKlD,OAAS,GAAKhH,EAChB,yBAAKwK,UAAU,WACb,wBAAIA,UAAU,gCAAd,mFACA,kBAAC,GAAD,CACI3I,WAAYA,EACZ4L,aAAclC,KAAKgF,eACnB/B,cAAe,CACb9D,UAAW1K,EAAOA,EAAKgD,GAAK,KAAMsD,WAAY,KAAMC,SAAU,KAAMF,QAAS,kDAKvF,uBAAGmE,UAAU,8BAAb,iK,GA3FeiC,aAsGrBmE,G,oDACJ,WAAYtG,GAAQ,IAAD,+BACjB,cAAMA,IACDhK,MAAQ,GAGf,EAAKsO,iBAAmB,EAAKA,iBAAiBzD,KAAtB,iBALL,E,iEASjB,IAAM0F,EAAUzL,aAAaQ,QAAQ,WACrC2F,KAAKjB,MAAM7E,QAAQ,CAACiF,UAAWmG,M,uCAGhBrF,GACfA,EAAEqD,iBACFtD,KAAKjB,MAAMvE,eAAewF,KAAKjB,MAAMhK,MAAM6J,KAAKsG,UAAU1B,U,+BAGlD,IACF/O,EAASuL,KAAKjB,MAAdtK,KADC,EAEsBuL,KAAKjB,MAAMhK,MAAM4J,KAAtCrI,EAFD,EAECA,WAAYqI,EAFb,EAEaA,KACZ2B,EAAiBN,KAAKjB,MAAMhK,MAAM4J,KAAlC2B,aACR,OACE,yBAAKrB,UAAU,+BACb,iIAGCqB,EACC,sCAEA,kBAAC,GAAD,CACE7L,KAAMA,EACNmK,KAAMoB,KAAKjB,MAAMH,KACjBtI,WAAYA,EACZ6O,cAAenF,KAAKjB,MAAMhK,MAAM4J,KAAKwG,cACrCxG,KAAMA,EACNzE,QAAS8F,KAAKjB,MAAM7E,QACpBmB,iBAAkB2E,KAAKjB,MAAM1D,iBAC7BC,sBAAuB0E,KAAKjB,MAAMzD,sBAClCE,UAAWwE,KAAKjB,MAAMvD,iB,GAxCP0F,aAiEZC,gBAlBS,SAACpM,GAAD,MAAY,CAClCA,MAAOA,EACPiP,QAASjP,EAAMiP,QACfvP,KAAMM,EAAM0J,KAAKhK,KACjBkK,KAAM5J,EAAM4J,KAAKA,KACjBC,KAAM7J,EAAM6J,SAGa,SAACyC,GAAD,MAAe,CACxC7G,eAAgB,SAAA/C,GAAE,OAAI4J,EAASjF,UAAY6H,sBAAsBxM,KACjE4D,iBAAkB,SAAA5D,GAAE,OAAI4J,EAASjF,UAAYmJ,wBAAwB9N,KACrE6D,sBAAuB,SAAA7D,GAAE,OAAI4J,EAASjF,UAAYoJ,6BAA6B/N,KAC/EyC,QAAS,SAAAoH,GAAK,OAAID,EAASjF,UAAYoF,eAAeF,KACtD9F,UAAW,SAAA/D,GAAE,OAAI4J,EAASjF,UAAYqJ,iBAAiBhO,KAEvDsC,WAAY,SAACL,GAAD,OAAW2H,EAAStF,UAAY/H,kBAAkB0F,QAGjDyH,CAGbkE,IChOIK,GPLS,SAACjC,GAEd,IAAMkC,EAAiBC,cACjBF,EAAQG,sBAAYtH,GAAUuH,8BAClCC,0BAAgBJ,KAGCA,EAAeK,IAAIC,IAetC,OAAOP,EOjBKQ,GAEdC,IAASC,OACP,kBAAC,IAAD,CAAUV,MAAOA,IACf,kBAAC,IAAD,KAGE,yBAAKzG,UAAU,MAAMxH,GAAG,QACtB,kBAAC,GAAD,MAQA,yBAAKwH,UAAU,6BACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoH,OAAK,EAACC,KAAK,KAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,2BAA2B7D,UAAWW,KAClD,kBAAC,IAAD,CAAOkD,KAAK,sBAAsB7D,UAAW4C,KAC7C,kBAAC,IAAD,CAAOiB,KAAK,qBAAqB7D,UAAWyB,UAKzCqC,SAASC,eAAe,U,iIChD1BnG,EAAc,SAACoG,EAAoBC,GAC5C,OAA6B,IAAzBD,EAAIE,QAAQD,GACR,GAAN,mBAAWD,GAAX,CAAgBC,IAETD,EAAIG,QAAO,SAAAC,GAAI,OAAIA,IAASH,MAI5B7P,EAAe,SAACiQ,EAAOD,GAAR,OAAiBE,IAAEC,IAAIF,EAAO,CAACD,M,m0CCL/BpT,wBAAc,CACtC+N,eAAgB,CAAC,WACjBlF,YAAa,CAAC,WACdD,eAAgB,CAAC,WAEjB4K,oBAAqB,CAAC,WACtBzK,iBAAkB,CAAC,SACnBD,oBAAqB,CAAC,WAEtBgF,qBAAsB,CAAC,WACvB5E,kBAAmB,CAAC,WACpBF,qBAAsB,CAAC,WAEvBwH,sBAAuB,CAAC,WACxBpH,mBAAoB,CAAC,WACrBD,sBAAuB,CAAC,WAExB2I,wBAAyB,CAAC,WAC1BxI,qBAAsB,CAAC,WACvBD,wBAAyB,CAAC,WAE1B0I,6BAA8B,CAAC,WAC/BvI,0BAA2B,CAAC,WAC5BD,6BAA8B,CAAC,WAE/ByI,iBAAkB,CAAC,WACnBtI,cAAe,CAAC,WAChBD,iBAAkB,CAAC,aA3Bf/I,E,EAAAA,MAAOC,E,EAAAA,SA8BFyJ,EAAY1J,EACVC,YAIR,IAAME,EAAgBC,IAAU,CACnC+L,cAAc,EACd3B,KAAM,GACNrI,WAAY,GACZmK,UAAW,KAEXyG,eAAgB,KAChBC,UAAW,KACXC,YAAa,KAEbjC,cAAe,KAEf3O,QAAS,KAKA6Q,EAAgB,CACzBnN,QAAS,SAAAnF,GAAK,OAAIA,EAAM4J,KAAK2I,UAC7BlN,cAAe,SAAArF,GAAK,OAAIA,EAAM4J,KAAKrI,YACnCkF,UAAW,SAAAzG,GAAK,OAAIA,EAAM4J,KAAKwI,YAMtB3F,EAAiB,SAACzM,EAAD,GAAwB,EAAdI,QACpC,OAAOJ,EAAME,MAAM,CAAEqL,cAAc,EAAM3B,KAAM,MAGtCtC,EAAiB,SAACtH,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QACpC,OAAOJ,EAAME,MAAM,CAAEqL,cAAc,EAAOG,UAAW,KAAM9B,KAAMxJ,EAAQuH,QACpEpG,WAAYnB,EAAQmB,cAGhBgG,EAAc,SAACvH,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QACjC,OAAOJ,EAAME,MAAM,CAAEqL,cAAc,EAAOG,UAAWtL,EAASwJ,KAAM,MAI3DsI,EAAsB,SAAClS,EAAD,GAAwB,EAAdI,QACzC,OAAOJ,EAAME,MAAM,CAAEiS,gBAAgB,KAG5B3K,EAAsB,SAACxH,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QACzC,OAAOJ,EAAME,MAAM,CAAEiS,gBAAgB,EAAOE,YAAa,KAAMD,UAAWhS,KAGjEqH,EAAmB,SAACzH,EAAD,GAAuB,IAAbL,EAAY,EAAZA,MACtC,OAAOK,EAAME,MAAM,CAAEiS,gBAAgB,EAAOE,YAAa1S,EAAOyS,UAAW,QAIlE5F,EAAuB,SAACxM,EAAD,GAAwB,EAAdI,QAC1C,OAAOJ,EAAME,MAAM,CAAEqL,cAAc,EAAMhK,WAAY,MAG5CmG,EAAuB,SAAC1H,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QAC1C,OAAOJ,EAAME,MAAM,CAAEqL,cAAc,EAAOG,UAAW,KAAMnK,WAAYnB,KAG9DwH,EAAoB,SAAC5H,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QACvC,OAAOJ,EAAME,MAAM,CAAEqL,cAAc,EAAOG,UAAUtL,EAASmB,WAAY,MAIhE2N,EAAwB,SAAClP,EAAD,GAAwB,EAAdI,QAC3C,OAAOJ,EAAME,MAAM,CAAEkQ,eAAe,EAAM3O,QAAS,MAG1CoG,EAAwB,SAAC7H,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QAC3C,OAAOJ,EAAME,MAAM,CAAEkQ,eAAe,EAAO1E,UAAW,KAAMjK,QAASrB,EAAQqB,WAGpEqG,EAAqB,SAAC9H,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QACxC,OAAOJ,EAAME,MAAM,CAAEkQ,eAAe,EAAO1E,UAAUtL,EAASqB,QAAS,MAI9D+O,EAA0B,SAACxQ,EAAD,GAAwB,EAAdI,QAC7C,OAAOJ,EAAME,MAAM,CAAEkQ,eAAe,EAAM3O,QAAS,MAG1CsG,EAA0B,SAAC/H,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QAC7C,OAAOJ,EAAME,MAAM,CAAEkQ,eAAe,EAAO1E,UAAW,KAAMjK,QAASrB,EAAQqB,WAGpEuG,EAAuB,SAAChI,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QAC1C,OAAOJ,EAAME,MAAM,CAAEkQ,eAAe,EAAO1E,UAAUtL,EAASqB,QAAS,MAI9DgP,EAA+B,SAACzQ,EAAD,GAAwB,EAAdI,QAClD,OAAOJ,EAAME,MAAM,CAAEkQ,eAAe,EAAM3O,QAAS,MAG1CwG,EAA+B,SAACjI,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QAClD,OAAOJ,EAAME,MAAM,CAAEkQ,eAAe,EAAO1E,UAAW,KAAMjK,QAASrB,EAAQqB,WAGpEyG,EAA4B,SAAClI,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QAC/C,OAAOJ,EAAME,MAAM,CAAEkQ,eAAe,EAAO1E,UAAUtL,EAASqB,QAAS,MAI9DiP,EAAmB,SAAC1Q,EAAD,GAAwB,EAAdI,QACtC,OAAOJ,EAAME,MAAM,CAAEkQ,eAAe,EAAM3O,QAAS,MAG1C0G,EAAmB,SAACnI,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QACtC,OAAOJ,EAAME,MAAM,CAAEkQ,eAAe,EAAO1E,UAAW,KAAMjK,QAASrB,EAAQqB,QACzE2Q,UAAWhS,EAAQ6J,OAGd7B,EAAgB,SAACpI,EAAD,GAAyB,IAAfI,EAAc,EAAdA,QACnC,OAAOJ,EAAME,MAAM,CAAEkQ,eAAe,EAAO1E,UAAUtL,EAASqB,QAAS,MAK9DnB,EAAUC,wBAAchB,GAAD,mBAC/BH,EAAM2J,iBAAmB0D,GADM,cAE/BrN,EAAMoT,iBAAmBlL,GAFM,cAG/BlI,EAAMqT,cAAgBlL,GAHS,cAK/BnI,EAAM6J,uBAAyBiJ,GALA,cAM/B9S,EAAMsT,uBAAyBlL,GANA,cAO/BpI,EAAMuT,oBAAsBlL,GAPG,cAS/BrI,EAAM8J,uBAAyBsD,GATA,cAU/BpN,EAAMwT,uBAAyBlL,GAVA,cAW/BtI,EAAMyT,oBAAsBjL,GAXG,cAa/BxI,EAAM+J,yBAA2B+F,GAbF,cAc/B9P,EAAM0T,yBAA2BjL,GAdF,cAe/BzI,EAAM2T,sBAAwBjL,GAfC,cAiB/B1I,EAAMgK,2BAA6BoH,GAjBJ,cAkB/BpR,EAAM4T,2BAA6BjL,GAlBJ,cAmB/B3I,EAAM6T,wBAA0BjL,GAnBD,cAqB/B5I,EAAMiK,gCAAkCoH,GArBT,cAsB/BrR,EAAM8T,gCAAkCjL,GAtBT,cAuB/B7I,EAAM+T,6BAA+BjL,GAvBN,cAyB/B9I,EAAMkK,mBAAqBoH,GAzBI,cA0B/BtR,EAAMgU,mBAAqBjL,GA1BI,cA2B/B/I,EAAMiU,gBAAkBjL,GA3BO,M","file":"static/js/main.2afd7113.chunk.js","sourcesContent":["import { createReducer, createActions } from 'reduxsauce'\nimport Immutable from 'seamless-immutable'\n\n/* ------------- Types and Action Creators ------------- */\n\nconst { Types, Creators } = createActions({\n  loginRequest: ['data'],\n  loginSuccess: ['user'],\n  loginFailure: ['error'],\n\n  logoutRequest: null,\n  logoutSuccess: null,\n  logoutFailure: ['error'],\n\n  checkTokenRequest: ['payload'],\n  checkTokenSuccess: ['payload'],\n  checkTokenFail: ['error'],\n})\n\nexport const AuthTypes = Types\nexport default Creators\n\n/* ------------- Initial State ------------- */\n\nexport const INITIAL_STATE = Immutable({\n  fetching: false,\n  user: null,\n  error: '',\n  isLoggedIn: false,\n  isLoggingIn: false\n})\n\n/* ------------- Selectors ------------- */\n\nexport const AuthSelectors = {\n  getUser: state => state.user\n}\n\n/* ------------- Reducers ------------- */\n\n// login request\nexport const loginRequest = (state, { data }) => {\n  return state.merge({ fetching: true, user: null, isLoggingIn: true, isLoggedIn: false })\n}\n  \n\n// login success\nexport const loginSuccess = (state, { user }) => {\n  return state.merge({ fetching: false, error: null, user: user, isLoggedIn: true, isLoggingIn: false })\n}\n\n// login fail\nexport const loginFailure = (state, action) => {\n  const { error } = action\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n\n// logout request\nexport const logoutRequest = (state) => {\n  return state.merge({ fetching: true, isLoggingIn: true })\n}\n\nexport const logoutSuccess = (state) => {\n  return state.merge({ fetching: false, error: null, user: null, isLoggingIn: false, isLoggedIn: false  })\n}\n\nexport const logoutFailure = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, isLoggingIn: false })\n}\n \nexport const checkTokenRequest = (state, { payload }) => {\n  return state.merge({ fetching: true })\n}\n\nexport const checkTokenSuccess = (state, { payload }) => {\n  return state.merge({ fetching: false, error: null, user: payload.profile, isLoggedIn: true, isLoggingIn: false })\n}\n\nexport const checkTokenFail = (state, { error }) => {\n  return state.merge({ fetching: false, error: error, user: null, isLoggedIn: false, isLoggingIn: false })\n}\n\n/* ------------- Hookup Reducers To Types ------------- */\n\nexport const reducer = createReducer(INITIAL_STATE, {\n  [Types.LOGIN_REQUEST]: loginRequest,\n  [Types.LOGIN_SUCCESS]: loginSuccess,\n  [Types.LOGIN_FAILURE]: loginFailure,\n  \n  [Types.CHECK_TOKEN_REQUEST]: checkTokenRequest,\n  [Types.CHECK_TOKEN_FAIL]: checkTokenFail,\n  [Types.CHECK_TOKEN_SUCCESS]: checkTokenSuccess,\n  \n  [Types.LOGOUT_REQUEST]: logoutRequest,\n  [Types.LOGOUT_SUCCESS]: logoutSuccess,\n  [Types.LOGOUT_FAILURE]: logoutFailure,\n  \n})\n","import { createReducer, createActions } from 'reduxsauce'\r\nimport Immutable from 'seamless-immutable'\r\n\r\nimport { toggleArray, lodashToggle } from '../../components/utils';\r\n\r\n\r\n/* ------------- Types and Action Creators ------------- */\r\nconst { Types, Creators } = createActions({\r\n    createOrChangeIsubRequest: ['payload'],\r\n    createOrChangeIsubFail: ['payload'],\r\n    createOrChangeIsubSuccess: ['payload'],\r\n\r\n    toggleFilterCategories: ['catId'],\r\n})\r\n\r\nexport const IsubsTypes = Types\r\nexport default Creators\r\n\r\n\r\n/* ------------- Initial State ------------- */\r\nexport const INITIAL_STATE = Immutable({\r\n    fetching: false,\r\n    error: null,\r\n    isub: null,\r\n    categories: [],\r\n    filterCategories: [],\r\n    message: '',\r\n})\r\n\r\n/* ------------- Selectors ------------- */\r\nexport const IsubsSelectors = {\r\n    createOrChangeIsub: state => state.isubs.isub,\r\n}\r\n\r\n/* ------------- Reducers ------------- */\r\n// create first job\r\nexport const createOrChangeIsubRequest = (state, { payload }) => {\r\n    return state.merge({ fetching: true, message: '' })\r\n}\r\n\r\nexport const createOrChangeIsubSuccess = (state, { payload }) => {\r\n    return state.merge({ fetching: false, error: null, message: payload.message, isub: payload.isub,\r\n        categories: payload.isub.categories })\r\n}\r\n\r\nexport const createOrChangeIsubFail = (state, { payload }) => {\r\n    return state.merge({ fetching: false, error: payload, message: '', isub: null, categories: null })\r\n}\r\n\r\nexport const toggleFilterCategories = (state, { catId }) => {\r\n    let { filterCategories } = state\r\n    filterCategories = lodashToggle(filterCategories, parseInt(catId))\r\n    return state.merge({ filterCategories: filterCategories })\r\n}\r\n\r\n/* ------------- Hookup Reducers To Types ------------- */\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [Types.CREATE_OR_CHANGE_ISUB_REQUEST]: createOrChangeIsubRequest,\r\n    [Types.CREATE_OR_CHANGE_ISUB_SUCCESS]: createOrChangeIsubSuccess,\r\n    [Types.CREATE_OR_CHANGE_ISUB_FAIL]: createOrChangeIsubFail,\r\n\r\n    [Types.TOGGLE_FILTER_CATEGORIES]: toggleFilterCategories,\r\n})\r\n","// export const url = 'http://35.222.169.29';\r\nexport const url = 'https://svoyaeda.su';\r\n\r\nexport const apiUrl = `${url}/api`;\r\n\r\nexport default {\r\n    JWT_AUTH: `${apiUrl}/jwt/api-token-auth/`,\r\n    JWT_CHECK_TOKEN: `${apiUrl}/jwt/api-token-verify/`,\r\n    SIGNUP: `${apiUrl}/users/`,\r\n\r\n    // jobs\r\n    GET_JOBS: `${apiUrl}/jobs/`,\r\n    getJobDetail: (id) => `${apiUrl}/jobs/${id}/`,\r\n    activateDeactivateJobDetail: (id) => `${apiUrl}/jobs/${id}/activate_deactivate/`,\r\n    CREATE_FIRST_JOB: `${apiUrl}/jobs/first_create/`,\r\n\r\n    // categories\r\n    GET_CATEGORIES: `${apiUrl}/categories/`,\r\n\r\n    // subs\r\n    CREATE_OR_CHANGE_ISUB: `${apiUrl}/subs/`,\r\n}","\n// standart serializer field error. There are could be several fields\n// {\n//     \"birth_id\": [\"This field is required.\"]\n// }\n\n\nexport const parseErrorData = (error) => {\n\n    if (error && typeof error.response !== 'undefined') {\n        let errorObj = {\n            status: error.response.status, \n            statusText: error.response.statusText,\n            message: null,\n            response: error.response,\n        }\n        if ('message' in error.response.data) {\n            errorObj.message = JSON.stringify(error.response.data.message)\n        }\n        else {\n            let message = ''\n            for (const property in error.response.data) {\n                message = message + `${property}: ${error.response.data[property]}. `\n              }\n            errorObj.message = message\n\n        }\n        return errorObj\n\n    } else {\n        return { \n         status: 'Connection Error',\n         statusText: 'An error occurred while sending your data!',\n         message: 'An error occurred while sending your data!' }\n    }\n}\n\nexport const createUrlParamsFromFilters = (filters) => {\n    const params = new URLSearchParams()\n\n    if (filters != null) Object.keys(filters).forEach(key => {\n            if (filters[key] !== null && !(filters[key] instanceof Array)) \n                params.append(key, filters[key])\n            if (filters[key] !== null && filters[key] instanceof Array){\n                delete params[key]\n                filters[key].map(value => {\n                    if (value !== '')\n                        params.append(key, value)\n                    return null\n                })\n            }\n        })\n    return params\n}","import axios from 'axios';\nimport endpoints from './endpoints';\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\n\n\nconst create = () => {\n  const logIn = (data: { username: string, password: string}): void => {\n    const { username, password } = data;\n    \n     return axios.post(endpoints.JWT_AUTH, { username, password })\n      .then(response => {\n        if (response.status < 200 || response.status >= 300) {\n            throw new Error(response);\n        }\n        return { token: response.data.token, user: response.data.user };\n      })\n      .catch(err => {\n        throw new Error(err.response.data[Object.keys(err.response.data)[0]][0])\n      })\n      .then((response) => {\n          // console.log('response.data', response.data)\n          localStorage.setItem('token', response.data.token);\n          return response.user;\n      })\n  }\n\n  const logOut = () => {\n    localStorage.removeItem('token');\n  }\n\n  const checkToken = (payload: string) => {\n    return axios.post(endpoints.JWT_CHECK_TOKEN, { token: payload })\n      .then(response => {\n        localStorage.setItem('token', response.data.token);\n        localStorage.setItem('user_id', response.data.profile.id);\n        return response.data\n      })\n      .catch(err => {\n        const error = new Error(err);\n            error.data = parseErrorData(err);\n            throw error;\n      })\n  }\n\n  return {\n    logIn,\n    checkToken,\n    logOut,\n  }\n}\n\nexport default {\n  create\n}","import axios from 'axios';\r\nimport endpoints from './endpoints';\r\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\r\n\r\nconst create = () => {\r\n\r\n    const getCategories = (filters) => {\r\n        const params = createUrlParamsFromFilters(filters);\r\n        return axios.get(endpoints.GET_CATEGORIES, { params })\r\n        .then(response => response.data)\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const getJobs = (filters) => {\r\n        const params = createUrlParamsFromFilters(filters);\r\n        return axios.get(endpoints.GET_JOBS, { params })\r\n        .then(response => response.data)\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const getJobDetail = id => {\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.getJobDetail(id);\r\n\r\n        return axios({\r\n                    method: 'get',\r\n                    url: url,\r\n                    // headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const createFirstJob = payload => {\r\n        const { name, phone, title, description, budget, address, start_date, end_date, category } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.CREATE_FIRST_JOB;\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"name\", name);\r\n        formData.append(\"phone\", phone);\r\n        formData.append(\"title\", title);\r\n        formData.append(\"description\", description);\r\n        formData.append(\"budget\", budget);\r\n        formData.append(\"address\", address);\r\n        formData.append(\"category\", category);\r\n        start_date && formData.append(\"start_date\", start_date);\r\n        end_date && formData.append(\"end_date\", end_date);\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const partialUpdateJob = payload => {\r\n        const { id, title, description, budget, address, start_date, end_date, category } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.getJobDetail(id);\r\n\r\n        const formData = new FormData();\r\n        title && formData.append(\"title\", title);\r\n        description && formData.append(\"description\", description);\r\n        budget && formData.append(\"budget\", budget);\r\n        address && formData.append(\"address\", address);\r\n        category && formData.append(\"category\", category);\r\n        start_date && formData.append(\"start_date\", start_date);\r\n        end_date && formData.append(\"end_date\", end_date);\r\n        \r\n        return axios({\r\n                    method: 'patch',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const activateDeactivateJob = payload => {\r\n        const { id, active } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.activateDeactivateJobDetail(id);\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"active\", active);\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    const createJob = payload => {\r\n        const { title, description, budget, address, start_date, end_date, category } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.GET_JOBS;\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"title\", title);\r\n        formData.append(\"description\", description);\r\n        formData.append(\"budget\", budget);\r\n        formData.append(\"address\", address);\r\n        formData.append(\"category\", category);\r\n        start_date && formData.append(\"start_date\", start_date);\r\n        end_date && formData.append(\"end_date\", end_date);\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    return {\r\n        getJobs,\r\n        getCategories,\r\n        getJobDetail,\r\n        createFirstJob,\r\n        partialUpdateJob,\r\n        activateDeactivateJob,\r\n        createJob\r\n    }\r\n}\r\n\r\nexport default {\r\n    create\r\n}","import axios from 'axios';\r\nimport endpoints from './endpoints';\r\nimport { parseErrorData, createUrlParamsFromFilters } from './utils';\r\n\r\nconst create = () => {\r\n    const createOrChangeIsub = payload => {\r\n        const { categories } = payload;\r\n        const token = localStorage.getItem('token') || '';\r\n        const url = endpoints.CREATE_OR_CHANGE_ISUB;\r\n\r\n        const formData = new FormData();\r\n        categories && categories.length > 0 && categories.map(cat =>\r\n            formData.append(\"categories\", cat)\r\n            ) \r\n        console.log(categories)\r\n        \r\n        return axios({\r\n                    method: 'post',\r\n                    url: url,\r\n                    data: formData,\r\n                    headers: { 'content-type': 'multipart/form-data', 'Authorization': `JWT ${token}` }\r\n        })\r\n        .then(response => {\r\n            return response.data\r\n        })\r\n        .catch(err => {\r\n            const error = new Error(err);\r\n            error.data = parseErrorData(err);\r\n            throw error;\r\n        })\r\n    }\r\n\r\n    return {\r\n        createOrChangeIsub,\r\n    }\r\n}\r\n\r\nexport default {\r\n    create\r\n}","import { put, call } from 'redux-saga/effects';\r\n// import { push } from 'react-router-redux';\r\n// import Notifications from 'react-notification-system-redux';\r\n\r\nimport AuthActions from '../redux-sauce/auth'\r\nimport IsubsActions from '../redux-sauce/isubs'\r\n\r\nexport function * logIn (api, action) {\r\n  const { data } = action;\r\n  yield put(AuthActions.resetAuthErrors())\r\n  try {\r\n    let response = yield call(api.logIn, data)\r\n    yield put(AuthActions.loginSuccess(response))\r\n    yield put(AuthActions.toggleModal(false))\r\n  } catch (e) {\r\n    yield put(AuthActions.loginFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function * logOut (api, action) {\r\n  try {\r\n    yield call(api.logOut)\r\n    yield put(AuthActions.logoutSuccess())\r\n  } catch (e) {\r\n    yield put(AuthActions.logoutFailure(e.message))\r\n    // yield put(Notifications.error({ title: 'Ошибка', message: e.message, position: 'tc' }));\r\n  }\r\n}\r\n\r\nexport function* checkToken(api, action) {\r\n  const { payload } = action;\r\n  try {\r\n    let response = yield call(api.checkToken, payload);\r\n    yield put(AuthActions.checkTokenSuccess(response));\r\n    yield put(IsubsActions.createOrChangeIsubSuccess(response.profile))\r\n    // add isub action\r\n  } catch (e) {\r\n    yield put(AuthActions.checkTokenFail(e.message))\r\n  }\r\n}","import { put, call } from 'redux-saga/effects';\r\n\r\nimport JobsActions from '../redux-sauce/jobs'\r\n\r\nexport function* getJobs(api, action) {\r\n    try {\r\n        let response = yield call(api.getJobs, action.payload);\r\n        yield put(JobsActions.getJobsSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.getJobsFail(err))\r\n    }\r\n}\r\n\r\nexport function* getJobDetail(api, action) {\r\n    try {\r\n        let response = yield call(api.getJobDetail, action.payload);\r\n        yield put(JobsActions.getJobDetailSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.getJobDetailFail(err))\r\n    }\r\n}\r\n\r\nexport function* getCategories(api, action) {\r\n    try {\r\n        let response = yield call(api.getCategories, action.payload);\r\n        yield put(JobsActions.getCategoriesSuccess(response.results));\r\n    } catch (err) {\r\n        yield put(JobsActions.getCategoriesFail(err))\r\n    }\r\n}\r\n\r\nexport function* createFirstJob(api, action) {\r\n    try {\r\n        let response = yield call(api.createFirstJob, action.payload);\r\n        yield put(JobsActions.createFirstJobSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.createFirstJobFail(err))\r\n    }\r\n}\r\n\r\nexport function* partialUpdateJob(api, action) {\r\n    try {\r\n        let response = yield call(api.partialUpdateJob, action.payload);\r\n        yield put(JobsActions.partialUpdateJobSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.partialUpdateJobFail(err))\r\n    }\r\n}\r\n\r\nexport function* activateDeactivateJob(api, action) {\r\n    try {\r\n        let response = yield call(api.activateDeactivateJob, action.payload);\r\n        yield put(JobsActions.activateDeactivateJobSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.activateDeactivateJobFail(err))\r\n    }\r\n}\r\n\r\nexport function* createJob(api, action) {\r\n    try {\r\n        let response = yield call(api.createJob, action.payload);\r\n        yield put(JobsActions.createJobSuccess(response));\r\n    } catch (err) {\r\n        yield put(JobsActions.createJobFail(err))\r\n    }\r\n}","import { put, call } from 'redux-saga/effects';\r\n\r\nimport IsubsActions from '../redux-sauce/isubs'\r\n\r\nexport function* createOrChangeIsub(api, action) {\r\n    try {\r\n        let response = yield call(api.createOrChangeIsub, action.payload);\r\n        yield put(IsubsActions.createOrChangeIsubSuccess(response));\r\n    } catch (err) {\r\n        yield put(IsubsActions.createOrChangeIsubFail(err))\r\n    }\r\n}","import { takeEvery, all, takeLatest } from \"redux-saga/effects\";\r\n\r\n/* -------------- API -------------- */\r\nimport AuthApi from \"../api/authApi\";\r\nimport JobsApi from '../api/jobsApi';\r\nimport IsubsApi from '../api/isubsApi';\r\n\r\n/* ------------- Types ------------- */\r\nimport { AuthTypes } from \"../redux-sauce/auth\";\r\nimport { JobsTypes } from '../redux-sauce/jobs';\r\nimport { IsubsTypes } from '../redux-sauce/isubs';\r\n\r\n/* ------------- Sagas ------------- */\r\nimport { logIn, logOut, checkToken, signUp, checkAuth } from \"./authSagas\";\r\nimport * as jobsSaga from './jobsSagas';\r\nimport * as isubsSaga from './isubsSagas';\r\n\r\nconst authApi = AuthApi.create();\r\nconst jobsApi = JobsApi.create();\r\nconst isubsApi = IsubsApi.create();\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeEvery(AuthTypes.LOGIN_REQUEST, logIn, authApi),\r\n    takeEvery(AuthTypes.LOGOUT_REQUEST, logOut, authApi),\r\n    takeEvery(AuthTypes.CHECK_TOKEN_REQUEST, checkToken, authApi),\r\n\r\n    takeEvery(JobsTypes.GET_JOBS_REQUEST, jobsSaga.getJobs, jobsApi),\r\n    takeEvery(JobsTypes.GET_JOB_DETAIL_REQUEST, jobsSaga.getJobDetail, jobsApi),\r\n    takeEvery(JobsTypes.GET_CATEGORIES_REQUEST, jobsSaga.getCategories, jobsApi),\r\n    takeEvery(JobsTypes.CREATE_FIRST_JOB_REQUEST, jobsSaga.createFirstJob, jobsApi),\r\n    takeEvery(JobsTypes.PARTIAL_UPDATE_JOB_REQUEST, jobsSaga.partialUpdateJob, jobsApi),\r\n    takeEvery(JobsTypes.ACTIVATE_DEACTIVATE_JOB_REQUEST, jobsSaga.activateDeactivateJob, jobsApi),\r\n    takeEvery(JobsTypes.CREATE_JOB_REQUEST, jobsSaga.createJob, jobsApi),\r\n\r\n    takeEvery(IsubsTypes.CREATE_OR_CHANGE_ISUB_REQUEST, isubsSaga.createOrChangeIsub, isubsApi),\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootSaga from '../sagas';\r\n// import { reducer as notifications } from 'react-notification-system-redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport const reducers = combineReducers({\r\n  // routing: routerReducer,\r\n  auth: require('../redux-sauce/auth').reducer,\r\n  jobs: require('../redux-sauce/jobs').reducer,\r\n  isubs: require('../redux-sauce/isubs').reducer,\r\n  \r\n  form: formReducer,\r\n  // notifications: notifications\r\n})\r\n\r\nexport default (history) => {\r\n  // const rMiddleware = routerMiddleware(history)\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const store = createStore(reducers, composeWithDevTools(\r\n    applyMiddleware(sagaMiddleware)\r\n  ));\r\n\r\n  let sagasManager = sagaMiddleware.run(rootSaga)\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(() => {\r\n      const nextRootReducer = require('./').reducers\r\n      store.replaceReducer(nextRootReducer)\r\n\r\n      const newYieldedSagas = require('../sagas').default\r\n      sagasManager.cancel()\r\n      sagasManager.done.then(() => {\r\n        sagasManager = sagaMiddleware.run(newYieldedSagas)\r\n      })\r\n    })\r\n  }\r\n\r\n  return store\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { url } from '../redux/api/endpoints';\r\nimport { getObjectbyId, toggleArray } from '../components/utils'\r\n\r\n// actions\r\nimport JobsActions from '../redux/redux-sauce/jobs';\r\nimport IsubsActions from '../redux/redux-sauce/isubs';\r\n\r\n\r\nfunction JobBlock (props) {\r\n  const { job } = props\r\n  return (\r\n    <div className='card card-style my-2'>\r\n      <div class=\"content text-left\">\r\n          <h4 className='font-16 font-500 float-left'>{job.title}</h4>\r\n          <h4 className='font-18 float-right'>{job.budget}</h4>\r\n          <div className=\"clearfix\"></div>\r\n          <p className='text-left float-left mb-0 font-12 font-500'>{job.zakazchik}</p>\r\n          <p className='text-left float-right mb-0 font-11 font-500'>{job.category}</p>\r\n          <div className=\"clearfix\"></div>\r\n          <p className=\"text-left mb-0\">\r\n            {job.description}\r\n          </p>\r\n          <p className='text-left float-left mb-0'>{job.address}</p>\r\n          {job.start_date ? \r\n              <p className='text-left float-right mb-0'>c {job.start_date} до {job.end_date}</p>\r\n              :\r\n              job.end_date ?\r\n                <p className='text-left float-right mb-0'>До {job.end_date}</p>\r\n                :\r\n                <p className='text-left float-right mb-0'>В любое время</p>\r\n            }\r\n          <div className=\"clearfix\"></div>\r\n          <p className='text-left font-10'>{job.created_ago}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nfunction Categories (props){\r\n  const { categories } = props\r\n  \r\n  return (\r\n    <div>\r\n      {categories.length > 0 && categories.map(category => \r\n          <button \r\n            className=\"btn btn-xs mb-1 ml-1 rounded-xl text-uppercase font-900 shadow-s bg-blue2-light\r\n              text-wrap float-left\" \r\n            // className={props.filterCategories.includes(category.id) ? 'btn-category btn-category-active' : 'btn-category' }\r\n            key={category.id} onClick={props.clickCategory} \r\n            data-id={category.id}\r\n            >\r\n              {category.ru_name}\r\n          </button>\r\n        )}\r\n      <div className=\"clearfix\"></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      needToRefresh: false,\r\n    }\r\n    this.clickCategory = this.clickCategory.bind(this);\r\n    this.clickSubscribe = this.clickSubscribe.bind(this);\r\n    this.clickUnsubscribe = this.clickUnsubscribe.bind(this);\r\n    this.clickSubscribeAll = this.clickSubscribeAll.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getJobs()\r\n  }\r\n\r\n  clickCategory(e) {\r\n    const { id } = e.target.dataset\r\n    this.props.toggleFilterCategories(id)\r\n    this.setState({...this.state, needToRefresh: true})\r\n  }\r\n\r\n  clickSubscribe(){\r\n    this.props.createOrChangeIsub({categories: this.props.filterCategories})\r\n  }\r\n\r\n  clickSubscribeAll(){\r\n    let categories = []\r\n    this.props.state.jobs.categories.map(cat => categories = toggleArray(categories, cat.id))\r\n    this.props.createOrChangeIsub({categories: categories})\r\n  }\r\n\r\n  clickUnsubscribe(){\r\n    this.props.createOrChangeIsub({})\r\n  }\r\n\r\n  refreshList () {\r\n    if (!this.props.state.jobs.listFetching && this.state.needToRefresh){\r\n      setTimeout(() => {\r\n        this.setState({...this.state, needToRefresh: false})\r\n        const { filterCategories } = this.props\r\n        this.props.getJobs({category: filterCategories})\r\n      }, 10)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.refreshList()\r\n    const { jobs, categories, listFetching, errorList } = this.props.state.jobs\r\n    const { filterCategories, isub } = this.props.state.isubs\r\n    const { user } = this.props.state.auth\r\n    // console.log(this.props.state)\r\n    return (\r\n        <div>\r\n          <div className=''>\r\n            <div className=\"page-title page-title-large\">\r\n              <h2 data-username={user ? user.nickname : 'Пользователь'} className=\"greeting-text\">\r\n                Привет\r\n              </h2>\r\n              <a href=\"#\" data-menu=\"menu-main\" className=\"bg-fade-gray1-dark shadow-xl preload-img\" \r\n                data-src=\"images/avatars/5s.png\"></a>\r\n            </div>\r\n            <div className=\"card header-card shape-rounded\" data-card-height=\"210\">\r\n              <div className=\"card-overlay bg-highlight opacity-95\"></div>\r\n              <div className=\"card-overlay dark-mode-tint\"></div>\r\n              <div className=\"card-bg preload-img\" data-src=\"images/pictures/20s.jpg\"></div>\r\n            </div>\r\n            <div className=\"card card-style mb-3\">\r\n              <div className=\"content\">\r\n                <Categories \r\n                  categories={categories} \r\n                  getJobs={this.props.getJobs} \r\n                  filterCategories={filterCategories}\r\n                  toggleFilterCategories={this.props.toggleFilterCategories}\r\n                  clickCategory={this.clickCategory}\r\n                />\r\n                {categories && isub && isub.categories.length > 0 &&\r\n                  <div>\r\n                    <p className='my-2 mr-1 ml-3 font-11 text-wrap font-italic' style={{\"line-height\": \"95%\"}}>\r\n                      Вы подписаны на {isub.categories.map((cat, idx) =>\r\n                        cat.ru_name + ', '\r\n                      )}\r\n                    </p>\r\n                    <button className='btn btn-m mb-1 ml-1 rounded-xl text-uppercase font-900\r\n                       shadow-s bg-red2-light float-right' onClick={this.clickUnsubscribe}>\r\n                         Отписаться\r\n                    </button>\r\n                  </div>\r\n                }\r\n                {filterCategories.length > 0 \r\n                  ? <button className='btn btn-m mb-1 ml-1 rounded-xl text-uppercase font-900\r\n                     shadow-s bg-blue1-dark float-left' onClick={this.clickSubscribe}>\r\n                      Подписаться ({filterCategories.length})\r\n                    </button>\r\n                  : isub && isub.categories < 1 && \r\n                    <button className='btn btn-m mb-1 ml-1 rounded-xl text-uppercase font-900\r\n                     shadow-s bg-blue1-dark float-left' onClick={this.clickSubscribeAll}>\r\n                      Подписаться на все категории\r\n                    </button>\r\n                }\r\n              </div>\r\n            </div>\r\n            {listFetching && <p>Loading...</p>}\r\n            {jobs.length > 0 && jobs.map(job =>\r\n              <JobBlock job={job} key={job.id}/>\r\n              )}\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  notifications: state.notifications,\r\n  state: state,\r\n  filterCategories: state.isubs.filterCategories\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCategories: query => dispatch(JobsActions.getCategoriesRequest(query)),\r\n  getJobs: query => dispatch(JobsActions.getJobsRequest(query)),\r\n\r\n  toggleFilterCategories: catId => dispatch(IsubsActions.toggleFilterCategories(catId)),\r\n  createOrChangeIsub: catId => dispatch(IsubsActions.createOrChangeIsubRequest(catId)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Main);\r\n","import React, { Component } from 'react';\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\n// actions\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  placeholder,\r\n  type,\r\n  meta: { touched, error, warning }\r\n}) => (\r\n  <div className=\"input-style input-style-1 input-required\">\r\n    <span className=\"input-style-1-inactive\">{placeholder}</span>\r\n    <input {...input} placeholder={placeholder} type={type}/>\r\n    {touched &&\r\n      ((error && <span>{error}</span>) ||\r\n        (warning && <span>{warning}</span>))}\r\n  </div>\r\n)\r\n\r\nfunction JobForm2 (props) {\r\n  let { handleSubmit, pristine, reset, submitting, categories, setData, job, jobDate } = props\r\n  return (\r\n    <div>\r\n      <div>\r\n          <Field\r\n            component={renderField}\r\n            name=\"title\"\r\n            type=\"text\"\r\n            placeholder='Что нужно сделать?'\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Выберите категорию работ</label>\r\n          <div>\r\n            <Field name=\"category\" component=\"select\">\r\n              <option />\r\n              {categories && categories.length > 0 && categories.map(category => \r\n                job && job.category === category.ru_name ?\r\n                <option defaultValue={category.id} key={category.id} >{category.ru_name}</option>\r\n                :\r\n                <option value={category.id} key={category.id}>{category.ru_name}</option>\r\n                )}\r\n            </Field>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label>Укажите объем и виды работ</label>\r\n          <div>\r\n            <Field name=\"description\" component=\"textarea\" className=\"form-control job-form-desc\"\r\n              placeholder='Какую работу нужно сделать? \r\n              - Напишите список работ.\r\n              - Укажите объем работы в квадратных метрах, штуках или в другой подходящей единице измерения.\r\n              - Опишите ваши пожелания и требования, если они есть.\r\n              '\r\n              />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label>Когда нужно выполнить работу?</label>\r\n          <select onChange={setData} name='jobDate'>\r\n            <option defaultValue={'any'}>В любое время</option>\r\n            <option value={'period'}>В период</option>\r\n            <option value={'not later'}>Не позднее, чем</option>\r\n          </select>\r\n          {jobDate == 'period' && \r\n            <div>\r\n              <label>C</label>\r\n              <Field\r\n                name=\"start_date\"\r\n                component='input'\r\n                type=\"date\"\r\n                placeholder=\"\"\r\n                label=\"C\"\r\n              />\r\n              <label>До</label>\r\n              <Field\r\n                name=\"end_date\"\r\n                component='input'\r\n                type=\"date\"\r\n                placeholder=\"\"\r\n                label=\"До\"\r\n              />\r\n            </div>\r\n            }\r\n          {jobDate == 'not later' && \r\n            <Field\r\n              name=\"end_date\"\r\n              component='input'\r\n              type=\"date\"\r\n              placeholder=\"\"\r\n            />\r\n          }\r\n        </div>\r\n        <div>\r\n          <Field\r\n            name=\"budget\"\r\n            component={renderField}\r\n            type=\"number\"\r\n            placeholder=\"Бюджет до\"\r\n            label=\"Бюджет до\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <Field\r\n            component={renderField}\r\n            name=\"address\"\r\n            type=\"text\"\r\n            placeholder='Адрес'\r\n            value={'Улан-Удэ'}\r\n            label='Адрес'\r\n          />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport class JobFirstCreateForm extends Component {\r\n  constructor(props) {\r\n   super(props);\r\n   this.state = {\r\n     jobDate: 'any',\r\n   };\r\n\r\n   this.setData = this.setData.bind(this);   \r\n }\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n      })\r\n  }\r\n  \r\n  render () {\r\n    let { handleSubmit, pristine, reset, submitting, user, categories } = this.props\r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <Field\r\n            component={renderField}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder={''}\r\n            value={user ? user.nickname : ''}\r\n            defaultValue={user ? user.nickname : ''}\r\n            label='Как к вам обращаться?'\r\n          />\r\n        </div>\r\n        <div>\r\n          <Field\r\n            name=\"phone\"\r\n            component={renderField}\r\n            type=\"number\"\r\n            placeholder=\"79148965232\"\r\n            label=\"Телефон\"\r\n          />\r\n        </div>\r\n        <JobForm2 \r\n          handleSubmit={handleSubmit}\r\n          pristine={pristine}\r\n          reset={reset}\r\n          submitting={submitting}\r\n          categories={categories}\r\n          setData={this.setData}\r\n          job={null}\r\n          jobDate={this.state.jobDate} />\r\n        \r\n        <div>\r\n          <button className='btn btn-primary'\r\n            // type=\"submit\"\r\n            onClick={handleSubmit}\r\n\r\n            disabled={pristine || submitting}>\r\n            Создать\r\n          </button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nJobFirstCreateForm = reduxForm({\r\n  form: 'jobFirstCreate' // a unique identifier for this form\r\n})(JobFirstCreateForm)\r\n\r\n\r\nexport class JobCreateForm extends Component {\r\n  constructor(props) {\r\n   super(props);\r\n   this.state = {\r\n     jobDate: 'any',\r\n   };\r\n\r\n   this.setData = this.setData.bind(this);   \r\n }\r\n\r\n componentDidMount() {\r\n  const { start_date, end_date } = this.props.initialValues\r\n  if (start_date) {\r\n    this.setState({...this.state, jobDate : 'period'})\r\n  }\r\n  if (end_date && !start_date){\r\n    this.setState({...this.state, jobDate : 'not later'})\r\n  }\r\n}\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n      })\r\n  }\r\n  \r\n  render () {\r\n    let { handleSubmit, pristine, reset, submitting, categories, job } = this.props\r\n    return (\r\n      <div>\r\n        <JobForm2 \r\n          handleSubmit={handleSubmit}\r\n          pristine={pristine}\r\n          reset={reset}\r\n          submitting={submitting}\r\n          categories={categories}\r\n          setData={this.setData}\r\n          job={job}\r\n          jobDate={this.state.jobDate} />\r\n        <div>\r\n          <button className='btn btn-primary'\r\n            onClick={handleSubmit}\r\n\r\n            disabled={pristine || submitting}>\r\n            Создать\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nJobCreateForm = reduxForm({\r\n  form: 'jobCreate', // a unique identifier for this form\r\n})(JobCreateForm)\r\n\r\n\r\nexport class JobUpdateForm extends Component {\r\n  constructor(props) {\r\n   super(props);\r\n   this.state = {\r\n     jobDate: 'any',\r\n   };\r\n\r\n   this.setData = this.setData.bind(this);   \r\n }\r\n\r\n componentDidMount() {\r\n  const { start_date, end_date } = this.props.initialValues\r\n  if (start_date) {\r\n    this.setState({...this.state, jobDate : 'period'})\r\n  }\r\n  if (end_date && !start_date){\r\n    this.setState({...this.state, jobDate : 'not later'})\r\n  }\r\n}\r\n\r\n  setData (e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n      })\r\n  }\r\n  \r\n  render () {\r\n    let { handleSubmit, pristine, reset, submitting, categories, job } = this.props\r\n    return (\r\n      <div>\r\n        <JobForm2 \r\n          handleSubmit={handleSubmit}\r\n          pristine={pristine}\r\n          reset={reset}\r\n          submitting={submitting}\r\n          categories={categories}\r\n          setData={this.setData}\r\n          job={job}\r\n          jobDate={this.state.jobDate} />\r\n        <div>\r\n          <button className='btn btn-primary'\r\n            onClick={handleSubmit}\r\n            disabled={pristine || submitting}>\r\n            Сохранить\r\n          </button>\r\n          <button className='btn btn-primary'\r\n            onClick={this.props.clickJobEdit}\r\n            data-id={null}\r\n          >\r\n            назад\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nJobUpdateForm = reduxForm({\r\n  form: 'jobUpdate', // a unique identifier for this form\r\n})(JobUpdateForm)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { JobFirstCreateForm } from '../components/JobForms';\r\n\r\n// actions\r\nimport JobsActions from '../redux/redux-sauce/jobs';\r\n\r\n\r\nclass JobFirstCreateShop extends Component {\r\n  constructor(props) {\r\n    super(props);  \r\n    this.state = {\r\n    }\r\n\r\n  this.submitCreateShop = this.submitCreateShop.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getCategories()\r\n  }\r\n\r\n  submitCreateShop(e){\r\n    e.preventDefault()\r\n    this.props.createFirstJob(this.props.state.form.jobFirstCreate.values)\r\n    this.props.history.push(\"/zakazchik/account/\")\r\n  }\r\n\r\n  render() {\r\n    let { user } = this.props\r\n    const { categories } = this.props.state.jobs\r\n    return (\r\n      user && user.zakazchik ?\r\n      <Redirect\r\n            to={{pathname: \"/zakazchik/account/\", }}\r\n          />\r\n      :\r\n      <div className='container-fluid shop-create'>\r\n        <h4>\r\n          Создание работы. Слизано с ремонтника.\r\n        </h4>\r\n        <JobFirstCreateForm shopName={''} shopPhone={''} shopInfo={''} handleSubmit={this.submitCreateShop}\r\n          user={user} categories={categories}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  routing: state.routing,\r\n  user: state.auth.user\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createFirstJob: id => dispatch(JobsActions.createFirstJobRequest(id)),\r\n  getCategories: id => dispatch(JobsActions.getCategoriesRequest(id)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(JobFirstCreateShop);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Main from '../containers/Main';\r\n\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nclass ViberAuthenticationComponent extends Component {\r\n    componentDidMount() {\r\n      // const token = localStorage.getItem('token');\r\n      const { token } = this.props.match.params\r\n      const { user } = this.props\r\n      if (!user) {\r\n        this.props.checkToken(token);\r\n      }\r\n    }\r\n\r\n    render() {\r\n      let access = false\r\n      if (this.props.isLoggedIn === true) access = true\r\n      return (\r\n          <div>\r\n              {access\r\n                  ? <Main />\r\n                  : 'Не авторизован'\r\n              }\r\n          </div>\r\n      )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.auth.isLoggedIn,\r\n    user: state.auth.user,\r\n    state: state\r\n});\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViberAuthenticationComponent);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// actions\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction ModalAuth (props){\r\n  return (\r\n    <div className=\"modal fade\" id=\"authModal\" tabIndex=\"-1\" role=\"dialog\" \r\n      aria-labelledby=\"authModalLabel\" aria-hidden=\"true\">\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"authModalLabel\">Войти с помощью</h5>\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <a href='viber://pa?chatURI=dm-eda&context=Chto_za_CONTEXT?&text=войти'>Войти через вайбер</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const { user } = this.props.auth\r\n    if (!user) {\r\n      this.props.checkToken(token);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLoggedIn, user } = this.props.auth\r\n    return (\r\n      <div className='header header-fixed header-logo-left'>\r\n        <Link className='header-title font-20' to='/'>СтройСервис</Link>\r\n        {isLoggedIn ? \r\n          user.zakazchik ?\r\n\r\n              <Link to='/zakazchik/account/'  \r\n                className=\"font-16 float-right mr-3 mt-2 pt-1\">\r\n                  Мои объявления\r\n              </Link>\r\n            :\r\n              <Link to='/zakazchik/create_first/' \r\n                className=\"font-14 mr-3 mt-2 pt-1 float-right\">Создать обьявление</Link>\r\n              \r\n              // <button className='btn btn-m mb-1 ml-1 rounded-xl text-uppercase font-900\r\n              //         shadow-s bg-blue1-dark' onClick={this.props.logout}>Выйти</button>\r\n          :\r\n          <div>\r\n            <button className='btn btn-m mb-1 ml-1 rounded-xl text-uppercase font-900\r\n                     shadow-s bg-blue1-dark' data-toggle=\"modal\" data-target=\"#authModal\">Создать обьявление</button>\r\n            <button className='btn btn-m mb-1 ml-1 rounded-xl text-uppercase font-900\r\n                     shadow-s bg-blue1-dark' data-toggle=\"modal\" data-target=\"#authModal\">Войти</button>\r\n          </div>\r\n        }\r\n        {/* <ModalAuth/> */}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  state: state,\r\n\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n  logout: () => dispatch(AuthActions.logoutRequest()),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { JobCreateForm, JobUpdateForm } from '../components/JobForms';\r\n\r\n// actions\r\nimport JobsActions from '../redux/redux-sauce/jobs';\r\nimport AuthActions from '../redux/redux-sauce/auth';\r\n\r\n\r\nfunction JobEditable (props) {\r\n  const { job, jobEditId, categories } = props\r\n  let category = null\r\n  Object.keys(categories).forEach(key => {\r\n    if (categories[key] == job.category)\r\n      category = key\r\n  })\r\n  let edit = false\r\n  if (job.id == jobEditId) edit = true\r\n\r\n  return (\r\n    <div>\r\n      {edit ?\r\n        <div>\r\n          <JobUpdateForm \r\n            categories={categories}\r\n            handleSubmit={props.clickEditDone}\r\n            job={job}\r\n            initialValues={{\r\n              id: job.id,\r\n              title: job.title, category: category, description: job.description,\r\n              start_date: job.start_date, end_date: job.end_date, budget: job.budget,\r\n              address: job.address\r\n            }}\r\n            clickJobEdit={props.clickJobEdit}\r\n            />\r\n        </div>\r\n        :\r\n        <div className='card card-style my-2 mx-0'>\r\n          <div class=\"content text-left\">\r\n            <h4 className='font-16 font-500 float-left'>{job.title}</h4>\r\n            <h4 className='font-18 float-right'>{job.budget}</h4>\r\n            <div className=\"clearfix\"></div>\r\n            <p className='text-left float-left mb-0 font-12 font-500'>{job.zakazchik}</p>\r\n            <p className='text-left float-right mb-0 font-11 font-500'>{job.category}</p>\r\n            <div className=\"clearfix\"></div>\r\n            <p className=\"text-left mb-0\">\r\n              {job.description}\r\n            </p>\r\n            <p className='text-left float-left mb-0'>{job.address}</p>\r\n            {job.start_date ? \r\n                <p className='text-left float-right mb-0'>c {job.start_date} до {job.end_date}</p>\r\n                :\r\n                job.end_date ?\r\n                  <p className='text-left float-right mb-0'>До {job.end_date}</p>\r\n                  :\r\n                  <p className='text-left float-right mb-0'>В любое время</p>\r\n              }\r\n            <div className=\"clearfix\"></div>\r\n            <p className='text-left font-10 mb-1'>{job.created_ago}</p>\r\n            <button className='btn btn-xs mb-1 ml-1 rounded-xl text-uppercase font-900 shadow-s\r\n              bg-blue2-light text-wrap' data-id={job.id} onClick={props.clickJobEdit}>\r\n                Изменить\r\n            </button>\r\n            <button className='btn btn-xs mb-1 ml-1 rounded-xl text-uppercase font-900 shadow-s\r\n              bg-red2-light text-wrap float-right' data-id={job.id} onClick={props.clickDeactivate}>\r\n              Сделать неактивной\r\n            </button>\r\n            <div className=\"clearfix\"></div>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nclass JobsEditable extends Component {\r\n  constructor(props) {\r\n    super(props);  \r\n    this.state = {\r\n      jobsEditList: [],\r\n      jobEditId: null,\r\n      needToRefresh: false\r\n    }\r\n\r\n  this.clickJobEdit = this.clickJobEdit.bind(this);\r\n  this.clickEditDone = this.clickEditDone.bind(this);\r\n  this.clickDeactivate = this.clickDeactivate.bind(this);\r\n  this.clickCreateNew = this.clickCreateNew.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  clickJobEdit (e) {\r\n    const { id } = e.target.dataset    \r\n    this.setState({...this.state, \r\n      jobEditId: id\r\n    })\r\n  }\r\n\r\n  clickEditDone () {\r\n    const { values } = this.props.form.jobUpdate\r\n    this.props.partialUpdateJob(values)\r\n    this.setState({...this.state, \r\n      jobEditId: null,\r\n      needToRefresh: true\r\n    })\r\n  }\r\n\r\n  clickDeactivate (e) {\r\n    const { id } = e.target.dataset  \r\n    this.props.activateDeactivateJob({id: id, active: false})\r\n    this.setState({...this.state, \r\n      jobEditId: null,\r\n      needToRefresh: true\r\n    })\r\n  }\r\n\r\n  clickCreateNew() {\r\n    const { values } = this.props.form.jobCreate\r\n    this.props.createJob(values)\r\n    this.setState({...this.state, \r\n      jobEditId: null,\r\n      needToRefresh: true\r\n    })\r\n  }\r\n\r\n  refreshSowsList () {\r\n    if (!this.props.eventFetching && this.state.needToRefresh){\r\n      setTimeout(() => {\r\n        this.setState({...this.state, needToRefresh: false})\r\n        this.props.getJobs({zakazchik: this.props.user.id})\r\n      }, 10)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.refreshSowsList()\r\n    const { jobs, user, categories } = this.props\r\n    const { jobEditId } = this.state\r\n    return (\r\n      <div className=''>\r\n        {jobs.length > 0 && jobs.map(job => \r\n          <JobEditable \r\n            job={job}\r\n            jobEditId={jobEditId}\r\n            clickJobEdit={this.clickJobEdit} \r\n            clickEditDone={this.clickEditDone}\r\n            clickDeactivate={this.clickDeactivate}\r\n            categories={categories}\r\n            key={job.id}\r\n          />\r\n        )}\r\n        <div className=\"card card-style mb-3 mx-0\">\r\n          {jobs.length < 2 && user ? \r\n              <div className=\"content\">\r\n                <h3 className='font-18 font-500 text-center'>Создать работу</h3>\r\n                <JobCreateForm \r\n                    categories={categories}\r\n                    handleSubmit={this.clickCreateNew}\r\n                    initialValues={{\r\n                      zakazchik: user ? user.id : null, start_date: null, end_date: null, address: 'Улан-Удэ'\r\n                    }}\r\n                  />\r\n              </div>\r\n            :\r\n            <p className='font-18 font-500 text-left'>\r\n              У вас больше 2х активных работ.\r\n            </p>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass ZakazchikAcc extends Component {\r\n  constructor(props) {\r\n    super(props);  \r\n    this.state = {\r\n    }\r\n\r\n  this.submitCreateShop = this.submitCreateShop.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user_id = localStorage.getItem('user_id');\r\n    this.props.getJobs({zakazchik: user_id})\r\n  }\r\n\r\n  submitCreateShop(e){\r\n    e.preventDefault()\r\n    this.props.createFirstJob(this.props.state.form.jobCreate.values)\r\n  }\r\n\r\n  render() {\r\n    let { user } = this.props\r\n    const { categories, jobs } = this.props.state.jobs\r\n    const { listFetching } = this.props.state.jobs\r\n    return (\r\n      <div className='container-fluid shop-create'>\r\n        <h4>\r\n          Кабинет заказчика\r\n        </h4>\r\n        {listFetching ?\r\n          <p>Loading</p>\r\n          :\r\n          <JobsEditable \r\n            user={user} \r\n            form={this.props.form}\r\n            categories={categories}\r\n            eventFetching={this.props.state.jobs.eventFetching}\r\n            jobs={jobs}\r\n            getJobs={this.props.getJobs}\r\n            partialUpdateJob={this.props.partialUpdateJob}\r\n            activateDeactivateJob={this.props.activateDeactivateJob}\r\n            createJob={this.props.createJob}/>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  state: state,\r\n  routing: state.routing,\r\n  user: state.auth.user,\r\n  jobs: state.jobs.jobs,\r\n  form: state.form\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  createFirstJob: id => dispatch(JobsActions.createFirstJobRequest(id)),\r\n  partialUpdateJob: id => dispatch(JobsActions.partialUpdateJobRequest(id)),\r\n  activateDeactivateJob: id => dispatch(JobsActions.activateDeactivateJobRequest(id)),\r\n  getJobs: query => dispatch(JobsActions.getJobsRequest(query)),\r\n  createJob: id => dispatch(JobsActions.createJobRequest(id)),\r\n\r\n  checkToken: (token) => dispatch(AuthActions.checkTokenRequest(token)),\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ZakazchikAcc);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { browserHistory } from 'react-router';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './redux/store/';\r\n\r\n// Containers\r\nimport Main from './containers/Main'\r\nimport JobFirstCreateShop from './containers/CreateFirstJob'\r\nimport ViberAuthenticationComponent from './containers/ViberLogin'\r\nimport Header from './containers/HeaderContainer'\r\nimport ZakazchikAcc from './containers/ZakazchikAcc'\r\n\r\n// components\r\n\r\nconst store = configureStore()\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      {/* Loader Component */}\r\n      {/* <div id=\"preloader\"><div class=\"spinner-border color-highlight\" role=\"status\"></div></div> */}\r\n      <div className='app' id=\"page\">\r\n        <Header />\r\n        {/* <div id=\"footer-bar\" className=\"footer-bar-5\">\r\n          <Link to=\"/\"><i data-feather=\"heart\" data-feather-line=\"1\" data-feather-size=\"21\" data-feather-color=\"red2-dark\" data-feather-bg=\"red2-fade-light\"></i><span>Features</span></Link>\r\n          <Link to=\"/\"><i data-feather=\"image\" data-feather-line=\"1\" data-feather-size=\"21\" data-feather-color=\"green1-dark\" data-feather-bg=\"green1-fade-light\"></i><span>Media</span></Link>\r\n          <Link to=\"/\" className=\"active-nav\"><i data-feather=\"home\" data-feather-line=\"1\" data-feather-size=\"21\" data-feather-color=\"blue2-dark\" data-feather-bg=\"blue2-fade-light\"></i><span>Home</span></Link>\r\n          <Link to=\"/\"><i data-feather=\"file\" data-feather-line=\"1\" data-feather-size=\"21\" data-feather-color=\"brown1-dark\" data-feather-bg=\"brown1-fade-light\"></i><span>Pages</span></Link>\r\n          <Link to=\"/\"><i data-feather=\"settings\" data-feather-line=\"1\" data-feather-size=\"21\" data-feather-color=\"gray2-dark\" data-feather-bg=\"gray2-fade-light\"></i><span>Settings</span></Link>\r\n        </div> */}\r\n        <div className=\"page-content header-clear\">\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Main />\r\n            </Route>\r\n            <Route path=\"/zakazchik/create_first/\" component={JobFirstCreateShop} />\r\n            <Route path=\"/zakazchik/account/\" component={ZakazchikAcc} />\r\n            <Route path=\"/dm/login/v/:token\" component={ViberAuthenticationComponent} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  </Provider>, document.getElementById('root')\r\n);","import _ from 'lodash';\r\n\r\nexport const toggleArray = (arr: Array<String>, string: string) => {\r\n    if (arr.indexOf(string) === -1) {\r\n      return [...arr, string]\r\n    } else {\r\n      return arr.filter(item => item !== string)\r\n    }\r\n  }\r\n\r\nexport const lodashToggle = (array, item) => _.xor(array, [item])\r\n\r\nexport const toggleArrayLocations = (arr: Array<Object>, location: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (_.isEqual(arr[i], location)){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, location]\r\n  }\r\n}\r\n\r\nexport const addItemToArray = (arr: Array<String>, string: string) => {\r\n    return [...arr, string]\r\n  }\r\n\r\nexport const removeItemFromArray = (arr: Array<String>, string: string) => {\r\n    return arr.filter(item => item !== string)\r\n}\r\n\r\nexport const uniq = a => [...new Set(a)]\r\n\r\n\r\nexport const convertSowsByTours2 = (sowsByToursElemList) => {\r\n  let outputDict = {};\r\n  sowsByToursElemList.map((listElem) => {\r\n    let columns = {};\r\n    outputDict[listElem['tour']['id']] = columns;\r\n    columns['count'] = listElem['count'];\r\n    columns['checked'] = false;\r\n    columns['rows'] = {};\r\n    listElem['sows'].map(sowElem => {\r\n      columns['rows'][sowElem['farm_id']] = {}\r\n      columns['rows'][sowElem['farm_id']]['active'] = false\r\n      columns['rows'][sowElem['farm_id']]['id'] = sowElem['id']\r\n      columns['rows'][sowElem['farm_id']]['status'] = sowElem['status']\r\n    });\r\n  });\r\n  return outputDict\r\n}\r\n\r\nexport const convertSowsByTours = (sowsByToursElemList) => {\r\n  let outputDict = {};\r\n  sowsByToursElemList.map((listElem) => {\r\n    let columns = {};\r\n    outputDict[listElem['title']] = columns;\r\n    columns['count'] = listElem['count'];\r\n    columns['checked'] = false;\r\n    columns['rows'] = {};\r\n    listElem['sows'].map(sowElem => {\r\n      columns['rows'][sowElem['id']] = {}\r\n      columns['rows'][sowElem['id']]['active'] = false\r\n      columns['rows'][sowElem['id']]['id'] = sowElem['id']\r\n      columns['rows'][sowElem['id']]['status'] = sowElem['status']\r\n      columns['rows'][sowElem['id']]['farm_id'] = sowElem['farm_id']\r\n    });\r\n  });\r\n  return outputDict\r\n}\r\n\r\n\r\nexport const getObjectbyId = (list, id) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element['id'] == id)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const getObjectInListbyFieldValue = (list, field, value) => {\r\n  let obj = null\r\n  list.map(element => {\r\n    if (element[field] == value)\r\n      obj = element\r\n  })\r\n  return obj\r\n}\r\n\r\nexport const toggleArrayDictById= (arr: Array<Object>, obj: Object) => {\r\n  let alreadyIn = false;\r\n  let index = -1;\r\n\r\n  for (var i = 0; i < arr.length; i++){\r\n    if (arr[i].id === obj.id){\r\n      alreadyIn = true;\r\n      index = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (alreadyIn){\r\n    arr.splice(index, 1);\r\n    return arr\r\n  } else {\r\n    return [...arr, obj]\r\n  }\r\n}","import { createReducer, createActions } from 'reduxsauce'\r\nimport Immutable from 'seamless-immutable'\r\n\r\n\r\n/* ------------- Types and Action Creators ------------- */\r\nconst { Types, Creators } = createActions({\r\n    getJobsRequest: ['payload'],\r\n    getJobsFail: ['payload'],\r\n    getJobsSuccess: ['payload'],\r\n\r\n    getJobDetailRequest: ['payload'],\r\n    getJobDetailFail: ['error'],\r\n    getJobDetailSuccess: ['payload'],\r\n\r\n    getCategoriesRequest: ['payload'],\r\n    getCategoriesFail: ['payload'],\r\n    getCategoriesSuccess: ['payload'],\r\n\r\n    createFirstJobRequest: ['payload'],\r\n    createFirstJobFail: ['payload'],\r\n    createFirstJobSuccess: ['payload'],\r\n\r\n    partialUpdateJobRequest: ['payload'],\r\n    partialUpdateJobFail: ['payload'],\r\n    partialUpdateJobSuccess: ['payload'],\r\n\r\n    activateDeactivateJobRequest: ['payload'],\r\n    activateDeactivateJobFail: ['payload'],\r\n    activateDeactivateJobSuccess: ['payload'],\r\n\r\n    createJobRequest: ['payload'],\r\n    createJobFail: ['payload'],\r\n    createJobSuccess: ['payload'],\r\n})\r\n\r\nexport const JobsTypes = Types\r\nexport default Creators\r\n\r\n\r\n/* ------------- Initial State ------------- */\r\nexport const INITIAL_STATE = Immutable({\r\n    listFetching: false,\r\n    jobs: [],\r\n    categories: [],\r\n    errorList: null,\r\n\r\n    detailFetching: null,\r\n    jobDetail: null,\r\n    errorDetail: null,\r\n\r\n    eventFetching: null,\r\n\r\n    message: '',\r\n})\r\n\r\n\r\n/* ------------- Selectors ------------- */\r\nexport const JobsSelectors = {\r\n    getJobs: state => state.jobs.job_list,\r\n    getCategories: state => state.jobs.categories,\r\n    createJob: state => state.jobs.jobDetail,\r\n}\r\n\r\n\r\n/* ------------- Reducers ------------- */\r\n// Get Jobs\r\nexport const getJobsRequest = (state, { payload }) => {\r\n    return state.merge({ listFetching: true, jobs: [] })\r\n}\r\n\r\nexport const getJobsSuccess = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList: null, jobs: payload.results,\r\n         categories: payload.categories })\r\n}\r\n\r\nexport const getJobsFail = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList: payload, jobs: [] })\r\n}\r\n\r\n// Get one\r\nexport const getJobDetailRequest = (state, { payload }) => {\r\n    return state.merge({ detailFetching: true, })\r\n}\r\n\r\nexport const getJobDetailSuccess = (state, { payload }) => {\r\n    return state.merge({ detailFetching: false, errorDetail: null, jobDetail: payload})\r\n}\r\n\r\nexport const getJobDetailFail = (state, { error }) => {\r\n    return state.merge({ detailFetching: false, errorDetail: error, jobDetail: null })\r\n}\r\n\r\n// Get categories\r\nexport const getCategoriesRequest = (state, { payload }) => {\r\n    return state.merge({ listFetching: true, categories: [] })\r\n}\r\n\r\nexport const getCategoriesSuccess = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList: null, categories: payload })\r\n}\r\n\r\nexport const getCategoriesFail = (state, { payload }) => {\r\n    return state.merge({ listFetching: false, errorList:payload, categories: [] })\r\n}\r\n\r\n// create first job\r\nexport const createFirstJobRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const createFirstJobSuccess = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message })\r\n}\r\n\r\nexport const createFirstJobFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n// partial update job\r\nexport const partialUpdateJobRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const partialUpdateJobSuccess = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message })\r\n}\r\n\r\nexport const partialUpdateJobFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n// activateDeactivate job\r\nexport const activateDeactivateJobRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const activateDeactivateJobSuccess = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message })\r\n}\r\n\r\nexport const activateDeactivateJobFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n// create job\r\nexport const createJobRequest = (state, { payload }) => {\r\n    return state.merge({ eventFetching: true, message: '' })\r\n}\r\n\r\nexport const createJobSuccess = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList: null, message: payload.message, \r\n        jobDetail: payload.job })\r\n}\r\n\r\nexport const createJobFail = (state, { payload }) => {\r\n    return state.merge({ eventFetching: false, errorList:payload, message: '' })\r\n}\r\n\r\n/* ------------- Hookup Reducers To Types ------------- */\r\n\r\nexport const reducer = createReducer(INITIAL_STATE, {\r\n    [Types.GET_JOBS_REQUEST]: getJobsRequest,\r\n    [Types.GET_JOBS_SUCCESS]: getJobsSuccess,\r\n    [Types.GET_JOBS_FAIL]: getJobsFail,\r\n\r\n    [Types.GET_JOB_DETAIL_REQUEST]: getJobDetailRequest,\r\n    [Types.GET_JOB_DETAIL_SUCCESS]: getJobDetailSuccess,\r\n    [Types.GET_JOB_DETAIL_FAIL]: getJobDetailFail,\r\n\r\n    [Types.GET_CATEGORIES_REQUEST]: getCategoriesRequest,\r\n    [Types.GET_CATEGORIES_SUCCESS]: getCategoriesSuccess,\r\n    [Types.GET_CATEGORIES_FAIL]: getCategoriesFail,\r\n\r\n    [Types.CREATE_FIRST_JOB_REQUEST]: createFirstJobRequest,\r\n    [Types.CREATE_FIRST_JOB_SUCCESS]: createFirstJobSuccess,\r\n    [Types.CREATE_FIRST_JOB_FAIL]: createFirstJobFail,\r\n\r\n    [Types.PARTIAL_UPDATE_JOB_REQUEST]: partialUpdateJobRequest,\r\n    [Types.PARTIAL_UPDATE_JOB_SUCCESS]: partialUpdateJobSuccess,\r\n    [Types.PARTIAL_UPDATE_JOB_FAIL]: partialUpdateJobFail,\r\n\r\n    [Types.ACTIVATE_DEACTIVATE_JOB_REQUEST]: activateDeactivateJobRequest,\r\n    [Types.ACTIVATE_DEACTIVATE_JOB_SUCCESS]: activateDeactivateJobSuccess,\r\n    [Types.ACTIVATE_DEACTIVATE_JOB_FAIL]: activateDeactivateJobFail,\r\n\r\n    [Types.CREATE_JOB_REQUEST]: createJobRequest,\r\n    [Types.CREATE_JOB_SUCCESS]: createJobSuccess,\r\n    [Types.CREATE_JOB_FAIL]: createJobFail,\r\n})\r\n"],"sourceRoot":""}